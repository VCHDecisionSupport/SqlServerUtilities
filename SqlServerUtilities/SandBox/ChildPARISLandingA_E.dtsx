<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/18/2015"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="V0032704"
  DTS:CreatorName="VCH\dcampbell2"
  DTS:DTSID="{367EFA55-423F-41F8-B2F9-3EF123287799}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="Microsoft.Package"
  DTS:ForceExecValue="True"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="ChildPARISLandingA_E"
  DTS:PackageType="5"
  DTS:SuppressConfigurationWarnings="True"
  DTS:VersionBuild="59"
  DTS:VersionGUID="{8478BFC2-C973-4620-9700-2D8D76E009B2}"
  DTS:VersionMajor="11809"
  DTS:VersionMinor="1">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Community]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{0AF36EF3-136D-43D6-AC41-AF5F1255E63D}"
      DTS:ObjectName="Community">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::CommunityConnectionString]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=SDDBSPAR001;Initial Catalog=Community;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ConfigurationServer.msdb]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{30BF1AC5-A312-4632-B390-56A0DA6CC4FE}"
      DTS:ObjectName="ConfigurationServer.msdb">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=ConfigurationServer;Initial Catalog=msdb;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DQMF]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{EE72B539-C83D-4DBF-9190-63C2D86CDF6A}"
      DTS:ObjectName="DQMF">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::DQMFConnectionString]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=SDDBSPAR001;Initial Catalog=DQMF;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DSDW]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{BADF1C59-117C-488F-AE43-B645BEA2094E}"
      DTS:ObjectName="DSDW">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::DSDWConnectionString]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=SDDBSPAR001;Initial Catalog=DSDW;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Landing]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{420F3266-9DA0-4FA8-AAD0-901BE50B5696}"
      DTS:ObjectName="Landing">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::LandingConnectionString]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=SDDBSPAR001;Initial Catalog=Landing;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PARIS]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{9D5D5271-9E5E-424D-9DA0-06DFAFA11EA7}"
      DTS:ObjectName="PARIS">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::PARISConnectionString]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=PARISVD2;User Id=cnevfnqzva;Provider=OraOLEDB.Oracle.1;Persist Security Info=True;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAWorcjMBgM0q/ThPQ6m/oowAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAACcqmOlvoWA2GyY9ALRSe9/cNAVl/aPUEzDK8oHzVHcfAAAAAAOgAAAAAIAACAAAAAbyxYzWLVWGWrzAkC80kDxQIgm//48LKeGL4DpoJLWmyAAAABtUTNb+tqEtn6EIdLX7CQUQTD/MgToSW4Ce46mvy+4gUAAAAB0aIdDU/6gfbeHOogMRFU7d6XMwDsbpGS5+B2a7RMNnZ/eu4kAr6Eg7XMhIsxxH1hIt2GFewDRz1UDcCpvXuny</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[VGH Exchange]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{0A57552B-EF0F-4E54-8A5D-F6A0721C35D7}"
      DTS:ObjectName="VGH Exchange">
      <DTS:PropertyExpression
        DTS:Name="SmtpServer">@[User::SMTPServer]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=SMTP.healthbc.org;UseWindowsAuthentication=True;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="&quot;ConfigurationServer.msdb&quot;;&quot;[dbo].[SSIS_Config]&quot;;&quot;LoadPARISLanding.dtsx&quot;;"
      DTS:ConfigurationType="7"
      DTS:CreationName=""
      DTS:DTSID="{6F7E4054-6360-43C3-9912-4B2B8194BBAA}"
      DTS:ObjectName="LoadPARISLanding" />
    <DTS:Configuration
      DTS:ConfigurationString="BatchID"
      DTS:ConfigurationVariable="\Package.Variables[User::BatchID].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{B093DD06-740D-4225-8F3F-34E611A6E10A}"
      DTS:ObjectName="BatchID" />
  </DTS:Configurations>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{300391FC-9ACC-4520-BB16-7E6E98499D4D}"
      DTS:ObjectName="ProcessUDFDictionary_Disable"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3C0AAAAA-15DA-4527-9691-ED6CCD8DA877}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ACISMedicationCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DF71B08E-3D19-453D-AC9A-F2E3572AFA15}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="AddressCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{090D9E57-FD67-4F41-857E-9BB2EAF97EC9}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ALClientNeedsCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{15F1C101-EAA8-489E-9316-E910864A5EC8}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="AlertCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3ABA2973-7B3F-4D8F-948E-5A139BD38BC7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="AssessmentAbuseCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F98E995A-2D54-47DC-A63A-3F82FA89C523}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="AssessmentContactCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{145D9DE8-F320-4001-A73D-FC6235F83096}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="AssessmentHeaderCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{16BF64EE-F7F6-424C-99E9-094715C9427E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="BatchID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B3BEE208-7658-4199-B9AB-C54290C4C4C1}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CareLevelCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{86A7A781-0EEE-4279-8130-BA1C2300E4AC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CarePlanHeaderCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{423971D0-F8F2-4CA9-95F4-09AD578D0EA7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CarePlanNeedCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7AD64A49-6236-406F-AA29-F3904348AF21}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CarePlanPatternCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3D599248-B159-45BD-B751-5FC4752FDC22}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CarePlanProfileCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DE2EE4CA-3B53-4BDD-9777-34D5AF26625F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CasenoteAbuseCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{23733FB2-FC5B-4325-8DAD-E6B588824856}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CasenoteClinicalServiceCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{30317ED3-4BCA-424A-95B6-7FBA84C37BD8}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CasenoteContactCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FADD1F02-2D71-459B-A601-6BBFC9E27B95}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CasenoteContactHCCCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6B359AD1-8431-4845-BD8B-3ACB099B6CDE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CaseNoteGroupAttendanceCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4B4E4A05-3565-4367-B812-5CCFD71B487E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CaseNoteHeaderCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B9FF72FB-B443-40D6-9E62-86FE271C6CBC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CDAddressAtTimeOfCaseCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B972B345-A489-42B1-A4D4-B3971CF8128E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CDExposureCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FB17D9B4-4D46-4110-A5BC-C6A84AD48040}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CDLabReportCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{93F1AB05-A28A-4079-8243-C0A1BD408A2C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CDPreviousTestResultCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7B641A27-7AA3-4F54-813F-DEA0E3347117}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CDPublicHealthMeasureCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1389AA83-F5FF-4797-8021-F3CDCE5479BB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CDRabiesCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CAB4AA69-2804-4D1C-BE7F-3730B40EF685}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CDTestResultCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C618AB17-68B8-47DD-98C1-ACDAEED4EAF2}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CDTransmissionFollowupCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F13C7F76-A4F6-49C2-A40B-140200DCAAEE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ClientCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1AC6880D-4345-415C-BFF5-F96FFC878AE2}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ClientContributionCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7CDB5F24-A5F0-4555-A450-3A0D7867675D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ClientGPCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DD8556A8-00F5-4C79-B973-237B3FCEBB96}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ClientGroupCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{955EEBA7-98E7-4131-A11B-AC588C4BFE9C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ClientRegisterCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CD238F33-75F2-4C19-AD9D-96A94D4ACD30}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=&quot; + @[User::DWServer] + &quot;;Initial Catalog=Community;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CommunityConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=SDDBSPAR001;Initial Catalog=Community;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0D527294-7826-451A-A7A0-D492ABE86397}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CoreGroupCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7AAF72C7-40A1-4155-B428-BE33C6388EF9}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CoreGroupInhouseCNCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{17A989F6-8067-4143-A6FC-B8B0C777B610}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CriminalJusticeCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F6010CE3-B7FB-4A6D-B749-E7D6FF468DB8}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentLocationCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4C7EE67D-3AAA-4605-81EA-3C3B63453C5F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DeathCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B17E8A6B-C8B7-4A62-9A16-E64B26A1A2C4}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DiagnosisCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CB3B23FC-A3D4-44F2-AB2F-F94113CBA95C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="DischargeCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9EC22591-C45E-4368-87D0-F00C8334B2B4}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=&quot; + @[User::DWServer] + &quot;;Initial Catalog=DQMF;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DQMFConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=SDDBSPAR001;Initial Catalog=DQMF;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EA18CF2C-DAA2-4C8E-9FCB-48325EE8A623}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=&quot; + @[User::DWServer] + &quot;;Initial Catalog=DSDW;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DSDWConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=SDDBSPAR001;Initial Catalog=DSDW;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8A7F9A48-60FD-4A7F-A5AB-D8AB59B15E0D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DWServer">
      <DTS:VariableValue
        DTS:DataType="8">SDDBSPAR001</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CE6F3DC1-AF16-449E-8024-3F07523A8F9E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="EmploymentCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{675EFD61-B69F-4332-901C-5E7AE1933394}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="EPDSCnt">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DE4EA5A9-DBF2-44AE-975A-02C3A87B0D45}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_DATE)(DT_DBDATE)DATEADD(&quot;day&quot;,-1,GETDATE())"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExtractDate">
      <DTS:VariableValue
        DTS:DataType="7">11/18/2016</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4884BE14-88D8-4D9A-9CE6-F89CEBDDFE78}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ExtractFileID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D7CBA922-28DB-42E0-943C-1711608D30F6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ExtractStartDate">
      <DTS:VariableValue
        DTS:DataType="7">6/26/2015 7:14:00 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{03FA3EFB-131F-4496-9B8E-22AE7AA553E5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExtractStartDateString">
      <DTS:VariableValue
        DTS:DataType="8">2015-06-01</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F6852565-50AC-44B0-ACFD-4C8C35602A8D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="IsActive">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{47B55E4E-6CDF-476D-A57F-3CE61D81A446}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="JobFailEmail">
      <DTS:VariableValue
        DTS:DataType="8">Derrick.Campbell@vch.ca</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A980CF3E-46F0-4619-9DDD-EE24C62B8964}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="JobSuccessEmail">
      <DTS:VariableValue
        DTS:DataType="8">Derrick.Campbell@vch.ca</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E3514C2B-AF91-438C-9067-3785D9C0B544}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=&quot; + @[User::DWServer] + &quot;;Initial Catalog=Landing;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LandingConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=SDDBSPAR001;Initial Catalog=Landing;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ECEE9487-A7C0-4D58-B23B-DC2C9FF0E009}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OracleServer">
      <DTS:VariableValue
        DTS:DataType="8">PARISVD2</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9AB7ED1C-614F-45D8-889F-51FEFFE08D9F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="OracleServerTEST">
      <DTS:VariableValue
        DTS:DataType="8">PARISVRP</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5182565D-0618-4A52-B603-D335D2F6145D}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=&quot; + @[User::OracleServer] + &quot;;Provider=OraOLEDB.Oracle.1;User Id=cnevfnqzva;Password=civica123;Persist Security Info=True;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PARISConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=PARISVD2;Provider=OraOLEDB.Oracle.1;User Id=cnevfnqzva;Password=civica123;Persist Security Info=True;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D3E495CD-C6F2-4987-A596-03A367170F48}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=&quot; + @[User::OracleServer] + &quot;;Provider=MSDAORA.1;User Id=cnevfnqzva;Password=c1v1ca3863;Persist Security Info=True;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PARISConnectionString2">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=PARISVD2;Provider=MSDAORA.1;User Id=cnevfnqzva;Password=c1v1ca3863;Persist Security Info=True;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F4221200-172F-4A1D-B506-CD447854BF1E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;Data Source=&quot; + @[User::OracleServerTEST] + &quot;;Provider=OraOLEDB.Oracle.1;User Id=cnevfnqzva;Password=civica123;Persist Security Info=True;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PARISConnectionTESTString">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=PARISVRP;Provider=OraOLEDB.Oracle.1;User Id=cnevfnqzva;Password=civica123;Persist Security Info=True;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A8580E9F-C513-4928-BE37-31D8C6ED7842}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="(DT_DATE)  @[User::PARISLastUpdateDateStr]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PARISLastUpdateDate">
      <DTS:VariableValue
        DTS:DataType="7">2/4/2015</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{98C0F2CF-516A-4C57-A976-BAE434CD2609}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PARISLastUpdateDateStr">
      <DTS:VariableValue
        DTS:DataType="8">2015-02-04</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{90FDAA97-A233-4177-9B6D-FDA97C8B07F8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SMTPServer">
      <DTS:VariableValue
        DTS:DataType="8">SMTP.healthbc.org</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B66A62A2-BF46-4AF6-BF52-676322F2399E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA; 'mpiu_acismed' UDFTable&#xA;,NVL(TO_CHAR(tbou_per_id),' ') SourceSystemClientIDStr &#xA;,NVL(tbou_udfteam,' ') teamcode  &#xA;,NVL(TO_CHAR(tbou_id),' ')  SourceRecordIDStr &#xA;,NVL(tbou_form_type,' ') form_type&#xA;,NVL(TO_CHAR(tbou_form_id),' ') formid&#xA;,NVL(tbou_pft,' ')  parent_form_type&#xA;,NVL(TO_CHAR(tbou_pfi),' ') parent_formid &#xA;,NVL(tbou_scode,' ') assessed_by_staffcode &#xA;,NVL(TO_CHAR(s1.stf_per_id),' ') assessed_by_staffid &#xA;,NVL(TO_CHAR(tbou_daterec, 'YYYYMMDD'),' ') assessment_dateidStr  &#xA;,NVL(tbou_acismt,' ') medication_type /* L_ACISMT */   &#xA;,NVL(tbou_dru_med,' ') medication_code /* L_DRU_MED*/&#xA;,NVL(tbou_icyc,' ') birth_control_medication /* L_ICYC */&#xA;,NVL(tbou_dose,' ') dose &#xA;,NVL(tbou_duration,' ') duration&#xA;,NVL(tbou_dru_freq,' ') frequency /* L_DRU_FREQ */&#xA;,NVL(tbou_dru_route,' ') drug_route/* L_DRU_ROUT */&#xA;,NVL(TO_CHAR(tbou_stdate, 'YYYYMMDD'),' ') start_dateStr &#xA;,NVL(TO_CHAR(tbou_edate, 'YYYYMMDD'),' ') end_dateStr &#xA;,NVL(TO_CHAR(tbou_dt_stdate, 'YYYYMMDD'),' ') start_dateStr2  &#xA;,NVL(TO_CHAR(tbou_dt_edate, 'YYYYMMDD'),' ') end_dateStr2 &#xA;,NVL(tbou_yesonly,' ') void_flag &#xA;,NVL(tbou_prn,' ') PRN /* means take as needed */&#xA;,NVL(tbou_madr,' ') MADR&#xA;,NVL(tbou_yesno2,' ') medication_in_home &#xA;,TO_CHAR(tbou_created_on, 'YYYYMMDD') created_on  &#xA;,NVL(s2.stf_code,' ' )      Created_Staff_Code&#xA;,NVL(TO_CHAR(tbou_created_by),' ') created_by  &#xA;,TO_CHAR(tbou_amended_on, 'YYYYMMDD') amended_on  &#xA;,NVL(TO_CHAR(tbou_amended_by),' ') amended_by  &#xA;,NVL(s3.stf_code,' ')       Amended_Staff_Code&#xA;from paris.mpiu_acismed m&#xA;LEFT OUTER JOIN paris.stf_staff s1&#xA;ON m.tbou_scode = s1.stf_code &#xA;LEFT OUTER JOIN paris.stf_staff s2&#xA;on m.tbou_created_by = s2.stf_per_id&#xA;LEFT OUTER JOIN paris.stf_staff s3&#xA;on m.tbou_amended_by = s3.stf_per_id&#xA;WHERE NVL(m.tbou_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;and m.tbou_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLACISMedicationStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
 'mpiu_acismed' UDFTable
,NVL(TO_CHAR(tbou_per_id),' ') SourceSystemClientIDStr 
,NVL(tbou_udfteam,' ') teamcode  
,NVL(TO_CHAR(tbou_id),' ')  SourceRecordIDStr 
,NVL(tbou_form_type,' ') form_type
,NVL(TO_CHAR(tbou_form_id),' ') formid
,NVL(tbou_pft,' ')  parent_form_type
,NVL(TO_CHAR(tbou_pfi),' ') parent_formid 
,NVL(tbou_scode,' ') assessed_by_staffcode 
,NVL(TO_CHAR(s1.stf_per_id),' ') assessed_by_staffid 
,NVL(TO_CHAR(tbou_daterec, 'YYYYMMDD'),' ') assessment_dateidStr  
,NVL(tbou_acismt,' ') medication_type /* L_ACISMT */   
,NVL(tbou_dru_med,' ') medication_code /* L_DRU_MED*/
,NVL(tbou_icyc,' ') birth_control_medication /* L_ICYC */
,NVL(tbou_dose,' ') dose 
,NVL(tbou_duration,' ') duration
,NVL(tbou_dru_freq,' ') frequency /* L_DRU_FREQ */
,NVL(tbou_dru_route,' ') drug_route/* L_DRU_ROUT */
,NVL(TO_CHAR(tbou_stdate, 'YYYYMMDD'),' ') start_dateStr 
,NVL(TO_CHAR(tbou_edate, 'YYYYMMDD'),' ') end_dateStr 
,NVL(TO_CHAR(tbou_dt_stdate, 'YYYYMMDD'),' ') start_dateStr2  
,NVL(TO_CHAR(tbou_dt_edate, 'YYYYMMDD'),' ') end_dateStr2 
,NVL(tbou_yesonly,' ') void_flag 
,NVL(tbou_prn,' ') PRN /* means take as needed */
,NVL(tbou_madr,' ') MADR
,NVL(tbou_yesno2,' ') medication_in_home 
,TO_CHAR(tbou_created_on, 'YYYYMMDD') created_on  
,NVL(s2.stf_code,' ' )      Created_Staff_Code
,NVL(TO_CHAR(tbou_created_by),' ') created_by  
,TO_CHAR(tbou_amended_on, 'YYYYMMDD') amended_on  
,NVL(TO_CHAR(tbou_amended_by),' ') amended_by  
,NVL(s3.stf_code,' ')       Amended_Staff_Code
from paris.mpiu_acismed m
LEFT OUTER JOIN paris.stf_staff s1
ON m.tbou_scode = s1.stf_code 
LEFT OUTER JOIN paris.stf_staff s2
on m.tbou_created_by = s2.stf_per_id
LEFT OUTER JOIN paris.stf_staff s3
on m.tbou_amended_by = s3.stf_per_id
WHERE NVL(m.tbou_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
and m.tbou_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BA05F138-1190-4E6C-AF42-987B68DBAB03}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT &#xA;&#x9;NVL(TO_CHAR(a.add_id),' ') address_id&#xA;   ,NVL(TO_CHAR(l.alk_per_id),' ') paris_id&#xA;   ,NVL(a.add_type,' ') address_type&#xA;   ,NVL(TO_CHAR(a.add_from,'YYYYMMDD'),' ') date_from&#xA;   ,NVL(TO_CHAR(a.add_to,'YYYYMMDD'),' ') date_to&#xA;   ,NVL(TO_CHAR(a.add_current),' ') address_current&#xA;   ,NVL(a.add_line4,' ') city&#xA;   ,NVL(a.add_line5,' ') province&#xA;   ,NVL(a.add_postcode,' ') postal_code&#xA;   ,NVL(a.add_country,' ') country&#xA;   ,NVL(a.add_accom,' ') house_type&#xA;   ,NVL(a.add_line1,' ') address_line1&#xA;   ,NVL(a.add_line2,' ') address_line2&#xA;   ,NVL(a.add_line3,' ') address_line3&#xA;   ,TO_CHAR(a.add_created_on,'YYYYMMDD') created_on&#xA;   ,TO_CHAR(a.add_amended_on,'YYYYMMDD') amended_on&#xA;FROM paris.mpi_address a&#xA;/* outer join linking table to allow team address records*/&#xA;LEFT OUTER JOIN paris.mpi_addr_link l&#xA;ON a.add_id = l.alk_add_id&#xA;&#xA;WHERE a.add_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd') AND NVL(l.alk_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */&#xA;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLAddressStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT 
	NVL(TO_CHAR(a.add_id),' ') address_id
   ,NVL(TO_CHAR(l.alk_per_id),' ') paris_id
   ,NVL(a.add_type,' ') address_type
   ,NVL(TO_CHAR(a.add_from,'YYYYMMDD'),' ') date_from
   ,NVL(TO_CHAR(a.add_to,'YYYYMMDD'),' ') date_to
   ,NVL(TO_CHAR(a.add_current),' ') address_current
   ,NVL(a.add_line4,' ') city
   ,NVL(a.add_line5,' ') province
   ,NVL(a.add_postcode,' ') postal_code
   ,NVL(a.add_country,' ') country
   ,NVL(a.add_accom,' ') house_type
   ,NVL(a.add_line1,' ') address_line1
   ,NVL(a.add_line2,' ') address_line2
   ,NVL(a.add_line3,' ') address_line3
   ,TO_CHAR(a.add_created_on,'YYYYMMDD') created_on
   ,TO_CHAR(a.add_amended_on,'YYYYMMDD') amended_on
FROM paris.mpi_address a
/* outer join linking table to allow team address records*/
LEFT OUTER JOIN paris.mpi_addr_link l
ON a.add_id = l.alk_add_id

WHERE a.add_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') AND NVL(l.alk_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */
</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2603A6DC-7376-4DE6-BC58-D532287EB8DB}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA;    NVL(TO_CHAR(t.alcu_id),' ')         acalcns_id&#xA;    ,NVL(TO_CHAR(t.alcu_ass_id) ,' ')    assessment_id&#xA;    ,NVL(TO_CHAR(t.alcu_sum),' ')        sum_service_minutes&#xA;   ,TO_CHAR(t.alcu_created_on, 'YYYYMMDD')  created_on&#xA;   ,TO_CHAR(t.alcu_amended_on, 'YYYYMMDD')  amended_on&#xA;FROM paris.assu_acalcns t    &#xA;WHERE t.alcu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLALClientNeedsStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
    NVL(TO_CHAR(t.alcu_id),' ')         acalcns_id
    ,NVL(TO_CHAR(t.alcu_ass_id) ,' ')    assessment_id
    ,NVL(TO_CHAR(t.alcu_sum),' ')        sum_service_minutes
   ,TO_CHAR(t.alcu_created_on, 'YYYYMMDD')  created_on
   ,TO_CHAR(t.alcu_amended_on, 'YYYYMMDD')  amended_on
FROM paris.assu_acalcns t    
WHERE t.alcu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F6264D6B-788E-4BD3-952A-252219AEFAA6}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT &#xA;  NVL(TO_CHAR(a.art_id),' ') alert_id&#xA;,NVL(TO_CHAR(a.art_per_id),' ') paris_id&#xA;,NVL(a.art_alert,' ') alert&#xA;,NVL(TO_CHAR(a.art_alerted_on,'YYYYMMDD'),' ') alert_date&#xA;,NVL(TO_CHAR(a.art_inactive_on,'YYYYMMDD'),' ') alert_inac_date&#xA;,TO_CHAR(a.art_created_on,'YYYYMMDD') created_on&#xA;,TO_CHAR(a.art_amended_on,'YYYYMMDD') amended_on&#xA;FROM paris.art_alert a&#xA;WHERE a.art_alert = 'OEL' /* Extended Leave Alerts */&#xA;AND a.art_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLAlertStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT 
  NVL(TO_CHAR(a.art_id),' ') alert_id
,NVL(TO_CHAR(a.art_per_id),' ') paris_id
,NVL(a.art_alert,' ') alert
,NVL(TO_CHAR(a.art_alerted_on,'YYYYMMDD'),' ') alert_date
,NVL(TO_CHAR(a.art_inactive_on,'YYYYMMDD'),' ') alert_inac_date
,TO_CHAR(a.art_created_on,'YYYYMMDD') created_on
,TO_CHAR(a.art_amended_on,'YYYYMMDD') amended_on
FROM paris.art_alert a
WHERE a.art_alert = 'OEL' /* Extended Leave Alerts */
AND a.art_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E070AAFA-BA0B-4C54-B109-8FF3EEC1A308}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;/* 1. MHA ASS VIOL ABUSE AND SUICIDE - MHA ASS VIOL ABUSE AND SUICIDE - paris.assu_mhavisui */&#xA; SELECT &#xA;&#x9;NVL(TO_CHAR(a.vasu_id),' ') assessment_abuse_id&#xA;&#x9;,NVL(TO_CHAR(a.vasu_id),' ')||'A1' assessment_abuse_key&#xA;&#x9;,NVL(TO_CHAR(a.vasu_ass_id),' ') assessment_id&#xA;&#x9;,CASE&#xA;&#x9;   WHEN a.vasu_vio_yes_cli = 1 THEN '01' /* Yes, indicated by client */&#xA;&#x9;   WHEN a.vasu_vio_no = 1 THEN '00' /* No */&#xA;&#x9;   WHEN a.vasu_vio_yes_oth = 1 THEN '02' /* Yes, indicated by other trusted source */&#xA;&#x9;   WHEN a.vasu_vio_unknown = 1 THEN '98' /*  Unknown/not asked */&#xA;&#x9;   ELSE ' '  END violence_abuse&#xA;    ,CASE&#xA;&#x9;   WHEN a.vasu_sui_yes_cli = 1 THEN '01' /* Yes, indicated by client */&#xA;&#x9;   WHEN a.vasu_sui_no = 1 THEN '00' /* No */&#xA;&#x9;   WHEN a.vasu_sui_yes_oth = 1 THEN '02' /* Yes, indicated by other trusted source */&#xA;&#x9;   WHEN a.vasu_sui_unknown = 1 THEN '98'  /*  Unknown/not asked */&#xA;&#x9;   ELSE ' ' END suicide_attempt&#xA;   ,TO_CHAR(a.vasu_created_on,'YYYYMMDD') created_on&#xA;   ,TO_CHAR(a.vasu_amended_on,'YYYYMMDD') amended_on &#xA;   ,'assu_mhavisui' UDFTable&#xA;FROM paris.assu_mhavisui a &#xA;INNER JOIN paris.ass_assessment h &#xA;ON h.ass_id = a.vasu_ass_id  &#xA;WHERE a.vasu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot; +&#xA;&quot; union all &#xA;/* 2. MHA CHILD and YOUTH BRIEF BSFEDU - paris.assu_mhacybbsf     */&#xA;SELECT &#xA;    NVL(TO_CHAR(b.bsfu_id),' ') assessment_abuse_id&#xA;&#x9;,NVL(TO_CHAR(b.bsfu_id),' ')||'A2' assessment_abuse_key&#xA;   ,NVL(TO_CHAR(b.bsfu_ass_id),' ') assessment_id&#xA;   ,CASE&#xA;      WHEN b.bsfu_vio_yes_cli = 1 THEN '01' &#xA;      WHEN b.bsfu_vio_no = 1 THEN '00' &#xA;      WHEN b.bsfu_vio_yes_oth = 1 THEN '02' &#xA;      WHEN b.bsfu_vio_unknown = 1 THEN '98' &#xA;&#x9;  ELSE ' '  END violence_abuse&#xA;    ,CASE&#xA;       WHEN b.bsfu_sui_yes_cli = 1 THEN '01' &#xA;       WHEN b.bsfu_sui_no = 1 THEN '00' &#xA;       WHEN b.bsfu_sui_yes_oth = 1 THEN '02' &#xA;       WHEN b.bsfu_sui_unknown = 1 THEN '98'  &#xA;       ELSE ' ' END suicide_attempt&#xA;   ,TO_CHAR(b.bsfu_created_on,'YYYYMMDD') created_on&#xA;   ,TO_CHAR(b.bsfu_amended_on,'YYYYMMDD') amended_on &#xA;   ,'assu_mhacybbsf' UDFTable&#xA;FROM paris.assu_mhacybbsf b &#xA;INNER JOIN paris.ass_assessment h &#xA;ON h.ass_id  = b.bsfu_ass_id &#xA;WHERE b.bsfu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot; +&#xA;&quot; union all &#xA;/* 3. MHA CCD ADD MED IN MRR - paris.assu_mhacadmrr  */   &#xA;SELECT &#xA;    NVL(TO_CHAR(c.csru_id),' ') assessment_abuse_id&#xA;&#x9;,NVL(TO_CHAR(c.csru_id),' ')||'A3' assessment_abuse_key&#xA;   ,NVL(TO_CHAR(c.csru_ass_id),' ') assessment_id&#xA;   ,CASE&#xA;      WHEN c.csru_vio_yes_cli = 1 THEN '01' &#xA;      WHEN c.csru_vio_no = 1 THEN '00' &#xA;      WHEN c.csru_vio_yes_oth = 1 THEN '02' &#xA;      WHEN c.csru_vio_unknown = 1 THEN '98' &#xA;      ELSE ' ' END violence_abuse&#xA;   ,CASE&#xA;      WHEN c.csru_sui_yes_cli = 1 THEN '01' &#xA;      WHEN c.csru_sui_no = 1 THEN '00' &#xA;      WHEN c.csru_sui_yes_oth = 1 THEN  '02' &#xA;      WHEN c.csru_sui_unknown = 1 THEN '98' &#xA;      ELSE ' ' END suicide_attempt&#xA;   ,TO_CHAR(c.csru_created_on,'YYYYMMDD') created_on&#xA;   ,TO_CHAR(c.csru_amended_on,'YYYYMMDD') amended_on &#xA;   ,'assu_mhacadmrr' UDFTable&#xA;FROM paris.assu_mhacadmrr c &#xA;INNER JOIN paris.ass_assessment h &#xA;ON h.ass_id  = c.csru_ass_id &#xA;WHERE c.csru_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot; + &#xA;&quot; union all &#xA;/* 4. MHA PSYCHOLOGICAL MRR - paris.assu_mhapsymrr  */   &#xA;SELECT &#xA;&#x9;NVL(TO_CHAR(p.ymru_id),' ') assessment_abuse_id&#xA;&#x9;,NVL(TO_CHAR(p.ymru_id),' ')||'A4' assessment_abuse_key&#xA;    ,NVL(TO_CHAR(p.ymru_ass_id),' ') assessment_id&#xA;    ,CASE&#xA;       WHEN p.ymru_vio_yes_cli = 1 THEN '01' &#xA;       WHEN p.ymru_vio_no = 1 THEN '00' &#xA;       WHEN p.ymru_vio_yes_oth = 1 THEN '02' &#xA;       WHEN p.ymru_vio_unknown = 1 THEN '98' &#xA;       ELSE ' ' END violence_abuse&#xA;    ,CASE&#xA;       WHEN p.ymru_sui_yes_cli = 1 THEN '01' &#xA;       WHEN p.ymru_sui_no = 1 THEN '00' &#xA;       WHEN p.ymru_sui_yes_oth = 1 THEN '02' &#xA;       WHEN p.ymru_sui_unknown = 1 THEN '98' &#xA;       ELSE ' ' END suicide_attempt&#xA;   ,TO_CHAR(p.ymru_created_on,'YYYYMMDD') created_on&#xA;   ,TO_CHAR(p.ymru_amended_on,'YYYYMMDD') amended_on &#xA;   ,'assu_mhapsymrr' UDFTable&#xA;FROM paris.assu_mhapsymrr p &#xA;INNER JOIN paris.ass_assessment h &#xA;ON h.ass_id  = p.ymru_ass_id &#xA;WHERE p.ymru_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot; +&#xA;&quot; union all &#xA;/* 5. MHA CONS V2 PERS HIS - paris.assu_mhcv2ph */     &#xA;SELECT &#xA;&#x9;NVL(TO_CHAR(ph.mcyu_id),' ') assessment_abuse_id&#xA;&#x9;,NVL(TO_CHAR(ph.mcyu_id),' ')||'A5' assessment_abuse_key&#xA;    ,NVL(TO_CHAR(ph.mcyu_ass_id),' ') assessment_id&#xA;    ,CASE&#xA;       WHEN ph.mcyu_vio_yes_cli = 1 THEN '01' &#xA;       WHEN ph.mcyu_vio_no = 1 THEN '00' &#xA;       WHEN ph.mcyu_vio_yes_oth = 1 THEN '02' &#xA;       WHEN ph.mcyu_vio_unknown = 1 THEN '98' &#xA;       ELSE ' ' END violence_abuse&#xA;    ,CASE&#xA;       WHEN ph.mcyu_sui_yes_cli = 1 THEN '01' &#xA;       WHEN ph.mcyu_sui_no = 1 THEN '00' &#xA;       WHEN ph.mcyu_sui_yes_oth = 1 THEN '02' &#xA;       WHEN ph.mcyu_sui_unknown = 1 THEN '98' &#xA;       ELSE ' ' END suicide_attempt&#xA;   ,TO_CHAR(ph.mcyu_created_on,'YYYYMMDD') created_on&#xA;   ,TO_CHAR(ph.mcyu_amended_on,'YYYYMMDD') amended_on &#xA;   ,'assu_mhcv2ph' UDFTable&#xA;FROM paris.assu_mhcv2ph ph &#xA;INNER JOIN paris.ass_assessment h &#xA;ON h.ass_id  = ph.mcyu_ass_id &#xA;WHERE ph.mcyu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot; +&#xA;&quot; union all &#xA;/* 6. MHA INITIAL ASS V2 PERS HIST - paris.assu_mhaiav2peh */    &#xA;SELECT &#xA;&#x9;NVL(TO_CHAR(p.i2eu_id),' ') assessment_abuse_id&#xA;&#x9;,NVL(TO_CHAR(p.i2eu_id),' ')||'A6' assessment_abuse_key&#xA;    ,NVL(TO_CHAR(p.i2eu_ass_id),' ') assessment_id&#xA;    ,CASE&#xA;       WHEN p.i2eu_vio_yes_cli = 1 THEN '01' &#xA;       WHEN p.i2eu_vio_no = 1 THEN '00' &#xA;       WHEN p.i2eu_vio_yes_oth = 1 THEN '02' &#xA;       WHEN p.i2eu_vio_unknown = 1 THEN '98' &#xA;       ELSE ' ' END violence_abuse&#xA;    ,CASE&#xA;       WHEN p.i2eu_sui_yes_cli = 1 THEN '01' &#xA;       WHEN p.i2eu_sui_no = 1 THEN '00' &#xA;       WHEN p.i2eu_sui_yes_oth = 1 THEN '02' &#xA;       WHEN p.i2eu_sui_unknown = 1 THEN '98' &#xA;       ELSE ' ' END suicide_attempt&#xA;   ,TO_CHAR(p.i2eu_created_on,'YYYYMMDD') created_on&#xA;   ,TO_CHAR(p.i2eu_amended_on,'YYYYMMDD') amended_on &#xA;   ,'assu_mhaiav2peh' UDFTable&#xA;FROM paris.assu_mhaiav2peh p &#xA;INNER JOIN paris.ass_assessment h &#xA;ON h.ass_id  = p.i2eu_ass_id &#xA;WHERE p.i2eu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot; +&#xA;&quot; union all &#xA;/* 7. MHA SIAV2 SUI RISK ASSESSMENT - paris.assu_mhasiasra  */   &#xA;SELECT &#xA;    NVL(TO_CHAR(sra.ssau_id),' ') assessment_abuse_id&#xA;&#x9;,NVL(TO_CHAR(sra.ssau_id),' ')||'A7' assessment_abuse_key&#xA;    ,NVL(TO_CHAR(sra.ssau_ass_id),' ') assessment_id&#xA;    ,' '  violence_abuse&#xA;    ,CASE&#xA;       WHEN sra.ssau_sui_yes_cli = 1 THEN '01' &#xA;       WHEN sra.ssau_sui_no = 1 THEN '00' &#xA;       WHEN sra.ssau_sui_yes_oth = 1 THEN '02' &#xA;       WHEN sra.ssau_sui_unknown = 1 THEN '98' &#xA;       ELSE ' ' END suicide_attempt&#xA;   ,TO_CHAR(sra.ssau_created_on,'YYYYMMDD') created_on&#xA;   ,TO_CHAR(sra.ssau_amended_on,'YYYYMMDD') amended_on &#xA;   ,'assu_mhasiasra' UDFTable&#xA;FROM paris.assu_mhasiasra sra &#xA;INNER JOIN paris.ass_assessment h &#xA;ON h.ass_id  = sra.ssau_ass_id &#xA;WHERE sra.ssau_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot; + &#xA;&quot; union all &#xA;/* 8. MHA SIAV2 PERSONAL HISTORY - paris.assu_mhasiapehi */     &#xA;SELECT &#xA;    NVL(TO_CHAR(i.sphu_id),' ') assessment_abuse_id&#xA;&#x9;,NVL(TO_CHAR(i.sphu_id),' ')||'A8' assessment_abuse_key&#xA;    ,NVL(TO_CHAR(i.sphu_ass_id),' ') assessment_id&#xA;    ,CASE&#xA;       WHEN i.sphu_vio_yes_cli = 1 THEN' 01' &#xA;       WHEN i.sphu_vio_no = 1 THEN '00' &#xA;       WHEN i.sphu_vio_yes_oth = 1 THEN '02' &#xA;       WHEN i.sphu_vio_unknown = 1 THEN '98'&#xA;       ELSE ' ' END violence_abuse&#xA;    ,' '  suicide_attempt&#xA;   ,TO_CHAR(i.sphu_created_on,'YYYYMMDD') created_on&#xA;   ,TO_CHAR(i.sphu_amended_on,'YYYYMMDD') amended_on&#xA;   ,'assu_mhasiapehi' UDFTable&#xA;FROM paris.assu_mhasiapehi i &#xA;INNER JOIN paris.ass_assessment h &#xA;ON h.ass_id  = i.sphu_ass_id &#xA;WHERE i.sphu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot; +&#xA;&quot; union all &#xA;/*  9. MHA CHILD and YOUTH RISK ASS - paris.assu_mhacyara  */   &#xA;SELECT &#xA;    NVL(TO_CHAR(ra.rasu_id),' ') assessment_abuse_id&#xA;&#x9;,NVL(TO_CHAR(ra.rasu_id),' ')||'A9' assessment_abuse_key&#xA;    ,NVL(TO_CHAR(ra.rasu_ass_id),' ') assessment_id&#xA;    ,CASE&#xA;       WHEN ra.rasu_vio_yes_cli = 1 THEN '01' &#xA;       WHEN ra.rasu_vio_no = 1 THEN '00' &#xA;       WHEN ra.rasu_vio_yes_oth = 1 THEN '02' &#xA;       WHEN ra.rasu_vio_unknown = 1 THEN '98' &#xA;       ELSE ' ' END violence_abuse&#xA;    ,CASE&#xA;       WHEN ra.rasu_sui_yes_cli = 1 THEN '01' &#xA;       WHEN ra.rasu_sui_no = 1 THEN '00' &#xA;       WHEN ra.rasu_sui_yes_oth = 1 THEN '02' &#xA;       WHEN ra.rasu_sui_unknown = 1 THEN '98' &#xA;       ELSE ' ' END suicide_attempt&#xA;   ,TO_CHAR(ra.rasu_created_on,'YYYYMMDD') created_on&#xA;   ,TO_CHAR(ra.rasu_amended_on,'YYYYMMDD') amended_on &#xA;   ,'assu_mhacyara' UDFTable&#xA;FROM paris.assu_mhacyara ra &#xA;INNER JOIN paris.ass_assessment h &#xA;ON h.ass_id  = ra.rasu_ass_id &#xA;WHERE ra.rasu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot; +&#xA;&quot; union all &#xA;/* 10. MHA IA RISK ASSESSMENT - paris.assu_mhaiara */&#xA;SELECT &#xA;    NVL(TO_CHAR(ra.mrau_id),' ') assessment_abuse_id&#xA;&#x9;,NVL(TO_CHAR(ra.mrau_id),' ')||'A10' assessment_abuse_key&#xA;    ,NVL(TO_CHAR(ra.mrau_ass_id),' ') assessment_id&#xA;    ,CASE&#xA;       WHEN ra.mrau_vio_yes_cli = 1 THEN '01' &#xA;       WHEN ra.mrau_vio_no = 1 THEN '00' &#xA;       WHEN ra.mrau_vio_yes_oth = 1 THEN '02' &#xA;       WHEN ra.mrau_vio_unknown = 1 THEN '98' &#xA;       ELSE ' ' END violence_abuse&#xA;    ,CASE&#xA;       WHEN ra.mrau_sui_yes_cli = 1 THEN '01' &#xA;       WHEN ra.mrau_sui_no = 1 THEN '00' &#xA;       WHEN ra.mrau_sui_yes_oth = 1 THEN '02' &#xA;       WHEN ra.mrau_sui_unknown = 1 THEN '98' &#xA;       ELSE ' ' END suicide_attempt&#xA;   ,TO_CHAR(ra.mrau_created_on,'YYYYMMDD') created_on&#xA;   ,TO_CHAR(ra.mrau_amended_on,'YYYYMMDD') amended_on &#xA;   ,'assu_mhaiara' UDFTable&#xA;FROM paris.assu_mhaiara ra &#xA;INNER JOIN paris.ass_assessment h &#xA;ON h.ass_id  = ra.mrau_ass_id &#xA;WHERE ra.mrau_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLAssessmentAbuseStr">
      <DTS:VariableValue
        DTS:DataType="8">/* 1. MHA ASS VIOL ABUSE AND SUICIDE - MHA ASS VIOL ABUSE AND SUICIDE - paris.assu_mhavisui */
 SELECT 
	NVL(TO_CHAR(a.vasu_id),' ') assessment_abuse_id
	,NVL(TO_CHAR(a.vasu_id),' ')||'A1' assessment_abuse_key
	,NVL(TO_CHAR(a.vasu_ass_id),' ') assessment_id
	,CASE
	   WHEN a.vasu_vio_yes_cli = 1 THEN '01' /* Yes, indicated by client */
	   WHEN a.vasu_vio_no = 1 THEN '00' /* No */
	   WHEN a.vasu_vio_yes_oth = 1 THEN '02' /* Yes, indicated by other trusted source */
	   WHEN a.vasu_vio_unknown = 1 THEN '98' /*  Unknown/not asked */
	   ELSE ' '  END violence_abuse
    ,CASE
	   WHEN a.vasu_sui_yes_cli = 1 THEN '01' /* Yes, indicated by client */
	   WHEN a.vasu_sui_no = 1 THEN '00' /* No */
	   WHEN a.vasu_sui_yes_oth = 1 THEN '02' /* Yes, indicated by other trusted source */
	   WHEN a.vasu_sui_unknown = 1 THEN '98'  /*  Unknown/not asked */
	   ELSE ' ' END suicide_attempt
   ,TO_CHAR(a.vasu_created_on,'YYYYMMDD') created_on
   ,TO_CHAR(a.vasu_amended_on,'YYYYMMDD') amended_on 
   ,'assu_mhavisui' UDFTable
FROM paris.assu_mhavisui a 
INNER JOIN paris.ass_assessment h 
ON h.ass_id = a.vasu_ass_id  
WHERE a.vasu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') union all 
/* 2. MHA CHILD and YOUTH BRIEF BSFEDU - paris.assu_mhacybbsf     */
SELECT 
    NVL(TO_CHAR(b.bsfu_id),' ') assessment_abuse_id
	,NVL(TO_CHAR(b.bsfu_id),' ')||'A2' assessment_abuse_key
   ,NVL(TO_CHAR(b.bsfu_ass_id),' ') assessment_id
   ,CASE
      WHEN b.bsfu_vio_yes_cli = 1 THEN '01' 
      WHEN b.bsfu_vio_no = 1 THEN '00' 
      WHEN b.bsfu_vio_yes_oth = 1 THEN '02' 
      WHEN b.bsfu_vio_unknown = 1 THEN '98' 
	  ELSE ' '  END violence_abuse
    ,CASE
       WHEN b.bsfu_sui_yes_cli = 1 THEN '01' 
       WHEN b.bsfu_sui_no = 1 THEN '00' 
       WHEN b.bsfu_sui_yes_oth = 1 THEN '02' 
       WHEN b.bsfu_sui_unknown = 1 THEN '98'  
       ELSE ' ' END suicide_attempt
   ,TO_CHAR(b.bsfu_created_on,'YYYYMMDD') created_on
   ,TO_CHAR(b.bsfu_amended_on,'YYYYMMDD') amended_on 
   ,'assu_mhacybbsf' UDFTable
FROM paris.assu_mhacybbsf b 
INNER JOIN paris.ass_assessment h 
ON h.ass_id  = b.bsfu_ass_id 
WHERE b.bsfu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') union all 
/* 3. MHA CCD ADD MED IN MRR - paris.assu_mhacadmrr  */   
SELECT 
    NVL(TO_CHAR(c.csru_id),' ') assessment_abuse_id
	,NVL(TO_CHAR(c.csru_id),' ')||'A3' assessment_abuse_key
   ,NVL(TO_CHAR(c.csru_ass_id),' ') assessment_id
   ,CASE
      WHEN c.csru_vio_yes_cli = 1 THEN '01' 
      WHEN c.csru_vio_no = 1 THEN '00' 
      WHEN c.csru_vio_yes_oth = 1 THEN '02' 
      WHEN c.csru_vio_unknown = 1 THEN '98' 
      ELSE ' ' END violence_abuse
   ,CASE
      WHEN c.csru_sui_yes_cli = 1 THEN '01' 
      WHEN c.csru_sui_no = 1 THEN '00' 
      WHEN c.csru_sui_yes_oth = 1 THEN  '02' 
      WHEN c.csru_sui_unknown = 1 THEN '98' 
      ELSE ' ' END suicide_attempt
   ,TO_CHAR(c.csru_created_on,'YYYYMMDD') created_on
   ,TO_CHAR(c.csru_amended_on,'YYYYMMDD') amended_on 
   ,'assu_mhacadmrr' UDFTable
FROM paris.assu_mhacadmrr c 
INNER JOIN paris.ass_assessment h 
ON h.ass_id  = c.csru_ass_id 
WHERE c.csru_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') union all 
/* 4. MHA PSYCHOLOGICAL MRR - paris.assu_mhapsymrr  */   
SELECT 
	NVL(TO_CHAR(p.ymru_id),' ') assessment_abuse_id
	,NVL(TO_CHAR(p.ymru_id),' ')||'A4' assessment_abuse_key
    ,NVL(TO_CHAR(p.ymru_ass_id),' ') assessment_id
    ,CASE
       WHEN p.ymru_vio_yes_cli = 1 THEN '01' 
       WHEN p.ymru_vio_no = 1 THEN '00' 
       WHEN p.ymru_vio_yes_oth = 1 THEN '02' 
       WHEN p.ymru_vio_unknown = 1 THEN '98' 
       ELSE ' ' END violence_abuse
    ,CASE
       WHEN p.ymru_sui_yes_cli = 1 THEN '01' 
       WHEN p.ymru_sui_no = 1 THEN '00' 
       WHEN p.ymru_sui_yes_oth = 1 THEN '02' 
       WHEN p.ymru_sui_unknown = 1 THEN '98' 
       ELSE ' ' END suicide_attempt
   ,TO_CHAR(p.ymru_created_on,'YYYYMMDD') created_on
   ,TO_CHAR(p.ymru_amended_on,'YYYYMMDD') amended_on 
   ,'assu_mhapsymrr' UDFTable
FROM paris.assu_mhapsymrr p 
INNER JOIN paris.ass_assessment h 
ON h.ass_id  = p.ymru_ass_id 
WHERE p.ymru_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') union all 
/* 5. MHA CONS V2 PERS HIS - paris.assu_mhcv2ph */     
SELECT 
	NVL(TO_CHAR(ph.mcyu_id),' ') assessment_abuse_id
	,NVL(TO_CHAR(ph.mcyu_id),' ')||'A5' assessment_abuse_key
    ,NVL(TO_CHAR(ph.mcyu_ass_id),' ') assessment_id
    ,CASE
       WHEN ph.mcyu_vio_yes_cli = 1 THEN '01' 
       WHEN ph.mcyu_vio_no = 1 THEN '00' 
       WHEN ph.mcyu_vio_yes_oth = 1 THEN '02' 
       WHEN ph.mcyu_vio_unknown = 1 THEN '98' 
       ELSE ' ' END violence_abuse
    ,CASE
       WHEN ph.mcyu_sui_yes_cli = 1 THEN '01' 
       WHEN ph.mcyu_sui_no = 1 THEN '00' 
       WHEN ph.mcyu_sui_yes_oth = 1 THEN '02' 
       WHEN ph.mcyu_sui_unknown = 1 THEN '98' 
       ELSE ' ' END suicide_attempt
   ,TO_CHAR(ph.mcyu_created_on,'YYYYMMDD') created_on
   ,TO_CHAR(ph.mcyu_amended_on,'YYYYMMDD') amended_on 
   ,'assu_mhcv2ph' UDFTable
FROM paris.assu_mhcv2ph ph 
INNER JOIN paris.ass_assessment h 
ON h.ass_id  = ph.mcyu_ass_id 
WHERE ph.mcyu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') union all 
/* 6. MHA INITIAL ASS V2 PERS HIST - paris.assu_mhaiav2peh */    
SELECT 
	NVL(TO_CHAR(p.i2eu_id),' ') assessment_abuse_id
	,NVL(TO_CHAR(p.i2eu_id),' ')||'A6' assessment_abuse_key
    ,NVL(TO_CHAR(p.i2eu_ass_id),' ') assessment_id
    ,CASE
       WHEN p.i2eu_vio_yes_cli = 1 THEN '01' 
       WHEN p.i2eu_vio_no = 1 THEN '00' 
       WHEN p.i2eu_vio_yes_oth = 1 THEN '02' 
       WHEN p.i2eu_vio_unknown = 1 THEN '98' 
       ELSE ' ' END violence_abuse
    ,CASE
       WHEN p.i2eu_sui_yes_cli = 1 THEN '01' 
       WHEN p.i2eu_sui_no = 1 THEN '00' 
       WHEN p.i2eu_sui_yes_oth = 1 THEN '02' 
       WHEN p.i2eu_sui_unknown = 1 THEN '98' 
       ELSE ' ' END suicide_attempt
   ,TO_CHAR(p.i2eu_created_on,'YYYYMMDD') created_on
   ,TO_CHAR(p.i2eu_amended_on,'YYYYMMDD') amended_on 
   ,'assu_mhaiav2peh' UDFTable
FROM paris.assu_mhaiav2peh p 
INNER JOIN paris.ass_assessment h 
ON h.ass_id  = p.i2eu_ass_id 
WHERE p.i2eu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') union all 
/* 7. MHA SIAV2 SUI RISK ASSESSMENT - paris.assu_mhasiasra  */   
SELECT 
    NVL(TO_CHAR(sra.ssau_id),' ') assessment_abuse_id
	,NVL(TO_CHAR(sra.ssau_id),' ')||'A7' assessment_abuse_key
    ,NVL(TO_CHAR(sra.ssau_ass_id),' ') assessment_id
    ,' '  violence_abuse
    ,CASE
       WHEN sra.ssau_sui_yes_cli = 1 THEN '01' 
       WHEN sra.ssau_sui_no = 1 THEN '00' 
       WHEN sra.ssau_sui_yes_oth = 1 THEN '02' 
       WHEN sra.ssau_sui_unknown = 1 THEN '98' 
       ELSE ' ' END suicide_attempt
   ,TO_CHAR(sra.ssau_created_on,'YYYYMMDD') created_on
   ,TO_CHAR(sra.ssau_amended_on,'YYYYMMDD') amended_on 
   ,'assu_mhasiasra' UDFTable
FROM paris.assu_mhasiasra sra 
INNER JOIN paris.ass_assessment h 
ON h.ass_id  = sra.ssau_ass_id 
WHERE sra.ssau_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') union all 
/* 8. MHA SIAV2 PERSONAL HISTORY - paris.assu_mhasiapehi */     
SELECT 
    NVL(TO_CHAR(i.sphu_id),' ') assessment_abuse_id
	,NVL(TO_CHAR(i.sphu_id),' ')||'A8' assessment_abuse_key
    ,NVL(TO_CHAR(i.sphu_ass_id),' ') assessment_id
    ,CASE
       WHEN i.sphu_vio_yes_cli = 1 THEN' 01' 
       WHEN i.sphu_vio_no = 1 THEN '00' 
       WHEN i.sphu_vio_yes_oth = 1 THEN '02' 
       WHEN i.sphu_vio_unknown = 1 THEN '98'
       ELSE ' ' END violence_abuse
    ,' '  suicide_attempt
   ,TO_CHAR(i.sphu_created_on,'YYYYMMDD') created_on
   ,TO_CHAR(i.sphu_amended_on,'YYYYMMDD') amended_on
   ,'assu_mhasiapehi' UDFTable
FROM paris.assu_mhasiapehi i 
INNER JOIN paris.ass_assessment h 
ON h.ass_id  = i.sphu_ass_id 
WHERE i.sphu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') union all 
/*  9. MHA CHILD and YOUTH RISK ASS - paris.assu_mhacyara  */   
SELECT 
    NVL(TO_CHAR(ra.rasu_id),' ') assessment_abuse_id
	,NVL(TO_CHAR(ra.rasu_id),' ')||'A9' assessment_abuse_key
    ,NVL(TO_CHAR(ra.rasu_ass_id),' ') assessment_id
    ,CASE
       WHEN ra.rasu_vio_yes_cli = 1 THEN '01' 
       WHEN ra.rasu_vio_no = 1 THEN '00' 
       WHEN ra.rasu_vio_yes_oth = 1 THEN '02' 
       WHEN ra.rasu_vio_unknown = 1 THEN '98' 
       ELSE ' ' END violence_abuse
    ,CASE
       WHEN ra.rasu_sui_yes_cli = 1 THEN '01' 
       WHEN ra.rasu_sui_no = 1 THEN '00' 
       WHEN ra.rasu_sui_yes_oth = 1 THEN '02' 
       WHEN ra.rasu_sui_unknown = 1 THEN '98' 
       ELSE ' ' END suicide_attempt
   ,TO_CHAR(ra.rasu_created_on,'YYYYMMDD') created_on
   ,TO_CHAR(ra.rasu_amended_on,'YYYYMMDD') amended_on 
   ,'assu_mhacyara' UDFTable
FROM paris.assu_mhacyara ra 
INNER JOIN paris.ass_assessment h 
ON h.ass_id  = ra.rasu_ass_id 
WHERE ra.rasu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') union all 
/* 10. MHA IA RISK ASSESSMENT - paris.assu_mhaiara */
SELECT 
    NVL(TO_CHAR(ra.mrau_id),' ') assessment_abuse_id
	,NVL(TO_CHAR(ra.mrau_id),' ')||'A10' assessment_abuse_key
    ,NVL(TO_CHAR(ra.mrau_ass_id),' ') assessment_id
    ,CASE
       WHEN ra.mrau_vio_yes_cli = 1 THEN '01' 
       WHEN ra.mrau_vio_no = 1 THEN '00' 
       WHEN ra.mrau_vio_yes_oth = 1 THEN '02' 
       WHEN ra.mrau_vio_unknown = 1 THEN '98' 
       ELSE ' ' END violence_abuse
    ,CASE
       WHEN ra.mrau_sui_yes_cli = 1 THEN '01' 
       WHEN ra.mrau_sui_no = 1 THEN '00' 
       WHEN ra.mrau_sui_yes_oth = 1 THEN '02' 
       WHEN ra.mrau_sui_unknown = 1 THEN '98' 
       ELSE ' ' END suicide_attempt
   ,TO_CHAR(ra.mrau_created_on,'YYYYMMDD') created_on
   ,TO_CHAR(ra.mrau_amended_on,'YYYYMMDD') amended_on 
   ,'assu_mhaiara' UDFTable
FROM paris.assu_mhaiara ra 
INNER JOIN paris.ass_assessment h 
ON h.ass_id  = ra.mrau_ass_id 
WHERE ra.mrau_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2B5E5915-C294-4301-B374-3D8E05EF5AF9}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT  &#xA;  NVL(TO_CHAR(nb1u_ID),' ' ) Source_ContactID  &#xA;, NVL(TO_CHAR(nb1u_ass_id),' ' ) Source_AssessmentID&#xA;,'assu_icnb1' UDFTable&#xA;, NVL(TO_CHAR(nb1u_date1, 'YYYYMMDD'),' ' )  Contact1DateID &#xA;, NVL(nb1u_iciecct,' ' )  Contact1_Type&#xA;,NVL(DECODE(TRIM(nb1u_iciecct), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code&#xA;, NVL(TO_CHAR(nb1u_date2, 'YYYYMMDD'),' ' )  Contact2DateID &#xA;, NVL(nb1u_iciecct2,' ' )  Contact2_Type&#xA;,NVL(DECODE(TRIM(nb1u_iciecct2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code&#xA;, NVL(TO_CHAR(nb1u_date3, 'YYYYMMDD'),' ' )  Contact3DateID &#xA;, NVL(nb1u_iciecct3,' ' )  Contact3_Type&#xA;,NVL(DECODE(TRIM(nb1u_iciecct3), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact3_Type_Code&#xA;, NVL(TO_CHAR(nb1u_date4, 'YYYYMMDD'),' ' )  Contact4DateID &#xA;, NVL(nb1u_iciecct4,' ' )  Contact4_Type&#xA;,NVL(DECODE(TRIM(nb1u_iciecct4), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact4_Type_Code&#xA;, NVL(nb1u_location_,' ' )  Location1&#xA;, NVL(nb1u_location_2,' ' ) Location2&#xA;, NVL(nb1u_location_3,' ' ) Location3&#xA;, NVL(nb1u_location_4,' ' ) Location4&#xA;, ' ' BreastFeeding1&#xA;, ' ' BreastFeeding2&#xA;, ' ' BreastFeeding3&#xA;, ' ' BreastFeeding4&#xA;, ' '  gestation_week1&#xA;, ' '  gestation_week2&#xA;, ' '  gestation_week3&#xA;, ' '  gestation_week4&#xA;, ' ' void_flag1&#xA;, ' ' void_flag2&#xA;, ' ' void_flag3&#xA;, ' ' void_flag4&#xA;, TO_CHAR(nb1u_created_on, 'YYYYMMDD')  created_on&#xA;, TO_CHAR(nb1u_amended_on, 'YYYYMMDD')  amended_on&#xA;FROM PARIS.assu_icnb1 ic&#xA;JOIN paris.ass_assessment a&#xA;ON ic.nb1u_ass_id = a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;AND ic.nb1u_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&#xA;UNION ALL&#xA;SELECT  &#xA;  NVL(TO_CHAR(b3.nb3u_ID),' ' ) Source_ContactID  &#xA;, NVL(TO_CHAR( b3.nb3u_ass_id),' ' ) Source_AssessmentID&#xA;,'assu_icnb3' UDFTable&#xA;, NVL(TO_CHAR(b1.nb1u_date1, 'YYYYMMDD'),' ' )  Contact1DateIDStr &#xA;, ' ' Contact1_Type&#xA;, ' ' Contact1_Type_Code&#xA;, NVL(TO_CHAR(b1.nb1u_date2, 'YYYYMMDD'),' ' )  Contact2DateIDStr &#xA;, ' ' Contact2_Type&#xA;, ' ' Contact2_Type_Code&#xA;, NVL(TO_CHAR(b1.nb1u_date3, 'YYYYMMDD'),' ' )  Contact3DateIDStr &#xA;, ' ' Contact3_Type&#xA;, ' ' Contact3_Type_Code&#xA;, NVL(TO_CHAR(b1.nb1u_date4, 'YYYYMMDD'),' ' )  Contact4DateIDStr &#xA;, ' ' Contact4_Type&#xA;, ' ' Contact4_Type_Code&#xA;, NVL(b1.nb1u_location_,' ' )  Location1&#xA;, NVL(b1.nb1u_location_2,' ' ) Location2&#xA;, NVL(b1.nb1u_location_3,' ' ) Location3&#xA;, NVL(b1.nb1u_location_4,' ' ) Location4&#xA;, NVL(b3.nb3u_bfeeding,' ' ) breastfeeding1&#xA;, NVL(b3.nb3u_bfeeding2,' ' ) breastfeeding2&#xA;, NVL(b3.nb3u_bfeeding3,' ' ) breastfeeding3&#xA;, NVL(b3.nb3u_bfeeding4,' ' ) breastfeeding4&#xA;, ' '  gestation_week1&#xA;, ' '  gestation_week2&#xA;, ' '  gestation_week3&#xA;, ' '  gestation_week4&#xA;, NVL(b3.nb3u_yesonly61,' ' ) void_flag1&#xA;, NVL(b3.nb3u_yesonly62,' ' ) void_flag2&#xA;, NVL(b3.nb3u_yesonly63,' ' ) void_flag3&#xA;, NVL(b3.nb3u_yesonly64,' ' ) void_flag4&#xA;, TO_CHAR(b3.nb3u_created_on, 'YYYYMMDD')  created_on&#xA;, TO_CHAR(b3.nb3u_amended_on, 'YYYYMMDD')  amended_on&#xA;FROM PARIS.assu_icnb3 b3 &#xA;JOIN paris.ass_assessment a&#xA;ON b3.nb3u_ass_id = a.ass_id &#xA;JOIN PARIS.assu_icnb1 b1&#xA;on a.ass_id= b1.nb1u_ass_id &#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;AND b3.nb3u_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&#xA;UNION ALL&#xA;SELECT  &#xA;  NVL(TO_CHAR(nblu_ID),' ' ) Source_ContactID  &#xA;, NVL(TO_CHAR(nblu_ass_id),' ' ) Source_AssessmentID&#xA;,'assu_icnbl' UDFTable&#xA;, NVL(TO_CHAR(nblu_discharge_dt, 'YYYYMMDD'),' ' )  Contact1DateID  /* hospital discharge date */&#xA;, ' ' Contact1_Type&#xA;, ' ' Contact1_Type_Code&#xA;, ' ' Contact2DateID &#xA;, ' ' Contact2_Type&#xA;, ' ' Contact2_Type_Code&#xA;, ' ' Contact3DateID &#xA;, ' ' Contact3_Type&#xA;, ' ' Contact3_Type_Code&#xA;, ' ' Contact4DateID &#xA;, ' ' Contact4_Type&#xA;, ' ' Contact4_Type_Code&#xA;, NVL(TO_CHAR(nblu_del_hosp),' ')  Location1&#xA;, ' '  Location2&#xA;, ' '  Location3&#xA;, ' '  Location4&#xA;, NVL(nblu_bfeeding,' ') BreastFeeding1&#xA;, ' ' BreastFeeding2&#xA;, ' ' BreastFeeding3&#xA;, ' ' BreastFeeding4&#xA;, NVL(TO_CHAR(nblu_gestagebirth),' ' ) gestation_week1 &#xA;, ' '  gestation_week2&#xA;, ' '  gestation_week3&#xA;, ' '  gestation_week4&#xA;, NVL(nblu_yesonly11,' ') void_flag1&#xA;, ' ' void_flag2&#xA;, ' ' void_flag3&#xA;, ' ' void_flag4&#xA;, TO_CHAR(nblu_created_on, 'YYYYMMDD')  created_on&#xA;, TO_CHAR(nblu_amended_on, 'YYYYMMDD')  amended_on&#xA;FROM PARIS.assu_icnbl ic&#xA;JOIN paris.ass_assessment a&#xA;ON ic.nblu_ass_id = a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;AND ic.nblu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&#xA;UNION ALL&#xA;SELECT  &#xA;  NVL(TO_CHAR(t67u_ID),' ' ) Source_ContactID  &#xA;, NVL(TO_CHAR(t67u_ass_id),' ' ) Source_AssessmentID&#xA;,'assu_icm1' UDFTable&#xA;, NVL(TO_CHAR(t67u_date, 'YYYYMMDD'),' ' )  Contact1DateID &#xA;, NVL(t67u_iciecct,' ' )  Contact1_Type&#xA;,NVL(DECODE(TRIM(t67u_iciecct), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code&#xA;, NVL(TO_CHAR(t67u_date3, 'YYYYMMDD'),' ' )  Contact2DateID &#xA;, NVL(t67u_iciecct2,' ' )  Contact2_Type&#xA;,NVL(DECODE(TRIM(t67u_iciecct2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code&#xA;, NVL(TO_CHAR(t67u_date5, 'YYYYMMDD'),' ' )  Contact3DateID &#xA;, NVL(t67u_iciecct3,' ' )  Contact3_Type&#xA;,NVL(DECODE(TRIM(t67u_iciecct3), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact3_Type_Code&#xA;, NVL(TO_CHAR(t67u_date7, 'YYYYMMDD'),' ' )  Contact4DateID &#xA;, NVL(t67u_iciecct4,' ' )  Contact4_Type&#xA;,NVL(DECODE(TRIM(t67u_iciecct4), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact4_Type_Code&#xA;, NVL(t67u_location_,' ' )  Location1&#xA;, NVL(t67u_location_2,' ' ) Location2&#xA;, NVL(t67u_location_3,' ' ) Location3&#xA;, NVL(t67u_location_4,' ' ) Location4&#xA;, ' ' BreastFeeding1&#xA;, ' ' BreastFeeding2&#xA;, ' ' BreastFeeding3&#xA;, ' ' BreastFeeding4&#xA;, ' '  gestation_week1&#xA;, ' '  gestation_week2&#xA;, ' '  gestation_week3&#xA;, ' '  gestation_week4&#xA;, ' ' void_flag1&#xA;, ' ' void_flag2&#xA;, ' ' void_flag3&#xA;, ' ' void_flag4&#xA;, TO_CHAR(t67u_created_on, 'YYYYMMDD')  created_on&#xA;, TO_CHAR(t67u_amended_on, 'YYYYMMDD')  amended_on&#xA;FROM PARIS.assu_icm1 ic&#xA;JOIN paris.ass_assessment a&#xA;ON ic.t67u_ass_id = a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;AND ic.t67u_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&#xA;UNION ALL&#xA;SELECT  &#xA;  NVL(TO_CHAR(t70u_ID),' ' ) Source_ContactID  &#xA;, NVL(TO_CHAR(t70u_ass_id),' ' ) Source_AssessmentID&#xA;,'assu_icitpgen' UDFTable&#xA;, NVL(TO_CHAR(t70u_date, 'YYYYMMDD'),' ' )  Contact1DateID &#xA;, NVL(t70u_iciecct,' ' )  Contact1_Type&#xA;,NVL(DECODE(TRIM(t70u_iciecct), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code&#xA;, NVL(TO_CHAR(t70u_date2, 'YYYYMMDD'),' ' )  Contact2DateID &#xA;, NVL(t70u_iciecct2,' ' )  Contact2_Type&#xA;,NVL(DECODE(TRIM(t70u_iciecct2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code&#xA;, NVL(TO_CHAR(t70u_date3, 'YYYYMMDD'),' ' )  Contact3DateID &#xA;, NVL(t70u_iciecct3,' ' )  Contact3_Type&#xA;,NVL(DECODE(TRIM(t70u_iciecct3), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact3_Type_Code&#xA;, NVL(TO_CHAR(t70u_date4, 'YYYYMMDD'),' ' )  Contact4DateID &#xA;, NVL(t70u_iciecct4,' ' )  Contact4_Type&#xA;,NVL(DECODE(TRIM(t70u_iciecct4), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact4_Type_Code&#xA;, NVL(t70u_location_,' ' )  Location1&#xA;, NVL(t70u_location_2,' ' ) Location2&#xA;, NVL(t70u_location_3,' ' ) Location3&#xA;, NVL(t70u_location_4,' ' ) Location4&#xA;, NVL(t70u_bfeeding,' ' )  BreastFeeding1&#xA;, NVL(t70u_bfeeding2,' ' ) BreastFeeding2&#xA;, NVL(t70u_bfeeding3,' ' ) BreastFeeding3&#xA;, NVL(t70u_bfeeding4,' ' ) BreastFeeding4&#xA;, ' '  gestation_week1&#xA;, ' '  gestation_week2&#xA;, ' '  gestation_week3&#xA;, ' '  gestation_week4&#xA;, NVL(t70u_yesonly6,' ') void_flag1&#xA;, NVL(t70u_yesonly7,' ') void_flag2&#xA;, NVL(t70u_yesonly8,' ') void_flag3&#xA;, NVL(t70u_yesonly9,' ') void_flag4&#xA;, TO_CHAR(t70u_created_on, 'YYYYMMDD')  created_on&#xA;, TO_CHAR(t70u_amended_on, 'YYYYMMDD')  amended_on&#xA;FROM PARIS.assu_icitpgen ic&#xA;JOIN paris.ass_assessment a&#xA;ON ic.t70u_ass_id = a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */   &#xA;AND ic.t70u_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&#xA;UNION ALL&#xA;SELECT  &#xA;  NVL(TO_CHAR(t72u_ID),' ' ) Source_ContactID  &#xA;, NVL(TO_CHAR(t72u_ass_id),' ' ) Source_AssessmentID&#xA;,'assu_ic2m4m' UDFTable&#xA;, NVL(TO_CHAR(t72u_date, 'YYYYMMDD'),' ' )  Contact1DateID &#xA;, NVL(t72u_iciecct,' ' )  Contact1_Type&#xA;,NVL(DECODE(TRIM(t72u_iciecct), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code&#xA;, NVL(TO_CHAR(t72u_date2, 'YYYYMMDD'),' ' )  Contact2DateID &#xA;, NVL(t72u_iciecct2,' ' )  Contact2_Type&#xA;,NVL(DECODE(TRIM(t72u_iciecct2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code&#xA;, ' ' Contact3DateID &#xA;, ' ' Contact3_Type&#xA;, ' ' Contact3_Type_Code&#xA;, ' ' Contact4DateID &#xA;, ' ' Contact4_Type&#xA;, ' ' Contact4_Type_Code&#xA;, NVL(t72u_location_,' ' )  Location1&#xA;, NVL(t72u_location_2,' ' ) Location2&#xA;, ' ' Location3&#xA;, ' ' Location4&#xA;, NVL(t72u_bfeeding,' ')  BreastFeeding1&#xA;, NVL(t72u_bfeeding2,' ') BreastFeeding2&#xA;, ' ' BreastFeeding3&#xA;, ' ' BreastFeeding4&#xA;, ' '  gestation_week1&#xA;, ' '  gestation_week2&#xA;, ' '  gestation_week3&#xA;, ' '  gestation_week4&#xA;, NVL(t72u_yesonly79,' ') void_flag1&#xA;, NVL(t72u_yesonly80,' ') void_flag2&#xA;, ' ' void_flag3&#xA;, ' ' void_flag4&#xA;, TO_CHAR(t72u_created_on, 'YYYYMMDD')  created_on&#xA;, TO_CHAR(t72u_amended_on, 'YYYYMMDD')  amended_on&#xA;FROM PARIS.assu_ic2m4m  ic&#xA;JOIN paris.ass_assessment a&#xA;ON ic.t72u_ass_id = a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;AND ic.t72u_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&#xA;UNION ALL&#xA;SELECT  &#xA;  NVL(TO_CHAR(t73u_ID),' ' ) Source_ContactID  &#xA;, NVL(TO_CHAR(t73u_ass_id),' ' ) Source_AssessmentID&#xA;,'assu_ic6m9m' UDFTable&#xA;, NVL(TO_CHAR(t73u_date, 'YYYYMMDD'),' ' )  Contact1DateID &#xA;, NVL(t73u_iciecct,' ' )  Contact1_Type&#xA;,NVL(DECODE(TRIM(t73u_iciecct), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code&#xA;, NVL(TO_CHAR(t73u_date2, 'YYYYMMDD'),' ' )  Contact2DateID &#xA;, NVL(t73u_iciecct2,' ' )  Contact2_Type&#xA;,NVL(DECODE(TRIM(t73u_iciecct2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code&#xA;, ' ' Contact3DateID &#xA;, ' ' Contact3_Type&#xA;, ' ' Contact3_Type_Code&#xA;, ' ' Contact4DateID &#xA;, ' ' Contact4_Type&#xA;, ' ' Contact4_Type_Code&#xA;, NVL(t73u_location_,' ' )  Location1&#xA;, NVL(t73u_location_2,' ' ) Location2&#xA;, ' ' Location3&#xA;, ' ' Location4&#xA;, NVL(t73u_bfeeding,' ')  BreastFeeding1&#xA;, NVL(t73u_bfeeding2,' ') BreastFeeding2&#xA;, ' ' BreastFeeding3&#xA;, ' ' BreastFeeding4&#xA;, ' '  gestation_week1&#xA;, ' '  gestation_week2&#xA;, ' '  gestation_week3&#xA;, ' '  gestation_week4&#xA;, NVL(t73u_yesonly85,' ') void_flag1&#xA;, NVL(t73u_yesonly86,' ') void_flag2&#xA;, ' ' void_flag3&#xA;, ' ' void_flag4&#xA;, TO_CHAR(t73u_created_on, 'YYYYMMDD')  created_on&#xA;, TO_CHAR(t73u_amended_on, 'YYYYMMDD')  amended_on&#xA;FROM PARIS.assu_ic6m9m ic&#xA;JOIN paris.ass_assessment a&#xA;ON ic.t73u_ass_id = a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */   &#xA;AND ic.t73u_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&#xA;UNION ALL&#xA;SELECT  &#xA;  NVL(TO_CHAR(t74u_ID),' ' ) Source_ContactID  &#xA;, NVL(TO_CHAR(t74u_ass_id),' ' ) Source_AssessmentID&#xA;,'assu_ic12m18m' UDFTable&#xA;, NVL(TO_CHAR(t74u_date, 'YYYYMMDD'),' ' )  Contact1DateID &#xA;, NVL(t74u_iciecct,' ' )  Contact1_Type&#xA;,NVL(DECODE(TRIM(t74u_iciecct), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code&#xA;, NVL(TO_CHAR(t74u_date2, 'YYYYMMDD'),' ' )  Contact2DateID &#xA;, NVL(t74u_iciecct2,' ' )  Contact2_Type&#xA;,NVL(DECODE(TRIM(t74u_iciecct2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code&#xA;, ' ' Contact3DateID &#xA;, ' ' Contact3_Type&#xA;, ' ' Contact3_Type_Code&#xA;, ' ' Contact4DateID &#xA;, ' ' Contact4_Type&#xA;, ' ' Contact4_Type_Code&#xA;, NVL(t74u_location_,' ' )  Location1&#xA;, NVL(t74u_location_2,' ' ) Location2&#xA;, ' ' Location3&#xA;, ' ' Location4&#xA;, ' ' BreastFeeding1&#xA;, ' ' BreastFeeding2&#xA;, ' ' BreastFeeding3&#xA;, ' ' BreastFeeding4&#xA;, ' '  gestation_week1&#xA;, ' '  gestation_week2&#xA;, ' '  gestation_week3&#xA;, ' '  gestation_week4&#xA;, NVL(t74u_yesonly96,' ') void_flag1&#xA;, NVL(t74u_yesonly97,' ') void_flag2&#xA;, ' ' void_flag3&#xA;, ' ' void_flag4&#xA;, TO_CHAR(t74u_created_on, 'YYYYMMDD')  created_on&#xA;, TO_CHAR(t74u_amended_on, 'YYYYMMDD')  amended_on&#xA;FROM PARIS.assu_ic12m18m ic&#xA;JOIN paris.ass_assessment a&#xA;ON ic.t74u_ass_id = a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;AND ic.t74u_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&#xA;UNION ALL&#xA;SELECT  &#xA;  NVL(TO_CHAR(t71u_ID),' ' ) Source_ContactID  &#xA;, NVL(TO_CHAR(t71u_ass_id),' ' ) Source_AssessmentID&#xA;,'assu_ic2yr3yr' UDFTable&#xA;, NVL(TO_CHAR(t71u_date, 'YYYYMMDD'),' ' )  Contact1DateID &#xA;, NVL(t71u_iciecct,' ' )  Contact1_Type&#xA;,NVL(DECODE(TRIM(t71u_iciecct), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code&#xA;, NVL(TO_CHAR(t71u_date2, 'YYYYMMDD'),' ' )  Contact2DateID &#xA;, NVL(t71u_iciecct2,' ' )  Contact2_Type&#xA;,NVL(DECODE(TRIM(t71u_iciecct2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code&#xA;, ' ' Contact3DateID &#xA;, ' ' Contact3_Type&#xA;, ' ' Contact3_Type_Code&#xA;, ' ' Contact4DateID &#xA;, ' ' Contact4_Type&#xA;, ' ' Contact4_Type_Code&#xA;, NVL(t71u_location_,' ' )  Location1&#xA;, NVL(t71u_location_2,' ' ) Location2&#xA;, ' ' Location3&#xA;, ' ' Location4&#xA;, ' ' BreastFeeding1&#xA;, ' ' BreastFeeding2&#xA;, ' ' BreastFeeding3&#xA;, ' ' BreastFeeding4&#xA;, ' '  gestation_week1&#xA;, ' '  gestation_week2&#xA;, ' '  gestation_week3&#xA;, ' '  gestation_week4&#xA;, NVL(t71u_yesonly96,' ') void_flag1&#xA;, NVL(t71u_yesonly97,' ') void_flag2&#xA;, ' ' void_flag3&#xA;, ' ' void_flag4&#xA;, TO_CHAR(t71u_created_on, 'YYYYMMDD')  created_on&#xA;, TO_CHAR(t71u_amended_on, 'YYYYMMDD')  amended_on&#xA;FROM PARIS.assu_ic2yr3yr ic&#xA;JOIN paris.ass_assessment a&#xA;ON ic.t71u_ass_id = a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */    &#xA;AND ic.t71u_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&#xA;UNION ALL&#xA;SELECT  &#xA;  NVL(TO_CHAR(t66u_ID),' ' ) Source_ContactID  &#xA;, NVL(TO_CHAR(t66u_ass_id),' ' ) Source_AssessmentID&#xA;,'assu_ic4yr5yr' UDFTable&#xA;, NVL(TO_CHAR(t66u_date, 'YYYYMMDD'),' ' )  Contact1DateID &#xA;, NVL(t66u_iciecct,' ' )  Contact1_Type&#xA;,NVL(DECODE(TRIM(t66u_iciecct), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code&#xA;, NVL(TO_CHAR(t66u_date2, 'YYYYMMDD'),' ' )  Contact2DateID &#xA;, NVL(t66u_iciecct2,' ' )  Contact2_Type&#xA;,NVL(DECODE(TRIM(t66u_iciecct2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code&#xA;, ' ' Contact3DateID &#xA;, ' ' Contact3_Type&#xA;, ' ' Contact3_Type_Code&#xA;, ' ' Contact4DateID &#xA;, ' ' Contact4_Type&#xA;, ' ' Contact4_Type_Code&#xA;, NVL(t66u_location_,' ' )  Location1&#xA;, NVL(t66u_location_2,' ' ) Location2&#xA;, ' ' Location3&#xA;, ' ' Location4&#xA;, ' ' BreastFeeding1&#xA;, ' ' BreastFeeding2&#xA;, ' ' BreastFeeding3&#xA;, ' ' BreastFeeding4&#xA;, ' '  gestation_week1&#xA;, ' '  gestation_week2&#xA;, ' '  gestation_week3&#xA;, ' '  gestation_week4&#xA;, NVL(t66u_yesonly96,' ') void_flag1&#xA;, NVL(t66u_yesonly97,' ') void_flag2&#xA;, ' ' void_flag3&#xA;, ' ' void_flag4&#xA;, TO_CHAR(t66u_created_on, 'YYYYMMDD')  created_on&#xA;, TO_CHAR(t66u_amended_on, 'YYYYMMDD')  amended_on&#xA;FROM PARIS.assu_ic4yr5yr ic&#xA;JOIN paris.ass_assessment a&#xA;ON ic.t66u_ass_id = a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */   &#xA;AND ic.t66u_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&#xA;UNION ALL&#xA;SELECT  &#xA;  NVL(TO_CHAR(sadu_ID),' ' ) Source_ContactID  &#xA;, NVL(TO_CHAR(sadu_ass_id),' ' ) Source_AssessmentID&#xA;,'assu_ic4yr5yr' UDFTable&#xA;, NVL(TO_CHAR(sadu_date1, 'YYYYMMDD'),' ' )  Contact1DateID &#xA;, NVL(sadu_iciecct,' ' )  Contact1_Type&#xA;,NVL(DECODE(TRIM(sadu_iciecct), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code&#xA;, NVL(TO_CHAR(sadu_date2, 'YYYYMMDD'),' ' )  Contact2DateID &#xA;, NVL(sadu_iciecct2,' ' )  Contact2_Type&#xA;,NVL(DECODE(TRIM(sadu_iciecct2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code&#xA;, ' ' Contact3DateID &#xA;, ' ' Contact3_Type&#xA;, ' ' Contact3_Type_Code&#xA;, ' ' Contact4DateID &#xA;, ' ' Contact4_Type&#xA;, ' ' Contact4_Type_Code&#xA;, ' ' Location1&#xA;, ' ' Location2&#xA;, ' ' Location3&#xA;, ' ' Location4&#xA;, ' ' BreastFeeding1&#xA;, ' ' BreastFeeding2&#xA;, ' ' BreastFeeding3&#xA;, ' ' BreastFeeding4&#xA;, ' '  gestation_week1&#xA;, ' '  gestation_week2&#xA;, ' '  gestation_week3&#xA;, ' '  gestation_week4&#xA;, NVL(sadu_yesonly5,' ') void_flag1&#xA;, NVL(sadu_yesonly6,' ') void_flag2&#xA;, NVL(sadu_yesonly7,' ') void_flag3&#xA;, NVL(sadu_yesonly8,' ') void_flag4&#xA;, TO_CHAR(sadu_created_on, 'YYYYMMDD')  created_on&#xA;, TO_CHAR(sadu_amended_on, 'YYYYMMDD')  amended_on&#xA;FROM PARIS.assu_icsa ic&#xA;JOIN paris.ass_assessment a&#xA;ON ic.sadu_ass_id = a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */   &#xA;AND ic.sadu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&#xA;UNION ALL&#xA;SELECT  &#xA;  NVL(TO_CHAR(ipau_ID),' ' ) Source_ContactID  &#xA;, NVL(TO_CHAR(ipau_ass_id),' ' ) Source_AssessmentID&#xA;,'assu_icprenatax' UDFTable&#xA;, NVL(TO_CHAR(ipau_assessed_dt1, 'YYYYMMDD'),' ' )  Contact1DateID &#xA;, NVL(ipau_ctype1,' ' )  Contact1_Type&#xA;,NVL(DECODE(TRIM(ipau_ctype1), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code&#xA;, NVL(TO_CHAR(ipau_assessed_dt2, 'YYYYMMDD'),' ' )  Contact2DateID &#xA;, NVL(ipau_ctype2,' ' )  Contact2_Type&#xA;,NVL(DECODE(TRIM(ipau_ctype2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code&#xA;, NVL(TO_CHAR(ipau_assessed_dt3, 'YYYYMMDD'),' ' )  Contact3DateID &#xA;, NVL(ipau_ctype3,' ' )  Contact3_Type&#xA;,NVL(DECODE(TRIM(ipau_ctype3), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact3_Type_Code&#xA;, NVL(TO_CHAR(ipau_assessed_dt4, 'YYYYMMDD'),' ' )  Contact4DateID &#xA;, NVL(ipau_ctype4,' ' )  Contact4_Type&#xA;,NVL(DECODE(TRIM(ipau_ctype4), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact4_Type_Code&#xA;, ' '  Location1&#xA;, ' '  Location2&#xA;, ' '  Location3&#xA;, ' '  Location4&#xA;, ' ' BreastFeeding1&#xA;, ' ' BreastFeeding2&#xA;, ' ' BreastFeeding3&#xA;, ' ' BreastFeeding4&#xA;, NVL(TO_CHAR(ipau_num_week1),' ' ) gestation_week1 /* only on Prenatal assessment */&#xA;, NVL(TO_CHAR(ipau_num_week2),' ' ) gestation_week2 /* only on Prenatal assessment */&#xA;, NVL(TO_CHAR(ipau_num_week3),' ' ) gestation_week3 /* only on Prenatal assessment */&#xA;, NVL(TO_CHAR(ipau_num_week4),' ' ) gestation_week4 /* only on Prenatal assessment */&#xA;, NVL(TO_CHAR(ipau_eine_Y1),' ' ) void_flag1&#xA;, NVL(TO_CHAR(ipau_eine_Y2),' ' ) void_flag2&#xA;, NVL(TO_CHAR(ipau_eine_Y3),' ' ) void_flag3&#xA;, NVL(TO_CHAR(ipau_eine_Y4),' ' ) void_flag4&#xA;, TO_CHAR(ipau_created_on, 'YYYYMMDD')  created_on&#xA;, TO_CHAR(ipau_amended_on, 'YYYYMMDD')  amended_on&#xA;FROM PARIS.assu_icprenatax ic&#xA;JOIN paris.ass_assessment a&#xA;ON ic.ipau_ass_id = a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;AND ic.ipau_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&#xA;UNION ALL&#xA;SELECT  &#xA;  NVL(TO_CHAR(iadu_ID),' ' ) Source_ContactID  &#xA;, NVL(TO_CHAR(iadu_ass_id),' ' ) Source_AssessmentID&#xA;,'assu_icadult' UDFTable&#xA;, NVL(TO_CHAR(iadu_assessed_dt1, 'YYYYMMDD'),' ' )  Contact1DateID &#xA;, NVL(iadu_ctype1,' ' )  Contact1_Type&#xA;,NVL(DECODE(TRIM(iadu_ctype1), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code&#xA;, NVL(TO_CHAR(iadu_assessed_dt2, 'YYYYMMDD'),' ' )  Contact2DateID &#xA;, NVL(iadu_ctype2,' ' )  Contact2_Type&#xA;,NVL(DECODE(TRIM(iadu_ctype2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code&#xA;, NVL(TO_CHAR(iadu_assessed_dt3, 'YYYYMMDD'),' ' )  Contact3DateID &#xA;, NVL(iadu_ctype3,' ' )  Contact3_Type&#xA;,NVL(DECODE(TRIM(iadu_ctype3), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact3_Type_Code&#xA;, NVL(TO_CHAR(iadu_assessed_dt4, 'YYYYMMDD'),' ' )  Contact4DateID &#xA;, NVL(iadu_ctype4,' ' )  Contact4_Type&#xA;,NVL(DECODE(TRIM(iadu_ctype4), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact4_Type_Code&#xA;, ' '  Location1&#xA;, ' '  Location2&#xA;, ' '  Location3&#xA;, ' '  Location4&#xA;, ' ' BreastFeeding1&#xA;, ' ' BreastFeeding2&#xA;, ' ' BreastFeeding3&#xA;, ' ' BreastFeeding4&#xA;, ' '  gestation_week1&#xA;, ' '  gestation_week2&#xA;, ' '  gestation_week3&#xA;, ' '  gestation_week4&#xA;, NVL(TO_CHAR(iadu_eine_Y1),' ' ) void_flag1&#xA;, NVL(TO_CHAR(iadu_eine_Y2),' ' ) void_flag2&#xA;, NVL(TO_CHAR(iadu_eine_Y3),' ' ) void_flag3&#xA;, NVL(TO_CHAR(iadu_eine_Y4),' ' ) void_flag4&#xA;, TO_CHAR(iadu_created_on, 'YYYYMMDD')  created_on&#xA;, TO_CHAR(iadu_amended_on, 'YYYYMMDD')  amended_on&#xA;FROM PARIS.assu_icadult ic&#xA;JOIN paris.ass_assessment a&#xA;ON ic.iadu_ass_id = a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;AND ic.iadu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&#xA;/* UNION ALL need to add ICEPDSV2 which doesnt have contact type columns, how does report count? */&#xA;&#xA;UNION ALL /* MaternalAssessmentV2 contact details (assu_icpmv2axen) */&#xA;SELECT  &#xA;  NVL(TO_CHAR(ic.pm2u_id),' ' ) Source_ContactID  &#xA;, NVL(TO_CHAR(ic.pm2u_ass_id),' ' ) Source_AssessmentID&#xA;,'assu_icpmv2axen' UDFTable&#xA;, NVL(TO_CHAR(ic.pm2u_date, 'YYYYMMDD'),' ' )  Contact1DateID &#xA;, NVL(ic.pm2u_type,' ' )  Contact1_Type&#xA;, NVL(ic.pm2u_type,' ' )  Contact1_Type_Code /* no decode needed as V2 form stores code */&#xA;, ' ' Contact2DateID &#xA;, ' ' Contact2_Type&#xA;, ' ' Contact2_Type_Code&#xA;, ' ' Contact3DateID &#xA;, ' ' Contact3_Type&#xA;, ' ' Contact3_Type_Code&#xA;, ' ' Contact4DateID &#xA;, ' ' Contact4_Type&#xA;, ' ' Contact4_Type_Code&#xA;, ' ' Location1&#xA;, ' ' Location2&#xA;, ' ' Location3&#xA;, ' ' Location4&#xA;, ' ' BreastFeeding1&#xA;, ' ' BreastFeeding2&#xA;, ' ' BreastFeeding3&#xA;, ' ' BreastFeeding4&#xA;, ' ' gestation_week1&#xA;, ' ' gestation_week2&#xA;, ' ' gestation_week3&#xA;, ' ' gestation_week4&#xA;, NVL(TO_CHAR(ic.pm2u_eie),' ' )  void_flag1&#xA;, ' ' void_flag2&#xA;, ' ' void_flag3&#xA;, ' ' void_flag4&#xA;, TO_CHAR(ic.pm2u_created_on, 'YYYYMMDD')  created_on&#xA;, TO_CHAR(ic.pm2u_amended_on, 'YYYYMMDD')  amended_on&#xA;FROM PARIS.assu_icpmv2axen ic&#xA;JOIN paris.ass_assessment a&#xA;ON ic.pm2u_ass_id = a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;AND ic.pm2u_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&#xA;UNION ALL /* maternal-newborn V2 contact (icpnv2ocon) */&#xA;SELECT  &#xA;  NVL(TO_CHAR(ic.ocou_id),' ' ) Source_ContactID  &#xA;, NVL(TO_CHAR(ic.ocou_ass_id),' ' ) Source_AssessmentID&#xA;,'assu_icpnv2ocon' UDFTable&#xA;, NVL(TO_CHAR(ic.ocou_contdate, 'YYYYMMDD'),' ' )  Contact1DateID &#xA;, NVL(ic.ocou_metcon,' ' ) Contact1_Type&#xA;, NVL(ic.ocou_metcon,' ' ) Contact1_Type_Code /* no decode needed as V2 form stores code */&#xA;, ' ' Contact2DateID &#xA;, ' ' Contact2_Type&#xA;, ' ' Contact2_Type_Code&#xA;, ' ' Contact3DateID &#xA;, ' ' Contact3_Type&#xA;, ' ' Contact3_Type_Code&#xA;, ' ' Contact4DateID &#xA;, ' ' Contact4_Type&#xA;, ' ' Contact4_Type_Code&#xA;, ' ' Location1&#xA;, ' ' Location2&#xA;, ' ' Location3&#xA;, ' ' Location4&#xA;, ' ' BreastFeeding1&#xA;, ' ' BreastFeeding2&#xA;, ' ' BreastFeeding3&#xA;, ' ' BreastFeeding4&#xA;, ' '  gestation_week1&#xA;, ' '  gestation_week2&#xA;, ' '  gestation_week3&#xA;, ' '  gestation_week4&#xA;, NVL(TO_CHAR(ic.ocou_eie),' ') void_flag1&#xA;, ' ' void_flag2&#xA;, ' ' void_flag3&#xA;, ' ' void_flag4&#xA;, TO_CHAR(ocou_created_on, 'YYYYMMDD')  created_on&#xA;, TO_CHAR(ocou_amended_on, 'YYYYMMDD')  amended_on&#xA;FROM paris.assu_icpnv2ocon ic&#xA;JOIN paris.ass_assessment a&#xA;ON ic.ocou_ass_id = a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */ &#xA;AND ic.ocou_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&#xA;UNION ALL /* NewbornAssessmentV2 contact details (assu_icpnv2axen) */&#xA;SELECT  &#xA;  NVL(TO_CHAR(ic.axeu_id),' ' ) Source_ContactID  &#xA;, NVL(TO_CHAR(ic.axeu_ass_id),' ' ) Source_AssessmentID&#xA;,'assu_icpnv2axen' UDFTable&#xA;, NVL(TO_CHAR(ic.axeu_date, 'YYYYMMDD'),' ' )  Contact1DateID &#xA;, NVL(ic.axeu_icpnv2,' ' )  Contact1_Type&#xA;, NVL(ic.axeu_icpnv2,' ' )  Contact1_Type_Code /* no decode needed as V2 form stores code */&#xA;, ' ' Contact2DateID &#xA;, ' ' Contact2_Type&#xA;, ' ' Contact2_Type_Code&#xA;, ' ' Contact3DateID &#xA;, ' ' Contact3_Type&#xA;, ' ' Contact3_Type_Code&#xA;, ' ' Contact4DateID &#xA;, ' ' Contact4_Type&#xA;, ' ' Contact4_Type_Code&#xA;, ' ' Location1&#xA;, ' ' Location2&#xA;, ' ' Location3&#xA;, ' ' Location4&#xA;, NVL(ic.axeu_methof_feed,' ' )  BreastFeeding1&#xA;, ' ' BreastFeeding2&#xA;, ' ' BreastFeeding3&#xA;, ' ' BreastFeeding4&#xA;, ' ' gestation_week1&#xA;, ' ' gestation_week2&#xA;, ' ' gestation_week3&#xA;, ' ' gestation_week4&#xA;, NVL(TO_CHAR(ic.axeu_eie),' ' ) void_flag1&#xA;, ' ' void_flag2&#xA;, ' ' void_flag3&#xA;, ' ' void_flag4&#xA;, TO_CHAR(axeu_created_on, 'YYYYMMDD')  created_on&#xA;, TO_CHAR(axeu_amended_on, 'YYYYMMDD')  amended_on&#xA;FROM PARIS.assu_icpnv2axen ic&#xA;JOIN paris.ass_assessment a&#xA;ON ic.axeu_ass_id = a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;AND ic.axeu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&#xA;UNION ALL /* NewbornBirthEventV2 hospital discharge breastfeeding */&#xA;SELECT  &#xA;  NVL(TO_CHAR(bevu_ID),' ' ) Source_ContactID  &#xA;, NVL(TO_CHAR(bevu_ass_id),' ' ) Source_AssessmentID&#xA;,'assu_icpnv2be' UDFTable&#xA;, NVL(TO_CHAR(bevu_datedis, 'YYYYMMDD'),' ' )  Contact1DateID /* hospital discharge date */&#xA;, ' ' Contact1_Type&#xA;, ' ' Contact1_Type_Code&#xA;, ' ' Contact2DateID &#xA;, ' ' Contact2_Type&#xA;, ' ' Contact2_Type_Code&#xA;, ' ' Contact3DateID &#xA;, ' ' Contact3_Type&#xA;, ' ' Contact3_Type_Code&#xA;, ' ' Contact4DateID &#xA;, ' ' Contact4_Type&#xA;, ' ' Contact4_Type_Code&#xA;, NVL(TO_CHAR(bevu_del_hosp),' ')  Location1&#xA;, ' '  Location2&#xA;, ' '  Location3&#xA;, ' '  Location4&#xA;, NVL(bevu_infeed,' ') BreastFeeding1&#xA;, ' ' BreastFeeding2&#xA;, ' ' BreastFeeding3&#xA;, ' ' BreastFeeding4&#xA;, NVL(TO_CHAR(bevu_age),' ' ) gestation_week1 &#xA;, ' '  gestation_week2&#xA;, ' '  gestation_week3&#xA;, ' '  gestation_week4&#xA;, ' ' void_flag1&#xA;, ' ' void_flag2&#xA;, ' ' void_flag3&#xA;, ' ' void_flag4&#xA;, TO_CHAR(bevu_created_on, 'YYYYMMDD')  created_on&#xA;, TO_CHAR(bevu_amended_on, 'YYYYMMDD')  amended_on&#xA;FROM PARIS.assu_icpnv2be ic&#xA;JOIN paris.ass_assessment a&#xA;ON ic.bevu_ass_id = a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;AND ic.bevu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&#xA;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLAssessmentContactStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT  
  NVL(TO_CHAR(nb1u_ID),' ' ) Source_ContactID  
, NVL(TO_CHAR(nb1u_ass_id),' ' ) Source_AssessmentID
,'assu_icnb1' UDFTable
, NVL(TO_CHAR(nb1u_date1, 'YYYYMMDD'),' ' )  Contact1DateID 
, NVL(nb1u_iciecct,' ' )  Contact1_Type
,NVL(DECODE(TRIM(nb1u_iciecct), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code
, NVL(TO_CHAR(nb1u_date2, 'YYYYMMDD'),' ' )  Contact2DateID 
, NVL(nb1u_iciecct2,' ' )  Contact2_Type
,NVL(DECODE(TRIM(nb1u_iciecct2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code
, NVL(TO_CHAR(nb1u_date3, 'YYYYMMDD'),' ' )  Contact3DateID 
, NVL(nb1u_iciecct3,' ' )  Contact3_Type
,NVL(DECODE(TRIM(nb1u_iciecct3), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact3_Type_Code
, NVL(TO_CHAR(nb1u_date4, 'YYYYMMDD'),' ' )  Contact4DateID 
, NVL(nb1u_iciecct4,' ' )  Contact4_Type
,NVL(DECODE(TRIM(nb1u_iciecct4), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact4_Type_Code
, NVL(nb1u_location_,' ' )  Location1
, NVL(nb1u_location_2,' ' ) Location2
, NVL(nb1u_location_3,' ' ) Location3
, NVL(nb1u_location_4,' ' ) Location4
, ' ' BreastFeeding1
, ' ' BreastFeeding2
, ' ' BreastFeeding3
, ' ' BreastFeeding4
, ' '  gestation_week1
, ' '  gestation_week2
, ' '  gestation_week3
, ' '  gestation_week4
, ' ' void_flag1
, ' ' void_flag2
, ' ' void_flag3
, ' ' void_flag4
, TO_CHAR(nb1u_created_on, 'YYYYMMDD')  created_on
, TO_CHAR(nb1u_amended_on, 'YYYYMMDD')  amended_on
FROM PARIS.assu_icnb1 ic
JOIN paris.ass_assessment a
ON ic.nb1u_ass_id = a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
AND ic.nb1u_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')
UNION ALL
SELECT  
  NVL(TO_CHAR(b3.nb3u_ID),' ' ) Source_ContactID  
, NVL(TO_CHAR( b3.nb3u_ass_id),' ' ) Source_AssessmentID
,'assu_icnb3' UDFTable
, NVL(TO_CHAR(b1.nb1u_date1, 'YYYYMMDD'),' ' )  Contact1DateIDStr 
, ' ' Contact1_Type
, ' ' Contact1_Type_Code
, NVL(TO_CHAR(b1.nb1u_date2, 'YYYYMMDD'),' ' )  Contact2DateIDStr 
, ' ' Contact2_Type
, ' ' Contact2_Type_Code
, NVL(TO_CHAR(b1.nb1u_date3, 'YYYYMMDD'),' ' )  Contact3DateIDStr 
, ' ' Contact3_Type
, ' ' Contact3_Type_Code
, NVL(TO_CHAR(b1.nb1u_date4, 'YYYYMMDD'),' ' )  Contact4DateIDStr 
, ' ' Contact4_Type
, ' ' Contact4_Type_Code
, NVL(b1.nb1u_location_,' ' )  Location1
, NVL(b1.nb1u_location_2,' ' ) Location2
, NVL(b1.nb1u_location_3,' ' ) Location3
, NVL(b1.nb1u_location_4,' ' ) Location4
, NVL(b3.nb3u_bfeeding,' ' ) breastfeeding1
, NVL(b3.nb3u_bfeeding2,' ' ) breastfeeding2
, NVL(b3.nb3u_bfeeding3,' ' ) breastfeeding3
, NVL(b3.nb3u_bfeeding4,' ' ) breastfeeding4
, ' '  gestation_week1
, ' '  gestation_week2
, ' '  gestation_week3
, ' '  gestation_week4
, NVL(b3.nb3u_yesonly61,' ' ) void_flag1
, NVL(b3.nb3u_yesonly62,' ' ) void_flag2
, NVL(b3.nb3u_yesonly63,' ' ) void_flag3
, NVL(b3.nb3u_yesonly64,' ' ) void_flag4
, TO_CHAR(b3.nb3u_created_on, 'YYYYMMDD')  created_on
, TO_CHAR(b3.nb3u_amended_on, 'YYYYMMDD')  amended_on
FROM PARIS.assu_icnb3 b3 
JOIN paris.ass_assessment a
ON b3.nb3u_ass_id = a.ass_id 
JOIN PARIS.assu_icnb1 b1
on a.ass_id= b1.nb1u_ass_id 
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
AND b3.nb3u_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')
UNION ALL
SELECT  
  NVL(TO_CHAR(nblu_ID),' ' ) Source_ContactID  
, NVL(TO_CHAR(nblu_ass_id),' ' ) Source_AssessmentID
,'assu_icnbl' UDFTable
, NVL(TO_CHAR(nblu_discharge_dt, 'YYYYMMDD'),' ' )  Contact1DateID  /* hospital discharge date */
, ' ' Contact1_Type
, ' ' Contact1_Type_Code
, ' ' Contact2DateID 
, ' ' Contact2_Type
, ' ' Contact2_Type_Code
, ' ' Contact3DateID 
, ' ' Contact3_Type
, ' ' Contact3_Type_Code
, ' ' Contact4DateID 
, ' ' Contact4_Type
, ' ' Contact4_Type_Code
, NVL(TO_CHAR(nblu_del_hosp),' ')  Location1
, ' '  Location2
, ' '  Location3
, ' '  Location4
, NVL(nblu_bfeeding,' ') BreastFeeding1
, ' ' BreastFeeding2
, ' ' BreastFeeding3
, ' ' BreastFeeding4
, NVL(TO_CHAR(nblu_gestagebirth),' ' ) gestation_week1 
, ' '  gestation_week2
, ' '  gestation_week3
, ' '  gestation_week4
, NVL(nblu_yesonly11,' ') void_flag1
, ' ' void_flag2
, ' ' void_flag3
, ' ' void_flag4
, TO_CHAR(nblu_created_on, 'YYYYMMDD')  created_on
, TO_CHAR(nblu_amended_on, 'YYYYMMDD')  amended_on
FROM PARIS.assu_icnbl ic
JOIN paris.ass_assessment a
ON ic.nblu_ass_id = a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
AND ic.nblu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')
UNION ALL
SELECT  
  NVL(TO_CHAR(t67u_ID),' ' ) Source_ContactID  
, NVL(TO_CHAR(t67u_ass_id),' ' ) Source_AssessmentID
,'assu_icm1' UDFTable
, NVL(TO_CHAR(t67u_date, 'YYYYMMDD'),' ' )  Contact1DateID 
, NVL(t67u_iciecct,' ' )  Contact1_Type
,NVL(DECODE(TRIM(t67u_iciecct), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code
, NVL(TO_CHAR(t67u_date3, 'YYYYMMDD'),' ' )  Contact2DateID 
, NVL(t67u_iciecct2,' ' )  Contact2_Type
,NVL(DECODE(TRIM(t67u_iciecct2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code
, NVL(TO_CHAR(t67u_date5, 'YYYYMMDD'),' ' )  Contact3DateID 
, NVL(t67u_iciecct3,' ' )  Contact3_Type
,NVL(DECODE(TRIM(t67u_iciecct3), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact3_Type_Code
, NVL(TO_CHAR(t67u_date7, 'YYYYMMDD'),' ' )  Contact4DateID 
, NVL(t67u_iciecct4,' ' )  Contact4_Type
,NVL(DECODE(TRIM(t67u_iciecct4), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact4_Type_Code
, NVL(t67u_location_,' ' )  Location1
, NVL(t67u_location_2,' ' ) Location2
, NVL(t67u_location_3,' ' ) Location3
, NVL(t67u_location_4,' ' ) Location4
, ' ' BreastFeeding1
, ' ' BreastFeeding2
, ' ' BreastFeeding3
, ' ' BreastFeeding4
, ' '  gestation_week1
, ' '  gestation_week2
, ' '  gestation_week3
, ' '  gestation_week4
, ' ' void_flag1
, ' ' void_flag2
, ' ' void_flag3
, ' ' void_flag4
, TO_CHAR(t67u_created_on, 'YYYYMMDD')  created_on
, TO_CHAR(t67u_amended_on, 'YYYYMMDD')  amended_on
FROM PARIS.assu_icm1 ic
JOIN paris.ass_assessment a
ON ic.t67u_ass_id = a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
AND ic.t67u_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')
UNION ALL
SELECT  
  NVL(TO_CHAR(t70u_ID),' ' ) Source_ContactID  
, NVL(TO_CHAR(t70u_ass_id),' ' ) Source_AssessmentID
,'assu_icitpgen' UDFTable
, NVL(TO_CHAR(t70u_date, 'YYYYMMDD'),' ' )  Contact1DateID 
, NVL(t70u_iciecct,' ' )  Contact1_Type
,NVL(DECODE(TRIM(t70u_iciecct), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code
, NVL(TO_CHAR(t70u_date2, 'YYYYMMDD'),' ' )  Contact2DateID 
, NVL(t70u_iciecct2,' ' )  Contact2_Type
,NVL(DECODE(TRIM(t70u_iciecct2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code
, NVL(TO_CHAR(t70u_date3, 'YYYYMMDD'),' ' )  Contact3DateID 
, NVL(t70u_iciecct3,' ' )  Contact3_Type
,NVL(DECODE(TRIM(t70u_iciecct3), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact3_Type_Code
, NVL(TO_CHAR(t70u_date4, 'YYYYMMDD'),' ' )  Contact4DateID 
, NVL(t70u_iciecct4,' ' )  Contact4_Type
,NVL(DECODE(TRIM(t70u_iciecct4), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact4_Type_Code
, NVL(t70u_location_,' ' )  Location1
, NVL(t70u_location_2,' ' ) Location2
, NVL(t70u_location_3,' ' ) Location3
, NVL(t70u_location_4,' ' ) Location4
, NVL(t70u_bfeeding,' ' )  BreastFeeding1
, NVL(t70u_bfeeding2,' ' ) BreastFeeding2
, NVL(t70u_bfeeding3,' ' ) BreastFeeding3
, NVL(t70u_bfeeding4,' ' ) BreastFeeding4
, ' '  gestation_week1
, ' '  gestation_week2
, ' '  gestation_week3
, ' '  gestation_week4
, NVL(t70u_yesonly6,' ') void_flag1
, NVL(t70u_yesonly7,' ') void_flag2
, NVL(t70u_yesonly8,' ') void_flag3
, NVL(t70u_yesonly9,' ') void_flag4
, TO_CHAR(t70u_created_on, 'YYYYMMDD')  created_on
, TO_CHAR(t70u_amended_on, 'YYYYMMDD')  amended_on
FROM PARIS.assu_icitpgen ic
JOIN paris.ass_assessment a
ON ic.t70u_ass_id = a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */   
AND ic.t70u_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')
UNION ALL
SELECT  
  NVL(TO_CHAR(t72u_ID),' ' ) Source_ContactID  
, NVL(TO_CHAR(t72u_ass_id),' ' ) Source_AssessmentID
,'assu_ic2m4m' UDFTable
, NVL(TO_CHAR(t72u_date, 'YYYYMMDD'),' ' )  Contact1DateID 
, NVL(t72u_iciecct,' ' )  Contact1_Type
,NVL(DECODE(TRIM(t72u_iciecct), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code
, NVL(TO_CHAR(t72u_date2, 'YYYYMMDD'),' ' )  Contact2DateID 
, NVL(t72u_iciecct2,' ' )  Contact2_Type
,NVL(DECODE(TRIM(t72u_iciecct2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code
, ' ' Contact3DateID 
, ' ' Contact3_Type
, ' ' Contact3_Type_Code
, ' ' Contact4DateID 
, ' ' Contact4_Type
, ' ' Contact4_Type_Code
, NVL(t72u_location_,' ' )  Location1
, NVL(t72u_location_2,' ' ) Location2
, ' ' Location3
, ' ' Location4
, NVL(t72u_bfeeding,' ')  BreastFeeding1
, NVL(t72u_bfeeding2,' ') BreastFeeding2
, ' ' BreastFeeding3
, ' ' BreastFeeding4
, ' '  gestation_week1
, ' '  gestation_week2
, ' '  gestation_week3
, ' '  gestation_week4
, NVL(t72u_yesonly79,' ') void_flag1
, NVL(t72u_yesonly80,' ') void_flag2
, ' ' void_flag3
, ' ' void_flag4
, TO_CHAR(t72u_created_on, 'YYYYMMDD')  created_on
, TO_CHAR(t72u_amended_on, 'YYYYMMDD')  amended_on
FROM PARIS.assu_ic2m4m  ic
JOIN paris.ass_assessment a
ON ic.t72u_ass_id = a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
AND ic.t72u_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')
UNION ALL
SELECT  
  NVL(TO_CHAR(t73u_ID),' ' ) Source_ContactID  
, NVL(TO_CHAR(t73u_ass_id),' ' ) Source_AssessmentID
,'assu_ic6m9m' UDFTable
, NVL(TO_CHAR(t73u_date, 'YYYYMMDD'),' ' )  Contact1DateID 
, NVL(t73u_iciecct,' ' )  Contact1_Type
,NVL(DECODE(TRIM(t73u_iciecct), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code
, NVL(TO_CHAR(t73u_date2, 'YYYYMMDD'),' ' )  Contact2DateID 
, NVL(t73u_iciecct2,' ' )  Contact2_Type
,NVL(DECODE(TRIM(t73u_iciecct2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code
, ' ' Contact3DateID 
, ' ' Contact3_Type
, ' ' Contact3_Type_Code
, ' ' Contact4DateID 
, ' ' Contact4_Type
, ' ' Contact4_Type_Code
, NVL(t73u_location_,' ' )  Location1
, NVL(t73u_location_2,' ' ) Location2
, ' ' Location3
, ' ' Location4
, NVL(t73u_bfeeding,' ')  BreastFeeding1
, NVL(t73u_bfeeding2,' ') BreastFeeding2
, ' ' BreastFeeding3
, ' ' BreastFeeding4
, ' '  gestation_week1
, ' '  gestation_week2
, ' '  gestation_week3
, ' '  gestation_week4
, NVL(t73u_yesonly85,' ') void_flag1
, NVL(t73u_yesonly86,' ') void_flag2
, ' ' void_flag3
, ' ' void_flag4
, TO_CHAR(t73u_created_on, 'YYYYMMDD')  created_on
, TO_CHAR(t73u_amended_on, 'YYYYMMDD')  amended_on
FROM PARIS.assu_ic6m9m ic
JOIN paris.ass_assessment a
ON ic.t73u_ass_id = a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */   
AND ic.t73u_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')
UNION ALL
SELECT  
  NVL(TO_CHAR(t74u_ID),' ' ) Source_ContactID  
, NVL(TO_CHAR(t74u_ass_id),' ' ) Source_AssessmentID
,'assu_ic12m18m' UDFTable
, NVL(TO_CHAR(t74u_date, 'YYYYMMDD'),' ' )  Contact1DateID 
, NVL(t74u_iciecct,' ' )  Contact1_Type
,NVL(DECODE(TRIM(t74u_iciecct), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code
, NVL(TO_CHAR(t74u_date2, 'YYYYMMDD'),' ' )  Contact2DateID 
, NVL(t74u_iciecct2,' ' )  Contact2_Type
,NVL(DECODE(TRIM(t74u_iciecct2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code
, ' ' Contact3DateID 
, ' ' Contact3_Type
, ' ' Contact3_Type_Code
, ' ' Contact4DateID 
, ' ' Contact4_Type
, ' ' Contact4_Type_Code
, NVL(t74u_location_,' ' )  Location1
, NVL(t74u_location_2,' ' ) Location2
, ' ' Location3
, ' ' Location4
, ' ' BreastFeeding1
, ' ' BreastFeeding2
, ' ' BreastFeeding3
, ' ' BreastFeeding4
, ' '  gestation_week1
, ' '  gestation_week2
, ' '  gestation_week3
, ' '  gestation_week4
, NVL(t74u_yesonly96,' ') void_flag1
, NVL(t74u_yesonly97,' ') void_flag2
, ' ' void_flag3
, ' ' void_flag4
, TO_CHAR(t74u_created_on, 'YYYYMMDD')  created_on
, TO_CHAR(t74u_amended_on, 'YYYYMMDD')  amended_on
FROM PARIS.assu_ic12m18m ic
JOIN paris.ass_assessment a
ON ic.t74u_ass_id = a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
AND ic.t74u_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')
UNION ALL
SELECT  
  NVL(TO_CHAR(t71u_ID),' ' ) Source_ContactID  
, NVL(TO_CHAR(t71u_ass_id),' ' ) Source_AssessmentID
,'assu_ic2yr3yr' UDFTable
, NVL(TO_CHAR(t71u_date, 'YYYYMMDD'),' ' )  Contact1DateID 
, NVL(t71u_iciecct,' ' )  Contact1_Type
,NVL(DECODE(TRIM(t71u_iciecct), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code
, NVL(TO_CHAR(t71u_date2, 'YYYYMMDD'),' ' )  Contact2DateID 
, NVL(t71u_iciecct2,' ' )  Contact2_Type
,NVL(DECODE(TRIM(t71u_iciecct2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code
, ' ' Contact3DateID 
, ' ' Contact3_Type
, ' ' Contact3_Type_Code
, ' ' Contact4DateID 
, ' ' Contact4_Type
, ' ' Contact4_Type_Code
, NVL(t71u_location_,' ' )  Location1
, NVL(t71u_location_2,' ' ) Location2
, ' ' Location3
, ' ' Location4
, ' ' BreastFeeding1
, ' ' BreastFeeding2
, ' ' BreastFeeding3
, ' ' BreastFeeding4
, ' '  gestation_week1
, ' '  gestation_week2
, ' '  gestation_week3
, ' '  gestation_week4
, NVL(t71u_yesonly96,' ') void_flag1
, NVL(t71u_yesonly97,' ') void_flag2
, ' ' void_flag3
, ' ' void_flag4
, TO_CHAR(t71u_created_on, 'YYYYMMDD')  created_on
, TO_CHAR(t71u_amended_on, 'YYYYMMDD')  amended_on
FROM PARIS.assu_ic2yr3yr ic
JOIN paris.ass_assessment a
ON ic.t71u_ass_id = a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */    
AND ic.t71u_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')
UNION ALL
SELECT  
  NVL(TO_CHAR(t66u_ID),' ' ) Source_ContactID  
, NVL(TO_CHAR(t66u_ass_id),' ' ) Source_AssessmentID
,'assu_ic4yr5yr' UDFTable
, NVL(TO_CHAR(t66u_date, 'YYYYMMDD'),' ' )  Contact1DateID 
, NVL(t66u_iciecct,' ' )  Contact1_Type
,NVL(DECODE(TRIM(t66u_iciecct), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code
, NVL(TO_CHAR(t66u_date2, 'YYYYMMDD'),' ' )  Contact2DateID 
, NVL(t66u_iciecct2,' ' )  Contact2_Type
,NVL(DECODE(TRIM(t66u_iciecct2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code
, ' ' Contact3DateID 
, ' ' Contact3_Type
, ' ' Contact3_Type_Code
, ' ' Contact4DateID 
, ' ' Contact4_Type
, ' ' Contact4_Type_Code
, NVL(t66u_location_,' ' )  Location1
, NVL(t66u_location_2,' ' ) Location2
, ' ' Location3
, ' ' Location4
, ' ' BreastFeeding1
, ' ' BreastFeeding2
, ' ' BreastFeeding3
, ' ' BreastFeeding4
, ' '  gestation_week1
, ' '  gestation_week2
, ' '  gestation_week3
, ' '  gestation_week4
, NVL(t66u_yesonly96,' ') void_flag1
, NVL(t66u_yesonly97,' ') void_flag2
, ' ' void_flag3
, ' ' void_flag4
, TO_CHAR(t66u_created_on, 'YYYYMMDD')  created_on
, TO_CHAR(t66u_amended_on, 'YYYYMMDD')  amended_on
FROM PARIS.assu_ic4yr5yr ic
JOIN paris.ass_assessment a
ON ic.t66u_ass_id = a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */   
AND ic.t66u_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')
UNION ALL
SELECT  
  NVL(TO_CHAR(sadu_ID),' ' ) Source_ContactID  
, NVL(TO_CHAR(sadu_ass_id),' ' ) Source_AssessmentID
,'assu_ic4yr5yr' UDFTable
, NVL(TO_CHAR(sadu_date1, 'YYYYMMDD'),' ' )  Contact1DateID 
, NVL(sadu_iciecct,' ' )  Contact1_Type
,NVL(DECODE(TRIM(sadu_iciecct), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code
, NVL(TO_CHAR(sadu_date2, 'YYYYMMDD'),' ' )  Contact2DateID 
, NVL(sadu_iciecct2,' ' )  Contact2_Type
,NVL(DECODE(TRIM(sadu_iciecct2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code
, ' ' Contact3DateID 
, ' ' Contact3_Type
, ' ' Contact3_Type_Code
, ' ' Contact4DateID 
, ' ' Contact4_Type
, ' ' Contact4_Type_Code
, ' ' Location1
, ' ' Location2
, ' ' Location3
, ' ' Location4
, ' ' BreastFeeding1
, ' ' BreastFeeding2
, ' ' BreastFeeding3
, ' ' BreastFeeding4
, ' '  gestation_week1
, ' '  gestation_week2
, ' '  gestation_week3
, ' '  gestation_week4
, NVL(sadu_yesonly5,' ') void_flag1
, NVL(sadu_yesonly6,' ') void_flag2
, NVL(sadu_yesonly7,' ') void_flag3
, NVL(sadu_yesonly8,' ') void_flag4
, TO_CHAR(sadu_created_on, 'YYYYMMDD')  created_on
, TO_CHAR(sadu_amended_on, 'YYYYMMDD')  amended_on
FROM PARIS.assu_icsa ic
JOIN paris.ass_assessment a
ON ic.sadu_ass_id = a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */   
AND ic.sadu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')
UNION ALL
SELECT  
  NVL(TO_CHAR(ipau_ID),' ' ) Source_ContactID  
, NVL(TO_CHAR(ipau_ass_id),' ' ) Source_AssessmentID
,'assu_icprenatax' UDFTable
, NVL(TO_CHAR(ipau_assessed_dt1, 'YYYYMMDD'),' ' )  Contact1DateID 
, NVL(ipau_ctype1,' ' )  Contact1_Type
,NVL(DECODE(TRIM(ipau_ctype1), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code
, NVL(TO_CHAR(ipau_assessed_dt2, 'YYYYMMDD'),' ' )  Contact2DateID 
, NVL(ipau_ctype2,' ' )  Contact2_Type
,NVL(DECODE(TRIM(ipau_ctype2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code
, NVL(TO_CHAR(ipau_assessed_dt3, 'YYYYMMDD'),' ' )  Contact3DateID 
, NVL(ipau_ctype3,' ' )  Contact3_Type
,NVL(DECODE(TRIM(ipau_ctype3), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact3_Type_Code
, NVL(TO_CHAR(ipau_assessed_dt4, 'YYYYMMDD'),' ' )  Contact4DateID 
, NVL(ipau_ctype4,' ' )  Contact4_Type
,NVL(DECODE(TRIM(ipau_ctype4), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact4_Type_Code
, ' '  Location1
, ' '  Location2
, ' '  Location3
, ' '  Location4
, ' ' BreastFeeding1
, ' ' BreastFeeding2
, ' ' BreastFeeding3
, ' ' BreastFeeding4
, NVL(TO_CHAR(ipau_num_week1),' ' ) gestation_week1 /* only on Prenatal assessment */
, NVL(TO_CHAR(ipau_num_week2),' ' ) gestation_week2 /* only on Prenatal assessment */
, NVL(TO_CHAR(ipau_num_week3),' ' ) gestation_week3 /* only on Prenatal assessment */
, NVL(TO_CHAR(ipau_num_week4),' ' ) gestation_week4 /* only on Prenatal assessment */
, NVL(TO_CHAR(ipau_eine_Y1),' ' ) void_flag1
, NVL(TO_CHAR(ipau_eine_Y2),' ' ) void_flag2
, NVL(TO_CHAR(ipau_eine_Y3),' ' ) void_flag3
, NVL(TO_CHAR(ipau_eine_Y4),' ' ) void_flag4
, TO_CHAR(ipau_created_on, 'YYYYMMDD')  created_on
, TO_CHAR(ipau_amended_on, 'YYYYMMDD')  amended_on
FROM PARIS.assu_icprenatax ic
JOIN paris.ass_assessment a
ON ic.ipau_ass_id = a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
AND ic.ipau_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')
UNION ALL
SELECT  
  NVL(TO_CHAR(iadu_ID),' ' ) Source_ContactID  
, NVL(TO_CHAR(iadu_ass_id),' ' ) Source_AssessmentID
,'assu_icadult' UDFTable
, NVL(TO_CHAR(iadu_assessed_dt1, 'YYYYMMDD'),' ' )  Contact1DateID 
, NVL(iadu_ctype1,' ' )  Contact1_Type
,NVL(DECODE(TRIM(iadu_ctype1), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact1_Type_Code
, NVL(TO_CHAR(iadu_assessed_dt2, 'YYYYMMDD'),' ' )  Contact2DateID 
, NVL(iadu_ctype2,' ' )  Contact2_Type
,NVL(DECODE(TRIM(iadu_ctype2), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact2_Type_Code
, NVL(TO_CHAR(iadu_assessed_dt3, 'YYYYMMDD'),' ' )  Contact3DateID 
, NVL(iadu_ctype3,' ' )  Contact3_Type
,NVL(DECODE(TRIM(iadu_ctype3), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact3_Type_Code
, NVL(TO_CHAR(iadu_assessed_dt4, 'YYYYMMDD'),' ' )  Contact4DateID 
, NVL(iadu_ctype4,' ' )  Contact4_Type
,NVL(DECODE(TRIM(iadu_ctype4), '1', 'HV', '2', 'TC', '3', 'CHC', '4', 'FV', '5', 'OV', '6', 'NOENTRY', ' '),' ') Contact4_Type_Code
, ' '  Location1
, ' '  Location2
, ' '  Location3
, ' '  Location4
, ' ' BreastFeeding1
, ' ' BreastFeeding2
, ' ' BreastFeeding3
, ' ' BreastFeeding4
, ' '  gestation_week1
, ' '  gestation_week2
, ' '  gestation_week3
, ' '  gestation_week4
, NVL(TO_CHAR(iadu_eine_Y1),' ' ) void_flag1
, NVL(TO_CHAR(iadu_eine_Y2),' ' ) void_flag2
, NVL(TO_CHAR(iadu_eine_Y3),' ' ) void_flag3
, NVL(TO_CHAR(iadu_eine_Y4),' ' ) void_flag4
, TO_CHAR(iadu_created_on, 'YYYYMMDD')  created_on
, TO_CHAR(iadu_amended_on, 'YYYYMMDD')  amended_on
FROM PARIS.assu_icadult ic
JOIN paris.ass_assessment a
ON ic.iadu_ass_id = a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
AND ic.iadu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')
/* UNION ALL need to add ICEPDSV2 which doesnt have contact type columns, how does report count? */

UNION ALL /* MaternalAssessmentV2 contact details (assu_icpmv2axen) */
SELECT  
  NVL(TO_CHAR(ic.pm2u_id),' ' ) Source_ContactID  
, NVL(TO_CHAR(ic.pm2u_ass_id),' ' ) Source_AssessmentID
,'assu_icpmv2axen' UDFTable
, NVL(TO_CHAR(ic.pm2u_date, 'YYYYMMDD'),' ' )  Contact1DateID 
, NVL(ic.pm2u_type,' ' )  Contact1_Type
, NVL(ic.pm2u_type,' ' )  Contact1_Type_Code /* no decode needed as V2 form stores code */
, ' ' Contact2DateID 
, ' ' Contact2_Type
, ' ' Contact2_Type_Code
, ' ' Contact3DateID 
, ' ' Contact3_Type
, ' ' Contact3_Type_Code
, ' ' Contact4DateID 
, ' ' Contact4_Type
, ' ' Contact4_Type_Code
, ' ' Location1
, ' ' Location2
, ' ' Location3
, ' ' Location4
, ' ' BreastFeeding1
, ' ' BreastFeeding2
, ' ' BreastFeeding3
, ' ' BreastFeeding4
, ' ' gestation_week1
, ' ' gestation_week2
, ' ' gestation_week3
, ' ' gestation_week4
, NVL(TO_CHAR(ic.pm2u_eie),' ' )  void_flag1
, ' ' void_flag2
, ' ' void_flag3
, ' ' void_flag4
, TO_CHAR(ic.pm2u_created_on, 'YYYYMMDD')  created_on
, TO_CHAR(ic.pm2u_amended_on, 'YYYYMMDD')  amended_on
FROM PARIS.assu_icpmv2axen ic
JOIN paris.ass_assessment a
ON ic.pm2u_ass_id = a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
AND ic.pm2u_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')
UNION ALL /* maternal-newborn V2 contact (icpnv2ocon) */
SELECT  
  NVL(TO_CHAR(ic.ocou_id),' ' ) Source_ContactID  
, NVL(TO_CHAR(ic.ocou_ass_id),' ' ) Source_AssessmentID
,'assu_icpnv2ocon' UDFTable
, NVL(TO_CHAR(ic.ocou_contdate, 'YYYYMMDD'),' ' )  Contact1DateID 
, NVL(ic.ocou_metcon,' ' ) Contact1_Type
, NVL(ic.ocou_metcon,' ' ) Contact1_Type_Code /* no decode needed as V2 form stores code */
, ' ' Contact2DateID 
, ' ' Contact2_Type
, ' ' Contact2_Type_Code
, ' ' Contact3DateID 
, ' ' Contact3_Type
, ' ' Contact3_Type_Code
, ' ' Contact4DateID 
, ' ' Contact4_Type
, ' ' Contact4_Type_Code
, ' ' Location1
, ' ' Location2
, ' ' Location3
, ' ' Location4
, ' ' BreastFeeding1
, ' ' BreastFeeding2
, ' ' BreastFeeding3
, ' ' BreastFeeding4
, ' '  gestation_week1
, ' '  gestation_week2
, ' '  gestation_week3
, ' '  gestation_week4
, NVL(TO_CHAR(ic.ocou_eie),' ') void_flag1
, ' ' void_flag2
, ' ' void_flag3
, ' ' void_flag4
, TO_CHAR(ocou_created_on, 'YYYYMMDD')  created_on
, TO_CHAR(ocou_amended_on, 'YYYYMMDD')  amended_on
FROM paris.assu_icpnv2ocon ic
JOIN paris.ass_assessment a
ON ic.ocou_ass_id = a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */ 
AND ic.ocou_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')
UNION ALL /* NewbornAssessmentV2 contact details (assu_icpnv2axen) */
SELECT  
  NVL(TO_CHAR(ic.axeu_id),' ' ) Source_ContactID  
, NVL(TO_CHAR(ic.axeu_ass_id),' ' ) Source_AssessmentID
,'assu_icpnv2axen' UDFTable
, NVL(TO_CHAR(ic.axeu_date, 'YYYYMMDD'),' ' )  Contact1DateID 
, NVL(ic.axeu_icpnv2,' ' )  Contact1_Type
, NVL(ic.axeu_icpnv2,' ' )  Contact1_Type_Code /* no decode needed as V2 form stores code */
, ' ' Contact2DateID 
, ' ' Contact2_Type
, ' ' Contact2_Type_Code
, ' ' Contact3DateID 
, ' ' Contact3_Type
, ' ' Contact3_Type_Code
, ' ' Contact4DateID 
, ' ' Contact4_Type
, ' ' Contact4_Type_Code
, ' ' Location1
, ' ' Location2
, ' ' Location3
, ' ' Location4
, NVL(ic.axeu_methof_feed,' ' )  BreastFeeding1
, ' ' BreastFeeding2
, ' ' BreastFeeding3
, ' ' BreastFeeding4
, ' ' gestation_week1
, ' ' gestation_week2
, ' ' gestation_week3
, ' ' gestation_week4
, NVL(TO_CHAR(ic.axeu_eie),' ' ) void_flag1
, ' ' void_flag2
, ' ' void_flag3
, ' ' void_flag4
, TO_CHAR(axeu_created_on, 'YYYYMMDD')  created_on
, TO_CHAR(axeu_amended_on, 'YYYYMMDD')  amended_on
FROM PARIS.assu_icpnv2axen ic
JOIN paris.ass_assessment a
ON ic.axeu_ass_id = a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
AND ic.axeu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')
UNION ALL /* NewbornBirthEventV2 hospital discharge breastfeeding */
SELECT  
  NVL(TO_CHAR(bevu_ID),' ' ) Source_ContactID  
, NVL(TO_CHAR(bevu_ass_id),' ' ) Source_AssessmentID
,'assu_icpnv2be' UDFTable
, NVL(TO_CHAR(bevu_datedis, 'YYYYMMDD'),' ' )  Contact1DateID /* hospital discharge date */
, ' ' Contact1_Type
, ' ' Contact1_Type_Code
, ' ' Contact2DateID 
, ' ' Contact2_Type
, ' ' Contact2_Type_Code
, ' ' Contact3DateID 
, ' ' Contact3_Type
, ' ' Contact3_Type_Code
, ' ' Contact4DateID 
, ' ' Contact4_Type
, ' ' Contact4_Type_Code
, NVL(TO_CHAR(bevu_del_hosp),' ')  Location1
, ' '  Location2
, ' '  Location3
, ' '  Location4
, NVL(bevu_infeed,' ') BreastFeeding1
, ' ' BreastFeeding2
, ' ' BreastFeeding3
, ' ' BreastFeeding4
, NVL(TO_CHAR(bevu_age),' ' ) gestation_week1 
, ' '  gestation_week2
, ' '  gestation_week3
, ' '  gestation_week4
, ' ' void_flag1
, ' ' void_flag2
, ' ' void_flag3
, ' ' void_flag4
, TO_CHAR(bevu_created_on, 'YYYYMMDD')  created_on
, TO_CHAR(bevu_amended_on, 'YYYYMMDD')  amended_on
FROM PARIS.assu_icpnv2be ic
JOIN paris.ass_assessment a
ON ic.bevu_ass_id = a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
AND ic.bevu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')
</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A840DA2B-6654-4042-AA0F-382FEB048436}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT &#xA;NVL(TO_CHAR(a.ass_id ) ,' ' ) assessment_id&#xA;,NVL(TO_CHAR(a.ass_ref_id ) ,' ' ) referral_id &#xA;,NVL(TO_CHAR(a.ass_date_of_ass, 'YYYYMMDD') ,' ' ) assessment_date&#xA;,NVL(TO_CHAR(a.ass_time_of_ass, '999900.00'),' ' )  assessment_time&#xA;,NVL(TO_CHAR(a.ass_created_at, '999900.00') ,' ' )   assessment_created_time&#xA;,NVL(TO_CHAR(a.ass_date_comp, 'YYYYMMDD') ,' ' ) assessment_end_date&#xA;,NVL(a.ass_type ,' ' )  assessment_type&#xA;,NVL(a.ass_reason, ' ' ) assessment_reason&#xA;,NVL(s2.stf_code ,' ' ) AmendedBy_Staff_Code &#xA;,NVL(s2.stf_profession ,' ' ) AmendedBy_Staff_Profession&#xA;,NVL(TO_CHAR(a.ass_amended_by) ,' ' ) AmendedBy_StaffID&#xA;,NVL(s3.stf_code ,' ' )  CreatedBy_Staff_Code &#xA;,NVL(s3.stf_profession ,' ' )  CreatedBy_Staff_Profession&#xA;,NVL(TO_CHAR(a.ass_created_by) ,' ' ) CreatedBy_StaffID&#xA;,NVL(a.ass_carried_out_by,' ' ) Carried_OutBy_StaffCode&#xA;,NVL(s.stf_profession,' ' ) Carried_OutBy_Staff_Profession&#xA;,NVL(TO_CHAR(s.stf_per_id),' ' ) Carried_OutBy_StaffID&#xA;,NVL(TO_CHAR(h.cnh_id),' ') casenote_header_id&#xA;,CASE&#xA;  WHEN a.ass_reason = 'EIE' THEN 'Y'&#xA;  WHEN h.cnh_reason IN ('EIE', 'EWA') THEN 'Y'&#xA;  ELSE  ' '&#xA;END void_flag&#xA;,NVL(TO_CHAR(a.ass_auth_on, 'YYYYMMDD'),' ' ) assessment_auth_date&#xA;,TO_CHAR(a.ass_created_on, 'YYYYMMDD') assessment_created_on&#xA;,TO_CHAR(a.ass_amended_on, 'YYYYMMDD') assessment_amended_on &#xA;FROM paris.ass_assessment a &#xA;INNER JOIN paris.mpi_client c &#xA;ON c.cli_id = a.ass_cli_id &#xA;AND  NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */ &#xA;JOIN paris.stf_team t &#xA;ON t.tem_key = a.ass_owner_tem_id &#xA; AND t.tem_code &lt;&gt; 'BCMHA' &#xA;LEFT OUTER JOIN paris.stf_staff s&#xA;ON a.ass_carried_out_by = s.stf_code&#xA;LEFT OUTER JOIN paris.stf_staff s2&#xA;ON a.ass_amended_by = s2.stf_per_id&#xA;LEFT OUTER JOIN paris.stf_staff s3&#xA;ON a.ass_created_by = s3.stf_per_id&#xA;LEFT OUTER JOIN paris.txt_cnote_head h &#xA;ON h.cnh_origin_id = a.ass_id &#xA;AND h.cnh_origin_type = 'ASS' &#xA;AND h.cnh_reason IN ('EWA', 'EIE')  &#xA;WHERE /*a.ass_date_comp IS NOT NULL AND*/ a.ass_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLAssessmentHeaderStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT 
NVL(TO_CHAR(a.ass_id ) ,' ' ) assessment_id
,NVL(TO_CHAR(a.ass_ref_id ) ,' ' ) referral_id 
,NVL(TO_CHAR(a.ass_date_of_ass, 'YYYYMMDD') ,' ' ) assessment_date
,NVL(TO_CHAR(a.ass_time_of_ass, '999900.00'),' ' )  assessment_time
,NVL(TO_CHAR(a.ass_created_at, '999900.00') ,' ' )   assessment_created_time
,NVL(TO_CHAR(a.ass_date_comp, 'YYYYMMDD') ,' ' ) assessment_end_date
,NVL(a.ass_type ,' ' )  assessment_type
,NVL(a.ass_reason, ' ' ) assessment_reason
,NVL(s2.stf_code ,' ' ) AmendedBy_Staff_Code 
,NVL(s2.stf_profession ,' ' ) AmendedBy_Staff_Profession
,NVL(TO_CHAR(a.ass_amended_by) ,' ' ) AmendedBy_StaffID
,NVL(s3.stf_code ,' ' )  CreatedBy_Staff_Code 
,NVL(s3.stf_profession ,' ' )  CreatedBy_Staff_Profession
,NVL(TO_CHAR(a.ass_created_by) ,' ' ) CreatedBy_StaffID
,NVL(a.ass_carried_out_by,' ' ) Carried_OutBy_StaffCode
,NVL(s.stf_profession,' ' ) Carried_OutBy_Staff_Profession
,NVL(TO_CHAR(s.stf_per_id),' ' ) Carried_OutBy_StaffID
,NVL(TO_CHAR(h.cnh_id),' ') casenote_header_id
,CASE
  WHEN a.ass_reason = 'EIE' THEN 'Y'
  WHEN h.cnh_reason IN ('EIE', 'EWA') THEN 'Y'
  ELSE  ' '
END void_flag
,NVL(TO_CHAR(a.ass_auth_on, 'YYYYMMDD'),' ' ) assessment_auth_date
,TO_CHAR(a.ass_created_on, 'YYYYMMDD') assessment_created_on
,TO_CHAR(a.ass_amended_on, 'YYYYMMDD') assessment_amended_on 
FROM paris.ass_assessment a 
INNER JOIN paris.mpi_client c 
ON c.cli_id = a.ass_cli_id 
AND  NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */ 
JOIN paris.stf_team t 
ON t.tem_key = a.ass_owner_tem_id 
 AND t.tem_code &lt;&gt; 'BCMHA' 
LEFT OUTER JOIN paris.stf_staff s
ON a.ass_carried_out_by = s.stf_code
LEFT OUTER JOIN paris.stf_staff s2
ON a.ass_amended_by = s2.stf_per_id
LEFT OUTER JOIN paris.stf_staff s3
ON a.ass_created_by = s3.stf_per_id
LEFT OUTER JOIN paris.txt_cnote_head h 
ON h.cnh_origin_id = a.ass_id 
AND h.cnh_origin_type = 'ASS' 
AND h.cnh_reason IN ('EWA', 'EIE')  
WHERE /*a.ass_date_comp IS NOT NULL AND*/ a.ass_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CDACB2B9-3282-41EC-A5F3-288EC2145C26}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA;  NVL(TO_CHAR(vf3u_id),' ') sourceRecordIDStr&#xA;,NVL(TO_CHAR(vf3u_per_id),' ')  SourceSystemClientID&#xA;,NVL(vf3u_r_carelev,' ') Care_Level /* gen_prefix ='L_R_CAREL' */&#xA;,NVL(TO_CHAR(vf3u_r_caresd, 'YYYYMMDD'),' ') StartDateStr&#xA;,NVL(TO_CHAR(vf3u_r_careed, 'YYYYMMDD'),' ') EndDateStr &#xA;,NVL(vf3u_pft,' ')  SourceFormType &#xA;,NVL(TO_CHAR(vf3u_PFI),' ') SourceFormIDStr&#xA;,NVL(TO_CHAR(s.stf_per_id),' ') RecordedBy_StaffIDStr&#xA;,NVL(TO_CHAR(vf3u_recdate, 'YYYYMMDD'),' ') DateRecordedIDStr&#xA;,NVL(vf3u_yesonly,' ') void_flag&#xA;,TO_CHAR(vf3u_created_on,'YYYYMMDD')  created_on  &#xA;,NVL(TO_CHAR(vf3u_created_by),' ')    createBy_StaffIDStr &#xA;,TO_CHAR(vf3u_amended_on,'YYYYMMDD')  amended_on  &#xA;,NVL(TO_CHAR(vf3u_amended_by),' ')    amendedBy_StaffIDStr  &#xA;FROM paris.mpiu_v_f3 f3&#xA;JOIN paris.stf_staff s&#xA;ON f3.vf3u_SCODE = s.stf_code&#xA;WHERE NVL(vf3u_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */ &#xA;AND vf3u_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCareLevelStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
  NVL(TO_CHAR(vf3u_id),' ') sourceRecordIDStr
,NVL(TO_CHAR(vf3u_per_id),' ')  SourceSystemClientID
,NVL(vf3u_r_carelev,' ') Care_Level /* gen_prefix ='L_R_CAREL' */
,NVL(TO_CHAR(vf3u_r_caresd, 'YYYYMMDD'),' ') StartDateStr
,NVL(TO_CHAR(vf3u_r_careed, 'YYYYMMDD'),' ') EndDateStr 
,NVL(vf3u_pft,' ')  SourceFormType 
,NVL(TO_CHAR(vf3u_PFI),' ') SourceFormIDStr
,NVL(TO_CHAR(s.stf_per_id),' ') RecordedBy_StaffIDStr
,NVL(TO_CHAR(vf3u_recdate, 'YYYYMMDD'),' ') DateRecordedIDStr
,NVL(vf3u_yesonly,' ') void_flag
,TO_CHAR(vf3u_created_on,'YYYYMMDD')  created_on  
,NVL(TO_CHAR(vf3u_created_by),' ')    createBy_StaffIDStr 
,TO_CHAR(vf3u_amended_on,'YYYYMMDD')  amended_on  
,NVL(TO_CHAR(vf3u_amended_by),' ')    amendedBy_StaffIDStr  
FROM paris.mpiu_v_f3 f3
JOIN paris.stf_staff s
ON f3.vf3u_SCODE = s.stf_code
WHERE NVL(vf3u_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */ 
AND vf3u_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0ED385DE-96A1-4C13-B47D-3BCA0CF13D35}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT &#xA;  NVL(TO_CHAR(CPH_ID),' ')  Source_CarePlanHeaderIDStr &#xA;, NVL(TO_CHAR(CPH_REF_ID),' ') Source_ReferralIDStr &#xA;, NVL(TO_CHAR(CPH_PER_ID),' ') Source_System_ClientIDStr &#xA;, NVL(CPH_STATUS,' ')  STATUS&#xA;, NVL(TO_CHAR(CPH_DATE_CREATED,'YYYYMMDD'),' ')  Date_Created &#xA;, NVL(CPH_RECORDING_TEAM,' ') Team_Code&#xA;, TO_CHAR(CPH_CREATED_ON,'YYYYMMDD')  CPH_Create_DateStr&#xA;, TO_CHAR(CPH_AMENDED_ON,'YYYYMMDD')  CPH_Amended_DateStr&#xA;FROM paris.CPL_HEADER&#xA;WHERE CPH_PER_ID NOT IN (148,84484,999)&#xA;AND CPH_AMENDED_ON &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCarePlanHeaderStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT 
  NVL(TO_CHAR(CPH_ID),' ')  Source_CarePlanHeaderIDStr 
, NVL(TO_CHAR(CPH_REF_ID),' ') Source_ReferralIDStr 
, NVL(TO_CHAR(CPH_PER_ID),' ') Source_System_ClientIDStr 
, NVL(CPH_STATUS,' ')  STATUS
, NVL(TO_CHAR(CPH_DATE_CREATED,'YYYYMMDD'),' ')  Date_Created 
, NVL(CPH_RECORDING_TEAM,' ') Team_Code
, TO_CHAR(CPH_CREATED_ON,'YYYYMMDD')  CPH_Create_DateStr
, TO_CHAR(CPH_AMENDED_ON,'YYYYMMDD')  CPH_Amended_DateStr
FROM paris.CPL_HEADER
WHERE CPH_PER_ID NOT IN (148,84484,999)
AND CPH_AMENDED_ON &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{38F337FF-8F9F-47D7-9DAE-034098A0C248}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA;  NVL(TO_CHAR(CPN_ID),' ') CPN_ID&#xA;, NVL(TO_CHAR(CPN_CPH_ID),' ') CPH_ID  &#xA;, NVL(TO_CHAR(CPN_PER_ID),' ') PER_ID &#xA;, NVL(TO_CHAR(CPN_REF_ID),' ') REF_ID &#xA;, NVL(CPN_LIB_CODE,' ')  LIB_CODE&#xA;, NVL(TO_CHAR(CPN_ASS_ID),' ') CPN_ASS_ID&#xA;, NVL(CPN_NEED_CODE,' ')  NEED_CODE &#xA;, NVL(TO_CHAR(CPN_IDENTIFIED_ON,'YYYYMMDD'),' ')   IDENTIFIED_ON &#xA;, NVL(TO_CHAR(CPN_MET_ON,'YYYYMMDD'),' ')   MET_ON &#xA;, NVL(TO_CHAR(CPN_FINALISED_ON,'YYYYMMDD'),' ')  FINALISED_ON &#xA;, NVL(TO_CHAR(CPN_NOT_MET_ON,'YYYYMMDD'),' ')  NOT_MET_ON &#xA;, NVL(TO_CHAR(CPN_DATE_CREATED,'YYYYMMDD'),' ')  Date_Created &#xA;, NVL(CPN_RECORDING_TEAM,' ')  Team_Code &#xA;, NVL(CPN_OUTCOME,' ') CPN_OUTCOME &#xA;, NVL(CPN_CATEGORY,' ') CPN_CATEGORY  &#xA;, NVL(CPN_ORIGIN,' ') CPN_ORIGIN &#xA;, TO_CHAR(CPN_CREATED_ON,'YYYYMMDD')  CPN_Create_DateStr&#xA;, TO_CHAR(CPN_AMENDED_ON,'YYYYMMDD')  CPN_Amended_DateStr&#xA;FROM PARIS.CPL_NEED n&#xA;WHERE CPN_PER_ID NOT IN (148,84484,999)&#xA;AND CPN_AMENDED_ON &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCarePlanNeedStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
  NVL(TO_CHAR(CPN_ID),' ') CPN_ID
, NVL(TO_CHAR(CPN_CPH_ID),' ') CPH_ID  
, NVL(TO_CHAR(CPN_PER_ID),' ') PER_ID 
, NVL(TO_CHAR(CPN_REF_ID),' ') REF_ID 
, NVL(CPN_LIB_CODE,' ')  LIB_CODE
, NVL(TO_CHAR(CPN_ASS_ID),' ') CPN_ASS_ID
, NVL(CPN_NEED_CODE,' ')  NEED_CODE 
, NVL(TO_CHAR(CPN_IDENTIFIED_ON,'YYYYMMDD'),' ')   IDENTIFIED_ON 
, NVL(TO_CHAR(CPN_MET_ON,'YYYYMMDD'),' ')   MET_ON 
, NVL(TO_CHAR(CPN_FINALISED_ON,'YYYYMMDD'),' ')  FINALISED_ON 
, NVL(TO_CHAR(CPN_NOT_MET_ON,'YYYYMMDD'),' ')  NOT_MET_ON 
, NVL(TO_CHAR(CPN_DATE_CREATED,'YYYYMMDD'),' ')  Date_Created 
, NVL(CPN_RECORDING_TEAM,' ')  Team_Code 
, NVL(CPN_OUTCOME,' ') CPN_OUTCOME 
, NVL(CPN_CATEGORY,' ') CPN_CATEGORY  
, NVL(CPN_ORIGIN,' ') CPN_ORIGIN 
, TO_CHAR(CPN_CREATED_ON,'YYYYMMDD')  CPN_Create_DateStr
, TO_CHAR(CPN_AMENDED_ON,'YYYYMMDD')  CPN_Amended_DateStr
FROM PARIS.CPL_NEED n
WHERE CPN_PER_ID NOT IN (148,84484,999)
AND CPN_AMENDED_ON &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8C676FDD-AD17-4C66-A295-7940C03B80AB}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT /*DISTINCT */&#xA;&#x9;NVL(TO_CHAR(p.cpt_id),' ')         cpl_pattern_id&#xA;   ,NVL(TO_CHAR(p.cpt_link_id),' ')    link_id&#xA;   ,NVL(p.cpt_link_type,' ')  link_type&#xA;   ,NVL(TO_CHAR(p.cpt_type),' ')       TYPE&#xA;   ,NVL(p.cpt_pattern,' ')    pattern&#xA;   ,NVL(TO_CHAR(p.cpt_start_date,'YYYYMMDD'),' ') start_date&#xA;   ,NVL(TO_CHAR(p.cpt_end_date,'YYYYMMDD'),' ')   end_date&#xA;   ,NVL(TO_CHAR(p.cpt_duration),' ')   duration&#xA;   ,NVL(p.cpt_dur_unit,' ')   dur_unit&#xA;   ,NVL(TO_CHAR(p.cpt_num_occur),' ')  num_occurrences&#xA;   ,NVL(p.cpt_occur_type,' ') occurrence_type&#xA;   ,NVL(p.cpt_every,' ')      INTERVAL&#xA;   ,NVL(TO_CHAR(p.cpt_pmp_date,'YYYYMMDD'),' ')   pmp_date&#xA;   ,TO_CHAR(p.cpt_amended_on,'YYYYMMDD') amended_on&#xA;   ,TO_CHAR(p.cpt_created_on,'YYYYMMDD') created_on &#xA;FROM paris.cpl_pattern p &#xA;INNER JOIN paris.cpl_inter i &#xA;ON p.cpt_link_id = i.cpi_id &#xA; AND NVL(i.cpi_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;WHERE p.cpt_link_type = 'CPI' &#xA;AND p.cpt_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCarePlanPatternStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT /*DISTINCT */
	NVL(TO_CHAR(p.cpt_id),' ')         cpl_pattern_id
   ,NVL(TO_CHAR(p.cpt_link_id),' ')    link_id
   ,NVL(p.cpt_link_type,' ')  link_type
   ,NVL(TO_CHAR(p.cpt_type),' ')       TYPE
   ,NVL(p.cpt_pattern,' ')    pattern
   ,NVL(TO_CHAR(p.cpt_start_date,'YYYYMMDD'),' ') start_date
   ,NVL(TO_CHAR(p.cpt_end_date,'YYYYMMDD'),' ')   end_date
   ,NVL(TO_CHAR(p.cpt_duration),' ')   duration
   ,NVL(p.cpt_dur_unit,' ')   dur_unit
   ,NVL(TO_CHAR(p.cpt_num_occur),' ')  num_occurrences
   ,NVL(p.cpt_occur_type,' ') occurrence_type
   ,NVL(p.cpt_every,' ')      INTERVAL
   ,NVL(TO_CHAR(p.cpt_pmp_date,'YYYYMMDD'),' ')   pmp_date
   ,TO_CHAR(p.cpt_amended_on,'YYYYMMDD') amended_on
   ,TO_CHAR(p.cpt_created_on,'YYYYMMDD') created_on 
FROM paris.cpl_pattern p 
INNER JOIN paris.cpl_inter i 
ON p.cpt_link_id = i.cpi_id 
 AND NVL(i.cpi_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
WHERE p.cpt_link_type = 'CPI' 
AND p.cpt_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EB778364-A068-4730-9817-BCB2D37D3B63}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT &#xA;    NVL(TO_CHAR(t.lcr_id),' ')         cost_profile_id&#xA;   ,NVL(TO_CHAR(t.lcr_from,'YYYYMMDD'),' ')       date_from&#xA;   ,NVL(TO_CHAR(t.lcr_to,'YYYYMMDD'),' ')         date_to&#xA;/*   ,TO_CHAR(t.lcr_lic_id)     lic_id     all null values */&#xA;   ,NVL(t.lcr_inter_code,' ') intervention_code&#xA;   ,NVL(t.lcr_prv_code,' ')   prv_code&#xA;/*      ,t.lcr_lpt_code   lpt_code     all null values */&#xA;   ,NVL(t.lcr_usage,' ')      usage&#xA;   ,NVL(t.lcr_aggr,' ')       service_type&#xA;   ,TO_CHAR(t.lcr_created_on,'YYYYMMDD') created_on&#xA;   ,TO_CHAR(t.lcr_amended_on,'YYYYMMDD') amended_on &#xA;FROM paris.lib_cost_profile t &#xA;WHERE t.lcr_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCarePlanProfileStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT 
    NVL(TO_CHAR(t.lcr_id),' ')         cost_profile_id
   ,NVL(TO_CHAR(t.lcr_from,'YYYYMMDD'),' ')       date_from
   ,NVL(TO_CHAR(t.lcr_to,'YYYYMMDD'),' ')         date_to
/*   ,TO_CHAR(t.lcr_lic_id)     lic_id     all null values */
   ,NVL(t.lcr_inter_code,' ') intervention_code
   ,NVL(t.lcr_prv_code,' ')   prv_code
/*      ,t.lcr_lpt_code   lpt_code     all null values */
   ,NVL(t.lcr_usage,' ')      usage
   ,NVL(t.lcr_aggr,' ')       service_type
   ,TO_CHAR(t.lcr_created_on,'YYYYMMDD') created_on
   ,TO_CHAR(t.lcr_amended_on,'YYYYMMDD') amended_on 
FROM paris.lib_cost_profile t 
WHERE t.lcr_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C62ABBE1-0837-4121-8489-5A8E2E29E7AD}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT &#xA;    NVL(TO_CHAR(m.mcsu_id), ' ') casenote_abuse_id&#xA;   ,NVL(TO_CHAR(m.mcsu_id),' ')||'C1' casenote_abuse_key&#xA;   ,NVL(TO_CHAR(m.mcsu_cnh_id), ' ') casenote_header_id&#xA;   ,DECODE(m.mcsu_first_serv, 1, 'Y', ' ') first_service_event&#xA;   ,CASE&#xA;      WHEN m.mcsu_vio_yes_cli = 1 THEN '01'  /* Yes, indicated by client*/&#xA;      WHEN m.mcsu_vio_no = 1 THEN '00' /* No*/&#xA;      WHEN m.mcsu_vio_yes_oth = 1 THEN '02' /* Yes, indicated by other trusted source*/&#xA;      WHEN m.mcsu_vio_unknown = 1 THEN '98' /* Unknown/not asked */&#xA;      ELSE ' ' END violence_abuse&#xA;   ,CASE&#xA;      WHEN m.mcsu_sui_yes_cli = 1 THEN '01' /* Yes, indicated by client*/&#xA;      WHEN m.mcsu_sui_no = 1 THEN '00' /* No*/&#xA;      WHEN m.mcsu_sui_yes_oth = 1 THEN '02' /* Yes, indicated by other trusted source*/&#xA;      WHEN m.mcsu_sui_unknown = 1 THEN '98' /* Unknown/not asked */&#xA;      ELSE ' ' END suicide_attempt&#xA;   ,TO_CHAR(m.mcsu_created_on,'YYYYMMDD') created_on&#xA;   ,TO_CHAR(m.mcsu_amended_on,'YYYYMMDD') amended_on&#xA;   ,'txtu_mhamrrcn' UDFTable&#xA;FROM paris.txtu_mhamrrcn m &#xA;INNER JOIN paris.txt_cnote_head h &#xA;ON h.cnh_id = m.mcsu_cnh_id &#xA;/* AND h.cnh_team &lt;&gt; 'BCMHA' */&#xA;INNER JOIN paris.mpi_client c &#xA;ON c.cli_id = h.cnh_cli_id &#xA;AND NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */       &#xA;WHERE m.mcsu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot; +&#xA;&quot; union all&#xA;/* MHA MRR PN SUICIDALITY - MHA MRR PN SUICIDALITY - paris.txtu_mhamrrpnsu  */&#xA;SELECT &#xA;     NVL(TO_CHAR(s.msuu_id), ' ') casenote_abuse_id&#xA;    ,NVL(TO_CHAR(s.msuu_id),' ')||'C2' casenote_abuse_key&#xA;    ,NVL(TO_CHAR(s.msuu_cnh_id), ' ') casenote_header_id&#xA;    ,' ' first_service_event&#xA;    ,' ' violence_abuse&#xA;    ,CASE&#xA;       WHEN s.msuu_sui_yes_cli = 1 THEN '01' /* Yes, indicated by client*/&#xA;       WHEN s.msuu_sui_no = 1 THEN '00' /* No*/&#xA;       WHEN s.msuu_sui_yes_oth = 1 THEN '02' /* Yes, indicated by other trusted source*/&#xA;       WHEN s.msuu_sui_unknown = 1 THEN '98' /* Unknown/not asked*/&#xA;       ELSE ' ' END suicide_attempt&#xA;    ,TO_CHAR(s.msuu_created_on,'YYYYMMDD') created_on&#xA;    ,TO_CHAR(s.msuu_amended_on,'YYYYMMDD') amended_on &#xA;   ,'txtu_mhamrrpnsu' UDFTable&#xA;FROM paris.txtu_mhamrrpnsu s &#xA;INNER JOIN paris.txt_cnote_head h &#xA;ON h.cnh_id = s.msuu_cnh_id &#xA;/* AND h.cnh_team &lt;&gt; 'BCMHA' */&#xA;INNER JOIN paris.mpi_client c &#xA;ON c.cli_id = h.cnh_cli_id &#xA;AND NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */       &#xA;WHERE s.msuu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCaseNoteAbuseStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT 
    NVL(TO_CHAR(m.mcsu_id), ' ') casenote_abuse_id
   ,NVL(TO_CHAR(m.mcsu_id),' ')||'C1' casenote_abuse_key
   ,NVL(TO_CHAR(m.mcsu_cnh_id), ' ') casenote_header_id
   ,DECODE(m.mcsu_first_serv, 1, 'Y', ' ') first_service_event
   ,CASE
      WHEN m.mcsu_vio_yes_cli = 1 THEN '01'  /* Yes, indicated by client*/
      WHEN m.mcsu_vio_no = 1 THEN '00' /* No*/
      WHEN m.mcsu_vio_yes_oth = 1 THEN '02' /* Yes, indicated by other trusted source*/
      WHEN m.mcsu_vio_unknown = 1 THEN '98' /* Unknown/not asked */
      ELSE ' ' END violence_abuse
   ,CASE
      WHEN m.mcsu_sui_yes_cli = 1 THEN '01' /* Yes, indicated by client*/
      WHEN m.mcsu_sui_no = 1 THEN '00' /* No*/
      WHEN m.mcsu_sui_yes_oth = 1 THEN '02' /* Yes, indicated by other trusted source*/
      WHEN m.mcsu_sui_unknown = 1 THEN '98' /* Unknown/not asked */
      ELSE ' ' END suicide_attempt
   ,TO_CHAR(m.mcsu_created_on,'YYYYMMDD') created_on
   ,TO_CHAR(m.mcsu_amended_on,'YYYYMMDD') amended_on
   ,'txtu_mhamrrcn' UDFTable
FROM paris.txtu_mhamrrcn m 
INNER JOIN paris.txt_cnote_head h 
ON h.cnh_id = m.mcsu_cnh_id 
/* AND h.cnh_team &lt;&gt; 'BCMHA' */
INNER JOIN paris.mpi_client c 
ON c.cli_id = h.cnh_cli_id 
AND NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */       
WHERE m.mcsu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') union all
/* MHA MRR PN SUICIDALITY - MHA MRR PN SUICIDALITY - paris.txtu_mhamrrpnsu  */
SELECT 
     NVL(TO_CHAR(s.msuu_id), ' ') casenote_abuse_id
    ,NVL(TO_CHAR(s.msuu_id),' ')||'C2' casenote_abuse_key
    ,NVL(TO_CHAR(s.msuu_cnh_id), ' ') casenote_header_id
    ,' ' first_service_event
    ,' ' violence_abuse
    ,CASE
       WHEN s.msuu_sui_yes_cli = 1 THEN '01' /* Yes, indicated by client*/
       WHEN s.msuu_sui_no = 1 THEN '00' /* No*/
       WHEN s.msuu_sui_yes_oth = 1 THEN '02' /* Yes, indicated by other trusted source*/
       WHEN s.msuu_sui_unknown = 1 THEN '98' /* Unknown/not asked*/
       ELSE ' ' END suicide_attempt
    ,TO_CHAR(s.msuu_created_on,'YYYYMMDD') created_on
    ,TO_CHAR(s.msuu_amended_on,'YYYYMMDD') amended_on 
   ,'txtu_mhamrrpnsu' UDFTable
FROM paris.txtu_mhamrrpnsu s 
INNER JOIN paris.txt_cnote_head h 
ON h.cnh_id = s.msuu_cnh_id 
/* AND h.cnh_team &lt;&gt; 'BCMHA' */
INNER JOIN paris.mpi_client c 
ON c.cli_id = h.cnh_cli_id 
AND NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */       
WHERE s.msuu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B0A6879B-DCD6-41F6-9A32-8270A6C14C5A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT &#xA;    NVL(TO_CHAR(c.cpnu_id),' ')       contact_hc_id&#xA;   ,NVL(TO_CHAR(c.cpnu_cnh_id),' ')   casenote_header_id&#xA;   ,NVL(TO_CHAR(c.cpnu_yesonly),' ')  contact1_face&#xA;   ,NVL(TO_CHAR(c.cpnu_yesonly2),' ') contact1_phone&#xA;   ,NVL(TO_CHAR(c.cpnu_acpnd),' ')    contact1_setting&#xA;   ,NVL(TO_CHAR(c.cpnu_hour1),' ')    contact1_hours&#xA;   ,NVL(TO_CHAR(c.cpnu_min1),' ')     contact1_minutes&#xA;   ,NVL(TO_CHAR(c.cpnu_yesonly3),' ') contact2_face&#xA;   ,NVL(TO_CHAR(c.cpnu_yesonly4),' ') contact2_phone&#xA;   ,NVL(TO_CHAR(c.cpnu_acpnd2),' ')   contact2_setting&#xA;   ,NVL(TO_CHAR(c.cpnu_hour2),' ')    contact2_hours&#xA;   ,NVL(TO_CHAR(c.cpnu_min2),' ')     contact2_minutes&#xA;   ,NVL(TO_CHAR(c.cpnu_yesonly5),' ') contact3_face&#xA;   ,NVL(TO_CHAR(c.cpnu_yesonly6),' ') contact3_phone&#xA;   ,NVL(TO_CHAR(c.cpnu_acpnd3),' ')   contact3_setting&#xA;   ,NVL(TO_CHAR(c.cpnu_hour3),' ')    contact3_hours&#xA;   ,NVL(TO_CHAR(c.cpnu_min3),' ')     contact3_minutes&#xA;   ,NVL(TO_CHAR(c.cpnu_yesonly7),' ') contact4_face&#xA;   ,NVL(TO_CHAR(c.cpnu_yesonly8),' ') contact4_phone&#xA;   ,NVL(TO_CHAR(c.cpnu_acpnd4),' ')   contact4_setting&#xA;   ,NVL(TO_CHAR(c.cpnu_hour4),' ')    contact4_hours&#xA;   ,NVL(TO_CHAR(c.cpnu_min4),' ')     contact4_minutes&#xA;   ,TO_CHAR(c.cpnu_created_on, 'YYYYMMDD') created_on&#xA;   ,TO_CHAR(c.cpnu_amended_on, 'YYYYMMDD') amended_on&#xA;FROM paris.txtu_acpnci c &#xA;INNER JOIN paris.txt_cnote_head h &#xA;ON h.cnh_id = c.cpnu_cnh_id /* &#xA;AND h.cnh_team &lt;&gt; 'BCMHA'  */  &#xA;INNER JOIN paris.mpi_client cl &#xA;ON cl.cli_id = h.cnh_cli_id &#xA;AND NVL(cl.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */           &#xA;WHERE c.cpnu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCasenoteContactHCCStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT 
    NVL(TO_CHAR(c.cpnu_id),' ')       contact_hc_id
   ,NVL(TO_CHAR(c.cpnu_cnh_id),' ')   casenote_header_id
   ,NVL(TO_CHAR(c.cpnu_yesonly),' ')  contact1_face
   ,NVL(TO_CHAR(c.cpnu_yesonly2),' ') contact1_phone
   ,NVL(TO_CHAR(c.cpnu_acpnd),' ')    contact1_setting
   ,NVL(TO_CHAR(c.cpnu_hour1),' ')    contact1_hours
   ,NVL(TO_CHAR(c.cpnu_min1),' ')     contact1_minutes
   ,NVL(TO_CHAR(c.cpnu_yesonly3),' ') contact2_face
   ,NVL(TO_CHAR(c.cpnu_yesonly4),' ') contact2_phone
   ,NVL(TO_CHAR(c.cpnu_acpnd2),' ')   contact2_setting
   ,NVL(TO_CHAR(c.cpnu_hour2),' ')    contact2_hours
   ,NVL(TO_CHAR(c.cpnu_min2),' ')     contact2_minutes
   ,NVL(TO_CHAR(c.cpnu_yesonly5),' ') contact3_face
   ,NVL(TO_CHAR(c.cpnu_yesonly6),' ') contact3_phone
   ,NVL(TO_CHAR(c.cpnu_acpnd3),' ')   contact3_setting
   ,NVL(TO_CHAR(c.cpnu_hour3),' ')    contact3_hours
   ,NVL(TO_CHAR(c.cpnu_min3),' ')     contact3_minutes
   ,NVL(TO_CHAR(c.cpnu_yesonly7),' ') contact4_face
   ,NVL(TO_CHAR(c.cpnu_yesonly8),' ') contact4_phone
   ,NVL(TO_CHAR(c.cpnu_acpnd4),' ')   contact4_setting
   ,NVL(TO_CHAR(c.cpnu_hour4),' ')    contact4_hours
   ,NVL(TO_CHAR(c.cpnu_min4),' ')     contact4_minutes
   ,TO_CHAR(c.cpnu_created_on, 'YYYYMMDD') created_on
   ,TO_CHAR(c.cpnu_amended_on, 'YYYYMMDD') amended_on
FROM paris.txtu_acpnci c 
INNER JOIN paris.txt_cnote_head h 
ON h.cnh_id = c.cpnu_cnh_id /* 
AND h.cnh_team &lt;&gt; 'BCMHA'  */  
INNER JOIN paris.mpi_client cl 
ON cl.cli_id = h.cnh_cli_id 
AND NVL(cl.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */           
WHERE c.cpnu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{12659CCF-95B3-4D55-8246-06FE170205C0}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT &#xA;    NVL(TO_CHAR(i.pctu_id),' ')     contact_id&#xA;   ,NVL(TO_CHAR(i.pctu_cnh_id),' ') casenote_header_id&#xA;   ,NVL(i.pctu_acpnc1,' ') contact1_type_code&#xA;   ,NVL(TO_CHAR(i.pctu_hour1),' ')  contact1_hours&#xA;   ,NVL(TO_CHAR(i.pctu_min1),' ')   contact1_minutes&#xA;   ,NVL(i.pctu_acpnc2,' ') contact2_type_code&#xA;   ,NVL(TO_CHAR(i.pctu_hour2),' ')  contact2_hours&#xA;   ,NVL(TO_CHAR(i.pctu_min2),' ')   contact2_minutes&#xA;   ,NVL(i.pctu_acpnc3,' ') contact3_type_code&#xA;   ,NVL(TO_CHAR(i.pctu_hour3),' ')  contact3_hours&#xA;   ,NVL(TO_CHAR(i.pctu_min3),' ')   contact3_minutes&#xA;   ,NVL(i.pctu_acpnc4,' ') contact4_type_code&#xA;   ,NVL(TO_CHAR(i.pctu_hour4),' ')  contact4_hours&#xA;   ,NVL(TO_CHAR(i.pctu_min4),' ')   contact4_minutes&#xA;   ,TO_CHAR(i.pctu_created_on, 'YYYYMMDD') created_on&#xA;   ,TO_CHAR(i.pctu_amended_on, 'YYYYMMDD') amended_on&#xA;FROM paris.txtu_icpnct i &#xA;INNER JOIN paris.txt_cnote_head h &#xA;ON h.cnh_id = i.pctu_cnh_id /* &#xA;AND h.cnh_team &lt;&gt; 'BCMHA' */  &#xA;INNER JOIN paris.mpi_client c &#xA;ON c.cli_id = h.cnh_cli_id &#xA;AND NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */            &#xA;WHERE i.pctu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCasenoteContactStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT 
    NVL(TO_CHAR(i.pctu_id),' ')     contact_id
   ,NVL(TO_CHAR(i.pctu_cnh_id),' ') casenote_header_id
   ,NVL(i.pctu_acpnc1,' ') contact1_type_code
   ,NVL(TO_CHAR(i.pctu_hour1),' ')  contact1_hours
   ,NVL(TO_CHAR(i.pctu_min1),' ')   contact1_minutes
   ,NVL(i.pctu_acpnc2,' ') contact2_type_code
   ,NVL(TO_CHAR(i.pctu_hour2),' ')  contact2_hours
   ,NVL(TO_CHAR(i.pctu_min2),' ')   contact2_minutes
   ,NVL(i.pctu_acpnc3,' ') contact3_type_code
   ,NVL(TO_CHAR(i.pctu_hour3),' ')  contact3_hours
   ,NVL(TO_CHAR(i.pctu_min3),' ')   contact3_minutes
   ,NVL(i.pctu_acpnc4,' ') contact4_type_code
   ,NVL(TO_CHAR(i.pctu_hour4),' ')  contact4_hours
   ,NVL(TO_CHAR(i.pctu_min4),' ')   contact4_minutes
   ,TO_CHAR(i.pctu_created_on, 'YYYYMMDD') created_on
   ,TO_CHAR(i.pctu_amended_on, 'YYYYMMDD') amended_on
FROM paris.txtu_icpnct i 
INNER JOIN paris.txt_cnote_head h 
ON h.cnh_id = i.pctu_cnh_id /* 
AND h.cnh_team &lt;&gt; 'BCMHA' */  
INNER JOIN paris.mpi_client c 
ON c.cli_id = h.cnh_cli_id 
AND NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */            
WHERE i.pctu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4B70C5DE-47B3-4689-87AB-DE9CE945B0DE}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT &#xA;    NVL(TO_CHAR(a.tduu_id),' ') casenote_attendance_id&#xA;    ,NVL(TO_CHAR(a.tduu_cnh_id),' ') casenote_header_id&#xA;   ,CASE&#xA;      WHEN a.tduu_yesonly = 'Y' THEN '1'&#xA;      WHEN a.tduu_yesonly2 = 'Y' THEN '2'&#xA;      WHEN a.tduu_yesonly3 = 'Y' THEN '3'&#xA;      WHEN a.tduu_yesonly4 = 'Y' THEN '4'&#xA;      ELSE  ' '&#xA;      END attendance&#xA;   ,TO_CHAR(a.tduu_created_on,'YYYYMMDD') created_on&#xA;   ,TO_CHAR(a.tduu_amended_on,'YYYYMMDD') amended_on&#xA;FROM paris.txtu_mhgcga a&#xA;INNER JOIN paris.txt_cnote_head h &#xA;ON h.cnh_id = a.tduu_cnh_id &#xA;/* AND h.cnh_team &lt;&gt; 'BCMHA' */  &#xA;INNER JOIN paris.mpi_client c &#xA;ON c.cli_id = h.cnh_cli_id &#xA;AND NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */    &#xA;WHERE a.tduu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCaseNoteGroupAttendanceStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT 
    NVL(TO_CHAR(a.tduu_id),' ') casenote_attendance_id
    ,NVL(TO_CHAR(a.tduu_cnh_id),' ') casenote_header_id
   ,CASE
      WHEN a.tduu_yesonly = 'Y' THEN '1'
      WHEN a.tduu_yesonly2 = 'Y' THEN '2'
      WHEN a.tduu_yesonly3 = 'Y' THEN '3'
      WHEN a.tduu_yesonly4 = 'Y' THEN '4'
      ELSE  ' '
      END attendance
   ,TO_CHAR(a.tduu_created_on,'YYYYMMDD') created_on
   ,TO_CHAR(a.tduu_amended_on,'YYYYMMDD') amended_on
FROM paris.txtu_mhgcga a
INNER JOIN paris.txt_cnote_head h 
ON h.cnh_id = a.tduu_cnh_id 
/* AND h.cnh_team &lt;&gt; 'BCMHA' */  
INNER JOIN paris.mpi_client c 
ON c.cli_id = h.cnh_cli_id 
AND NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */    
WHERE a.tduu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F028445D-B712-4494-8032-284333D42CE2}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT NVL(TO_CHAR(h.cnh_id),' ') casenote_header_id&#xA;   ,NVL(h.cnh_origin_type,' ') cnh_origin_type&#xA;   ,NVL(TO_CHAR(h.cnh_origin_id),' ') cnh_origin_id&#xA;   ,NVL(TO_CHAR(tr.rclu_refid),' ') referral_id&#xA;   /*,NVL(TO_CHAR(DECODE(h.cnh_origin_type,'REF',h.cnh_origin_id)),' ') referral_id*/&#xA;   ,NVL(TO_CHAR(c.cli_per_id),' ') paris_id&#xA;   ,NVL(h.cnh_type,' ') casenote_type&#xA;   ,NVL(h.cnh_reason,' ') casenote_reason&#xA;   ,NVL(h.cnh_team,' ') team_code&#xA;   ,NVL(h.cnh_staff,' ') Staff_Code&#xA;   ,NVL(s.stf_profession,' ' ) Staff_Profession&#xA;   ,NVL(TO_CHAR(s.stf_per_id),' ') Staff_ParisID&#xA;   ,NVL(s2.stf_code ,' ' ) AmendedBy_Staff_Code &#xA;   ,NVL(s2.stf_profession ,' ' ) AmendedBy_Staff_Profession&#xA;   ,NVL(TO_CHAR(h.cnh_amended_by) ,' ' ) AmendedBy_StaffID&#xA;   ,NVL(s3.stf_code ,' ' )  CreatedBy_Staff_Code &#xA;   ,NVL(s3.stf_profession ,' ' )  CreatedBy_Staff_Profession&#xA;   ,NVL(TO_CHAR(h.cnh_created_by) ,' ' ) CreatedBy_StaffID&#xA;   ,NVL(TO_CHAR(h.cnh_event_date,'YYYYMMDD'),' ') casenote_date&#xA;   ,NVL(TO_CHAR(h.cnh_event_time, 'FM09.90'),' ') casenote_time&#xA;   ,NVL(TO_CHAR(h.cnh_created_at, 'FM09.90'),' ') casenote_created_time&#xA;   ,DECODE(TRIM(h.cnh_reason), 'EIE','Y','EWA','Y',  ' ')  void_flag&#xA;   ,NVL(ff.ftfu_yesonly,' ')  MHfirst_contact_flag&#xA;   ,TO_CHAR(h.cnh_created_on, 'YYYYMMDD') created_on&#xA;   ,TO_CHAR(GREATEST(NVL(h.cnh_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd')),NVL(tr.rclu_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd')),NVL(ff.ftfu_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd'))), 'YYYYMMDD') amended_on&#xA;FROM paris.txt_cnote_head h &#xA;LEFT OUTER JOIN paris.txtu_rcl tr &#xA;/*ON tr.rclu_cnh_id = h.cnh_id  changed in DR11809 */&#xA;ON h.cnh_id  = tr.rclu_cnh_id &#xA;LEFT OUTER JOIN paris.stf_staff s&#xA;ON h.cnh_staff = s.stf_code &#xA;LEFT OUTER JOIN paris.stf_staff s2&#xA;ON h.cnh_amended_by = s2.stf_per_id&#xA;LEFT OUTER JOIN paris.stf_staff s3&#xA;ON h.cnh_created_by = s3.stf_per_id&#xA;INNER JOIN paris.mpi_client c &#xA;ON c.cli_id = h.cnh_cli_id &#xA;AND NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */ &#xA;LEFT OUTER JOIN paris.txtu_mhfftf ff /* MH first face-to-face contact */ &#xA;ON h.cnh_id = ff.ftfu_cnh_id&#xA;WHERE NVL(TRIM(h.cnh_origin_type), 'X') NOT IN ('REF', 'ASS') &#xA;/* AND NVL(h.cnh_team,'X') &lt;&gt; 'BCMHA' */ &#xA;AND (h.cnh_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot; + &quot; OR tr.rclu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot; + &quot; OR ff.ftfu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd'))&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCasenoteHeaderStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT NVL(TO_CHAR(h.cnh_id),' ') casenote_header_id
   ,NVL(h.cnh_origin_type,' ') cnh_origin_type
   ,NVL(TO_CHAR(h.cnh_origin_id),' ') cnh_origin_id
   ,NVL(TO_CHAR(tr.rclu_refid),' ') referral_id
   /*,NVL(TO_CHAR(DECODE(h.cnh_origin_type,'REF',h.cnh_origin_id)),' ') referral_id*/
   ,NVL(TO_CHAR(c.cli_per_id),' ') paris_id
   ,NVL(h.cnh_type,' ') casenote_type
   ,NVL(h.cnh_reason,' ') casenote_reason
   ,NVL(h.cnh_team,' ') team_code
   ,NVL(h.cnh_staff,' ') Staff_Code
   ,NVL(s.stf_profession,' ' ) Staff_Profession
   ,NVL(TO_CHAR(s.stf_per_id),' ') Staff_ParisID
   ,NVL(s2.stf_code ,' ' ) AmendedBy_Staff_Code 
   ,NVL(s2.stf_profession ,' ' ) AmendedBy_Staff_Profession
   ,NVL(TO_CHAR(h.cnh_amended_by) ,' ' ) AmendedBy_StaffID
   ,NVL(s3.stf_code ,' ' )  CreatedBy_Staff_Code 
   ,NVL(s3.stf_profession ,' ' )  CreatedBy_Staff_Profession
   ,NVL(TO_CHAR(h.cnh_created_by) ,' ' ) CreatedBy_StaffID
   ,NVL(TO_CHAR(h.cnh_event_date,'YYYYMMDD'),' ') casenote_date
   ,NVL(TO_CHAR(h.cnh_event_time, 'FM09.90'),' ') casenote_time
   ,NVL(TO_CHAR(h.cnh_created_at, 'FM09.90'),' ') casenote_created_time
   ,DECODE(TRIM(h.cnh_reason), 'EIE','Y','EWA','Y',  ' ')  void_flag
   ,NVL(ff.ftfu_yesonly,' ')  MHfirst_contact_flag
   ,TO_CHAR(h.cnh_created_on, 'YYYYMMDD') created_on
   ,TO_CHAR(GREATEST(NVL(h.cnh_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd')),NVL(tr.rclu_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd')),NVL(ff.ftfu_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd'))), 'YYYYMMDD') amended_on
FROM paris.txt_cnote_head h 
LEFT OUTER JOIN paris.txtu_rcl tr 
/*ON tr.rclu_cnh_id = h.cnh_id  changed in DR11809 */
ON h.cnh_id  = tr.rclu_cnh_id 
LEFT OUTER JOIN paris.stf_staff s
ON h.cnh_staff = s.stf_code 
LEFT OUTER JOIN paris.stf_staff s2
ON h.cnh_amended_by = s2.stf_per_id
LEFT OUTER JOIN paris.stf_staff s3
ON h.cnh_created_by = s3.stf_per_id
INNER JOIN paris.mpi_client c 
ON c.cli_id = h.cnh_cli_id 
AND NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */ 
LEFT OUTER JOIN paris.txtu_mhfftf ff /* MH first face-to-face contact */ 
ON h.cnh_id = ff.ftfu_cnh_id
WHERE NVL(TRIM(h.cnh_origin_type), 'X') NOT IN ('REF', 'ASS') 
/* AND NVL(h.cnh_team,'X') &lt;&gt; 'BCMHA' */ 
AND (h.cnh_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') OR tr.rclu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') OR ff.ftfu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd'))</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3CD6A019-14E4-4C9D-9FBD-926E2737B9EC}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA;  NVL(TO_CHAR(t1uu_id),' ') SourceRecordIDStr&#xA;, NVL(TO_CHAR(t1uu_ass_id),' ') SourceAssessmentIDStr&#xA;,'assu_cd2atc' UDFTable&#xA;, NVL(t1uu_add_line1,' ') AddressLine1&#xA;, NVL(t1uu_add_line2,' ') AddressLine2  &#xA;, NVL(t1uu_add_line3,' ') AddressLine3 &#xA;, NVL(t1uu_add_line4,' ') City  &#xA;, NVL(t1uu_add_line5,' ') ProvinceCode &#xA;, NVL(t1uu_add_postcode,' ') PostalCode&#xA;, NVL(t1uu_add_country,' ')  Country&#xA;, NVL(t1uu_health_area,' ') health_area_code&#x9;  &#xA;, NVL(t1uu_yesonly1,' ')   Update_From_Address&#xA;, NVL(t1uu_yesonly2,' ')   Update_From_Lookup&#xA;, TO_CHAR( t1uu_created_on,'YYYYMMDD') created_on &#xA;, NVL(TO_CHAR(t1uu_created_by),' ') CreateBy_StaffIDStr&#xA;, TO_CHAR(t1uu_amended_on,'YYYYMMDD')  amended_on &#xA;, NVL(TO_CHAR(t1uu_amended_by),' ') AmendedBy_StaffIDStr&#xA;FROM paris.assu_cd2atc atc&#xA;JOIN PARIS.ass_assessment a&#xA;on atc.t1uu_ass_id=a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;--LEFT OUTER JOIN paris.stf_staff s&#xA;--on ic.pm2u_scode = s.stf_code&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */&#xA;AND atc.t1uu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCDAddressAtTimeOfCaseStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
  NVL(TO_CHAR(t1uu_id),' ') SourceRecordIDStr
, NVL(TO_CHAR(t1uu_ass_id),' ') SourceAssessmentIDStr
,'assu_cd2atc' UDFTable
, NVL(t1uu_add_line1,' ') AddressLine1
, NVL(t1uu_add_line2,' ') AddressLine2  
, NVL(t1uu_add_line3,' ') AddressLine3 
, NVL(t1uu_add_line4,' ') City  
, NVL(t1uu_add_line5,' ') ProvinceCode 
, NVL(t1uu_add_postcode,' ') PostalCode
, NVL(t1uu_add_country,' ')  Country
, NVL(t1uu_health_area,' ') health_area_code	  
, NVL(t1uu_yesonly1,' ')   Update_From_Address
, NVL(t1uu_yesonly2,' ')   Update_From_Lookup
, TO_CHAR( t1uu_created_on,'YYYYMMDD') created_on 
, NVL(TO_CHAR(t1uu_created_by),' ') CreateBy_StaffIDStr
, TO_CHAR(t1uu_amended_on,'YYYYMMDD')  amended_on 
, NVL(TO_CHAR(t1uu_amended_by),' ') AmendedBy_StaffIDStr
FROM paris.assu_cd2atc atc
JOIN PARIS.ass_assessment a
on atc.t1uu_ass_id=a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
--LEFT OUTER JOIN paris.stf_staff s
--on ic.pm2u_scode = s.stf_code
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */
AND atc.t1uu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4876184A-0773-46CB-94FF-2806CEB431EB}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA;  NVL(TO_CHAR(cdxu_ID),' ') sourceRecordIDStr&#xA;, NVL(TO_CHAR(cdxu_ass_id),' ') sourceAssessmentIDStr&#xA;,'assu_cded' UDFTable&#xA;, NVL(TO_CHAR(cdxu_REPDATE,'YYYYMMDD'),' ')  reported_date&#xA;, NVL(cdxu_CDREPBY,' ')  reported_bycode&#xA;, NVL(cdxu_YESONLY1,' ') outbreak_flag&#xA;, NVL(cdxu_OUTNO,' ')    outbreak_number&#xA;, NVL(cdxu_CASENO,' ')   case_number &#xA;, NVL(cdxu_DISEASE1,' ') disease_code&#xA;, NVL(cdxu_CDMODET,' ')  transmission_mode&#xA;, NVL(cdxu_CDEXPRF,' ')  exposure_risk_factor&#xA;, NVL(cdxu_EXPCOMM,' ')  exposure_risk_factor_text&#xA;, NVL(cdxu_CDEXPTYP2,' ') Exposure_Type &#xA;, NVL(TO_CHAR(cdxu_EXPFROMDT,'YYYYMMDD'),' ') exposure_start_date&#xA;, NVL(TO_CHAR(cdxu_EXPTODATE,'YYYYMMDD'),' ') exposure_end_date&#xA;, NVL(cdxu_YESONLY6,' ')  estimate_exposure_date_flag&#xA;, NVL(TO_CHAR(cdxu_EXPDATE,'YYYYMMDD'),' ') last_exposure_date                                        &#xA;, NVL(cdxu_CDOCC,' ') occupation_code&#xA;, NVL(cdxu_YNU1,' ')  signs_and_symptoms&#xA;, NVL(cdxu_YNU2,' ')  client_seek_medical_attention&#xA;, TO_CHAR(cdxu_created_on,'YYYYMMDD')  created_on  &#xA;, NVL(TO_CHAR(cdxu_created_by),' ')    createBy_StaffIDStr &#xA;, TO_CHAR(cdxu_amended_on,'YYYYMMDD')  amended_on  &#xA;, NVL(TO_CHAR(cdxu_amended_by),' ')    amendedBy_StaffIDStr  &#xA;FROM PARIS.assu_cded cd&#xA;JOIN paris.ass_assessment a&#xA;ON cd.cdxu_ass_id = a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */&#xA;AND cd.cdxu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCDExposureStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
  NVL(TO_CHAR(cdxu_ID),' ') sourceRecordIDStr
, NVL(TO_CHAR(cdxu_ass_id),' ') sourceAssessmentIDStr
,'assu_cded' UDFTable
, NVL(TO_CHAR(cdxu_REPDATE,'YYYYMMDD'),' ')  reported_date
, NVL(cdxu_CDREPBY,' ')  reported_bycode
, NVL(cdxu_YESONLY1,' ') outbreak_flag
, NVL(cdxu_OUTNO,' ')    outbreak_number
, NVL(cdxu_CASENO,' ')   case_number 
, NVL(cdxu_DISEASE1,' ') disease_code
, NVL(cdxu_CDMODET,' ')  transmission_mode
, NVL(cdxu_CDEXPRF,' ')  exposure_risk_factor
, NVL(cdxu_EXPCOMM,' ')  exposure_risk_factor_text
, NVL(cdxu_CDEXPTYP2,' ') Exposure_Type 
, NVL(TO_CHAR(cdxu_EXPFROMDT,'YYYYMMDD'),' ') exposure_start_date
, NVL(TO_CHAR(cdxu_EXPTODATE,'YYYYMMDD'),' ') exposure_end_date
, NVL(cdxu_YESONLY6,' ')  estimate_exposure_date_flag
, NVL(TO_CHAR(cdxu_EXPDATE,'YYYYMMDD'),' ') last_exposure_date                                        
, NVL(cdxu_CDOCC,' ') occupation_code
, NVL(cdxu_YNU1,' ')  signs_and_symptoms
, NVL(cdxu_YNU2,' ')  client_seek_medical_attention
, TO_CHAR(cdxu_created_on,'YYYYMMDD')  created_on  
, NVL(TO_CHAR(cdxu_created_by),' ')    createBy_StaffIDStr 
, TO_CHAR(cdxu_amended_on,'YYYYMMDD')  amended_on  
, NVL(TO_CHAR(cdxu_amended_by),' ')    amendedBy_StaffIDStr  
FROM PARIS.assu_cded cd
JOIN paris.ass_assessment a
ON cd.cdxu_ass_id = a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */
AND cd.cdxu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{38AC2802-E1DE-4152-B64D-C8A8C02E2F16}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA; 'assu_cdlr' UDFTable&#xA;, NVL(TO_CHAR(lr.cdlu_ID),' ')  SourceRecordIDStr &#xA;, NVL(TO_CHAR(a.ass_id),' ') SourceAssessmentIDStr  &#xA;, NVL(lr.cdlu_yesonly1,' ') void_flag  &#xA;, NVL(lr.cdlu_ardo,' ') Record_Status &#xA;, NVL(lr.cdlu_case_num,' ') Case_Number &#xA;, NVL(lr.cdlu_ynuk1,' ') Lab_report &#xA;, NVL(lr.cdlu_specimen_num,' ') Specimen_Number  &#xA;, NVL(TO_CHAR(lr.cdlu_specimen_dt, 'YYYYMMDD'),' ') Date_Specimen_Collected &#xA;, NVL(TO_CHAR(lr.cdlu_reported_dt, 'YYYYMMDD'),' ') Date_Reported  &#xA;, NVL(lr.cdlu_org_code,' ') org_code  &#xA;, NVL(lr.cdlu_source_sp,' ')  source_text&#xA;, NVL(lr.cdlu_isinfo,' ') Is_information  &#xA;, NVL(lr.cdlu_order_sp,' ')  order_text&#xA;, NVL(lr.cdlu_dxstatus,' ')  Disease_Status &#xA;, NVL(lr.cdlu_specims,' ') Source_of_Specimen &#xA;, NVL(lr.cdlu_culture,' ') culture  &#xA;, NVL(lr.cdlu_pcr,' ') PCR &#xA;, NVL(lr.cdlu_negposind1,' ') Anti_HAV_total  &#xA;, NVL(lr.cdlu_negposind2,' ') Anti_HAV_IgM &#xA;, NVL(lr.cdlu_negposind3,' ') HBsAg &#xA;, NVL(lr.cdlu_negposind4,' ') Anti_HBs &#xA;, NVL(lr.cdlu_hbtitre,' ') Anti_HBs_Titre  &#xA;, NVL(lr.cdlu_negposind5,' ') Anti_HBc_Total &#xA;, NVL(lr.cdlu_negposind6,' ') Anti_HBc_IgM  &#xA;, NVL(lr.cdlu_negposind7,' ') HBeAg  &#xA;, NVL(lr.cdlu_negposind8,' ') Anti_Hbe &#xA;, NVL(lr.cdlu_negposind9,' ') HBV_DNA  &#xA;, NVL(lr.cdlu_negposind10,' ') Anti_HCV &#xA;, NVL(lr.cdlu_negposind11,' ') HCV_RNA  &#xA;, NVL(lr.cdlu_negposind12,' ') Anti_HDV_Total  &#xA;, NVL(lr.cdlu_iggtitre,' ') Titre  &#xA;, NVL(lr.cdlu_acidbacilli,' ') Acid_Fast_Bacilli  &#xA;, NVL(lr.cdlu_astlevel,' ')  AST_Level  &#xA;, NVL(lr.cdlu_altlevel,' ') ALT_Level &#xA;, NVL(TO_CHAR(lr.cdlu_datetested, 'YYYYMMDD'),' ') Date_tested  &#xA;, NVL(lr.cdlu_cd2lrstype1,' ') Subclassification_type1  &#xA;, NVL(lr.cdlu_cd2lrstype2,' ') Subclassification_type2  &#xA;, NVL(lr.cdlu_cd2lrsres1,' ')  Subclassification_result1 &#xA;, NVL(lr.cdlu_cd2lrsres2,' ')  Subclassification_result2 &#xA;, NVL(lr.cdlu_labstatus,' ') Lab_Status &#xA;, NVL(lr.cdlu_cd2lrmc,' ') Method_of_Collection &#xA;, NVL(lr.cdlu_ind_test,' ') Indication_for_Testing &#xA;, NVL(lr.cdlu_orderedby,' ') Ordered_By &#xA;, NVL(lr.cdlu_cdrepsrc,' ') Report_Source &#xA;, NVL(TO_CHAR(lr.cdlu_created_on, 'YYYYMMDD'),' ') created_on &#xA;, NVL(TO_CHAR(lr.cdlu_created_by),' ')  created_by&#xA;, NVL(s1.stf_code,' ' )      Created_Staff_Code&#xA;, NVL(TO_CHAR(lr.cdlu_amended_on, 'YYYYMMDD'),' ') amended_on   &#xA;, NVL(TO_CHAR(lr.cdlu_amended_by),' ') amended_by &#xA;, NVL(s2.stf_code,' ')       Amended_Staff_Code&#xA;FROM paris.assu_cdlr lr&#xA;JOIN paris.ass_assessment a&#xA;ON lr.cdlu_ass_id = a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;LEFT OUTER JOIN paris.stf_staff s1&#xA;on lr.cdlu_created_by = s1.stf_per_id&#xA;LEFT OUTER JOIN paris.stf_staff s2&#xA;on lr.cdlu_amended_by = s2.stf_per_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;AND lr.cdlu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCDLabReportStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
 'assu_cdlr' UDFTable
, NVL(TO_CHAR(lr.cdlu_ID),' ')  SourceRecordIDStr 
, NVL(TO_CHAR(a.ass_id),' ') SourceAssessmentIDStr  
, NVL(lr.cdlu_yesonly1,' ') void_flag  
, NVL(lr.cdlu_ardo,' ') Record_Status 
, NVL(lr.cdlu_case_num,' ') Case_Number 
, NVL(lr.cdlu_ynuk1,' ') Lab_report 
, NVL(lr.cdlu_specimen_num,' ') Specimen_Number  
, NVL(TO_CHAR(lr.cdlu_specimen_dt, 'YYYYMMDD'),' ') Date_Specimen_Collected 
, NVL(TO_CHAR(lr.cdlu_reported_dt, 'YYYYMMDD'),' ') Date_Reported  
, NVL(lr.cdlu_org_code,' ') org_code  
, NVL(lr.cdlu_source_sp,' ')  source_text
, NVL(lr.cdlu_isinfo,' ') Is_information  
, NVL(lr.cdlu_order_sp,' ')  order_text
, NVL(lr.cdlu_dxstatus,' ')  Disease_Status 
, NVL(lr.cdlu_specims,' ') Source_of_Specimen 
, NVL(lr.cdlu_culture,' ') culture  
, NVL(lr.cdlu_pcr,' ') PCR 
, NVL(lr.cdlu_negposind1,' ') Anti_HAV_total  
, NVL(lr.cdlu_negposind2,' ') Anti_HAV_IgM 
, NVL(lr.cdlu_negposind3,' ') HBsAg 
, NVL(lr.cdlu_negposind4,' ') Anti_HBs 
, NVL(lr.cdlu_hbtitre,' ') Anti_HBs_Titre  
, NVL(lr.cdlu_negposind5,' ') Anti_HBc_Total 
, NVL(lr.cdlu_negposind6,' ') Anti_HBc_IgM  
, NVL(lr.cdlu_negposind7,' ') HBeAg  
, NVL(lr.cdlu_negposind8,' ') Anti_Hbe 
, NVL(lr.cdlu_negposind9,' ') HBV_DNA  
, NVL(lr.cdlu_negposind10,' ') Anti_HCV 
, NVL(lr.cdlu_negposind11,' ') HCV_RNA  
, NVL(lr.cdlu_negposind12,' ') Anti_HDV_Total  
, NVL(lr.cdlu_iggtitre,' ') Titre  
, NVL(lr.cdlu_acidbacilli,' ') Acid_Fast_Bacilli  
, NVL(lr.cdlu_astlevel,' ')  AST_Level  
, NVL(lr.cdlu_altlevel,' ') ALT_Level 
, NVL(TO_CHAR(lr.cdlu_datetested, 'YYYYMMDD'),' ') Date_tested  
, NVL(lr.cdlu_cd2lrstype1,' ') Subclassification_type1  
, NVL(lr.cdlu_cd2lrstype2,' ') Subclassification_type2  
, NVL(lr.cdlu_cd2lrsres1,' ')  Subclassification_result1 
, NVL(lr.cdlu_cd2lrsres2,' ')  Subclassification_result2 
, NVL(lr.cdlu_labstatus,' ') Lab_Status 
, NVL(lr.cdlu_cd2lrmc,' ') Method_of_Collection 
, NVL(lr.cdlu_ind_test,' ') Indication_for_Testing 
, NVL(lr.cdlu_orderedby,' ') Ordered_By 
, NVL(lr.cdlu_cdrepsrc,' ') Report_Source 
, NVL(TO_CHAR(lr.cdlu_created_on, 'YYYYMMDD'),' ') created_on 
, NVL(TO_CHAR(lr.cdlu_created_by),' ')  created_by
, NVL(s1.stf_code,' ' )      Created_Staff_Code
, NVL(TO_CHAR(lr.cdlu_amended_on, 'YYYYMMDD'),' ') amended_on   
, NVL(TO_CHAR(lr.cdlu_amended_by),' ') amended_by 
, NVL(s2.stf_code,' ')       Amended_Staff_Code
FROM paris.assu_cdlr lr
JOIN paris.ass_assessment a
ON lr.cdlu_ass_id = a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
LEFT OUTER JOIN paris.stf_staff s1
on lr.cdlu_created_by = s1.stf_per_id
LEFT OUTER JOIN paris.stf_staff s2
on lr.cdlu_amended_by = s2.stf_per_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
AND lr.cdlu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EC602C36-8864-4BB8-B707-7D98BF1B3457}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA;'assu_cd2dptr' UDFTable&#xA;, NVL(TO_CHAR(cd.dtru_id),' ') SourceRecordIDStr &#xA;, NVL(TO_CHAR(cd.dtru_ass_id),' ') SourceAssessmentIDStr&#xA;, NVL(cd.dtru_disease,' ')   Disease_code  /* L_DISEASE */&#xA;, NVL(cd.dtru_agent,' ')     Agent_code&#xA;, NVL(cd.dtru_subtype,' ')   Subtype_code&#xA;, NVL(cd.dtru_discomm,' ')   Disease_not_in_list&#xA;, NVL(cd.dtru_ynu,' ')       Tested_previously &#xA;, NVL(cd.dtru_city,' ')      prev_pos_City&#xA;, NVL(cd.dtru_province,' ')  prev_pos_Province&#xA;, NVL(cd.dtru_country,' ')   prev_pos_Country&#xA;, NVL(cd.dtru_testtype,' ')  Test_type&#xA;, NVL(TO_CHAR(cd.dtru_prevpostest, 'YYYYMMDD'),' ') previous_pos_test_date&#xA;, NVL(TO_CHAR(cd.dtru_prevnegtest, 'YYYYMMDD'),' ') previous_neg_test_date&#xA;, NVL(TO_CHAR(cd.dtru_prevposest),' ')  previous_pos_test_est&#xA;, NVL(TO_CHAR(cd.dtru_prevnegest),' ')  previous_neg_test_est&#xA;, NVL(TO_CHAR(cd.dtru_prevposna),' ')  previous_pos_test_na&#xA;, NVL(TO_CHAR(cd.dtru_prevnegna),' ')  previous_neg_test_na&#xA;, NVL(cd.dtru_cityneg,' ')      prev_neg_City&#xA;, NVL(cd.dtru_provinceneg,' ')  prev_neg_Province&#xA;, NVL(cd.dtru_countryneg,' ')   prev_neg_Country&#xA;, NVL(cd.dtru_testtypeneg,' ')  prev_neg_test_type&#xA;/*, NVL(TO_CHAR(cd.dtru_hx_id),' ')  Hx_Aud_Id */&#xA;, NVL(TO_CHAR(cd.dtru_created_by),' ') created_by&#xA;, NVL(TO_CHAR(s1.stf_code),' ') create_StaffCode&#xA;, NVL(TO_CHAR(cd.dtru_created_on, 'YYYYMMDD'),' ') created_on&#xA;, NVL(TO_CHAR(cd.dtru_amended_by),' ') amended_by&#xA;, NVL(TO_CHAR(s2.stf_code),' ') amended_StaffCode&#xA;, NVL(TO_CHAR(cd.dtru_amended_on, 'YYYYMMDD'),' ') amended_on&#xA;from paris.assu_cd2dptr cd&#xA;join paris.ass_assessment a&#xA;on cd.dtru_ass_id = a.ass_id&#xA;join paris.mpi_client c on a.ass_cli_id = c.cli_id&#xA;LEFT OUTER JOIN paris.stf_staff s1&#xA;on cd.dtru_created_by = s1.stf_per_id&#xA;LEFT OUTER JOIN paris.stf_staff s2 &#xA;on cd.dtru_amended_by = s2.stf_per_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;AND cd.dtru_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCDPreviousTestResultStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
'assu_cd2dptr' UDFTable
, NVL(TO_CHAR(cd.dtru_id),' ') SourceRecordIDStr 
, NVL(TO_CHAR(cd.dtru_ass_id),' ') SourceAssessmentIDStr
, NVL(cd.dtru_disease,' ')   Disease_code  /* L_DISEASE */
, NVL(cd.dtru_agent,' ')     Agent_code
, NVL(cd.dtru_subtype,' ')   Subtype_code
, NVL(cd.dtru_discomm,' ')   Disease_not_in_list
, NVL(cd.dtru_ynu,' ')       Tested_previously 
, NVL(cd.dtru_city,' ')      prev_pos_City
, NVL(cd.dtru_province,' ')  prev_pos_Province
, NVL(cd.dtru_country,' ')   prev_pos_Country
, NVL(cd.dtru_testtype,' ')  Test_type
, NVL(TO_CHAR(cd.dtru_prevpostest, 'YYYYMMDD'),' ') previous_pos_test_date
, NVL(TO_CHAR(cd.dtru_prevnegtest, 'YYYYMMDD'),' ') previous_neg_test_date
, NVL(TO_CHAR(cd.dtru_prevposest),' ')  previous_pos_test_est
, NVL(TO_CHAR(cd.dtru_prevnegest),' ')  previous_neg_test_est
, NVL(TO_CHAR(cd.dtru_prevposna),' ')  previous_pos_test_na
, NVL(TO_CHAR(cd.dtru_prevnegna),' ')  previous_neg_test_na
, NVL(cd.dtru_cityneg,' ')      prev_neg_City
, NVL(cd.dtru_provinceneg,' ')  prev_neg_Province
, NVL(cd.dtru_countryneg,' ')   prev_neg_Country
, NVL(cd.dtru_testtypeneg,' ')  prev_neg_test_type
/*, NVL(TO_CHAR(cd.dtru_hx_id),' ')  Hx_Aud_Id */
, NVL(TO_CHAR(cd.dtru_created_by),' ') created_by
, NVL(TO_CHAR(s1.stf_code),' ') create_StaffCode
, NVL(TO_CHAR(cd.dtru_created_on, 'YYYYMMDD'),' ') created_on
, NVL(TO_CHAR(cd.dtru_amended_by),' ') amended_by
, NVL(TO_CHAR(s2.stf_code),' ') amended_StaffCode
, NVL(TO_CHAR(cd.dtru_amended_on, 'YYYYMMDD'),' ') amended_on
from paris.assu_cd2dptr cd
join paris.ass_assessment a
on cd.dtru_ass_id = a.ass_id
join paris.mpi_client c on a.ass_cli_id = c.cli_id
LEFT OUTER JOIN paris.stf_staff s1
on cd.dtru_created_by = s1.stf_per_id
LEFT OUTER JOIN paris.stf_staff s2 
on cd.dtru_amended_by = s2.stf_per_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
AND cd.dtru_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{63AFE8C6-7359-4669-B6D7-650061EE140F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA;  'assu_cdphm' UDFTable&#xA;, NVL(TO_CHAR(cd.phmu_id),' ')  SourceRecordIDStr  &#xA;, NVL(TO_CHAR(a.ass_id),' ') SourceAssessmentIDStr  &#xA;, NVL(cd.phmu_phmeasure,' ') PublicHealth_Measure  /* L_PHM */&#xA;, NVL(cd.phmu_other,' ' ) other_measure &#xA;, NVL(TO_CHAR(cd.phmu_datefrom, 'YYYYMMDD'),' ') StartdateIDStr &#xA;, NVL(TO_CHAR(cd.phmu_dateto, 'YYYYMMDD'),' ') EndDateIDStr &#xA;, NVL(TO_CHAR(cd.phmu_daterec, 'YYYYMMDD'),' ') DateRecordedIDStr &#xA;, NVL(cd.phmu_scode,' ' ) Recorded_by_StaffCode &#xA;, NVL(TO_CHAR(s3.stf_per_id),' ') Recorded_by_StaffID&#xA;, NVL(cd.phmu_eine,' ' ) void_flag &#xA;, NVL(TO_CHAR(cd.phmu_created_by),' ') created_by_StaffID&#xA;, NVL(s1.stf_code,' ' )  Created_Staff_Code&#xA;, NVL(TO_CHAR(cd.phmu_created_on, 'YYYYMMDD'),' ') created_on&#xA;, NVL(TO_CHAR(cd.phmu_amended_by),' ') amended_by_StaffID &#xA;, NVL(s2.stf_code,' ')   Amended_Staff_Code&#xA;, NVL(TO_CHAR(cd.phmu_amended_on, 'YYYYMMDD'),' ') amended_on &#xA;FROM PARIS.assu_cdphm cd&#xA;JOIN paris.ass_assessment a&#xA;ON cd.phmu_ass_id = a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;LEFT OUTER JOIN paris.stf_staff s1&#xA;on cd.phmu_created_by = s1.stf_per_id&#xA;LEFT OUTER JOIN paris.stf_staff s2&#xA;on cd.phmu_amended_by = s2.stf_per_id&#xA;LEFT OUTER JOIN paris.stf_staff s3&#xA;on cd.phmu_scode = s3.stf_code&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;AND cd.phmu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCDPublicHealthMeasureStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
  'assu_cdphm' UDFTable
, NVL(TO_CHAR(cd.phmu_id),' ')  SourceRecordIDStr  
, NVL(TO_CHAR(a.ass_id),' ') SourceAssessmentIDStr  
, NVL(cd.phmu_phmeasure,' ') PublicHealth_Measure  /* L_PHM */
, NVL(cd.phmu_other,' ' ) other_measure 
, NVL(TO_CHAR(cd.phmu_datefrom, 'YYYYMMDD'),' ') StartdateIDStr 
, NVL(TO_CHAR(cd.phmu_dateto, 'YYYYMMDD'),' ') EndDateIDStr 
, NVL(TO_CHAR(cd.phmu_daterec, 'YYYYMMDD'),' ') DateRecordedIDStr 
, NVL(cd.phmu_scode,' ' ) Recorded_by_StaffCode 
, NVL(TO_CHAR(s3.stf_per_id),' ') Recorded_by_StaffID
, NVL(cd.phmu_eine,' ' ) void_flag 
, NVL(TO_CHAR(cd.phmu_created_by),' ') created_by_StaffID
, NVL(s1.stf_code,' ' )  Created_Staff_Code
, NVL(TO_CHAR(cd.phmu_created_on, 'YYYYMMDD'),' ') created_on
, NVL(TO_CHAR(cd.phmu_amended_by),' ') amended_by_StaffID 
, NVL(s2.stf_code,' ')   Amended_Staff_Code
, NVL(TO_CHAR(cd.phmu_amended_on, 'YYYYMMDD'),' ') amended_on 
FROM PARIS.assu_cdphm cd
JOIN paris.ass_assessment a
ON cd.phmu_ass_id = a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
LEFT OUTER JOIN paris.stf_staff s1
on cd.phmu_created_by = s1.stf_per_id
LEFT OUTER JOIN paris.stf_staff s2
on cd.phmu_amended_by = s2.stf_per_id
LEFT OUTER JOIN paris.stf_staff s3
on cd.phmu_scode = s3.stf_code
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
AND cd.phmu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4688538F-EE47-4306-A7A5-C3A433AABB3A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA;'assu_cdra' UDFTable&#xA;, NVL(TO_CHAR(cdbu_id),' ') SourceRecordIDStr &#xA;, NVL(TO_CHAR(cdbu_ass_id),' ') SourceAssessmentIDStr&#xA;, NVL(cdbu_placcomm,' ') place_of_exposure_text  &#xA;, NVL(cdbu_cdbitel1,' ') bite_location &#xA;, NVL(cdbu_bitecomm,' ') bite_comment &#xA;, NVL(cdbu_animal1,' ')  animal_species&#xA;, NVL(cdbu_anicomm,' ')  animal_species_comment&#xA;, NVL(cdbu_rbextyp1,' ') exposure_type&#xA;, NVL(cdbu_expcomm,' ')  exposure_type_comment &#xA;, NVL(cdbu_ynu1,' ')  bleeding_or_breaks &#xA;, NVL(TO_CHAR(cdbu_bldate, 'YYYYMMDD'),' ') bleeding_date&#xA;, NVL(cdbu_ynu2,' ')  previously_immunized&#xA;, NVL(TO_CHAR(cdbu_immdate, 'YYYYMMDD'),' ') immunized_date&#xA;, NVL(cdbu_ynu3,' ')  animal_immunized_for_rabies&#xA;, NVL(cdbu_behcomm,' ')  animal_behave_at_exposure &#xA;, NVL(cdbu_ynu4,' ') observation_follow_exposure  &#xA;, NVL(TO_CHAR(cdbu_fromdate, 'YYYYMMDD'),' ') observation_from&#xA;, NVL(TO_CHAR(cdbu_todate, 'YYYYMMDD'),' ') observation_to&#xA;, NVL(cdbu_plcomm,' ')  place_of_observation &#xA;, NVL(cdbu_phnumber,' ')  observation_phone&#xA;, NVL(cdbu_vetname,' ')  vet_name&#xA;, NVL(cdbu_vetphno,' ')  vet_phone&#xA;, NVL(cdbu_ynu5,' ')  brain_sent_for_testing &#xA;, NVL(TO_CHAR(cdbu_spdate, 'YYYYMMDD'),' ')  specimen_shipped_date&#xA;, NVL(TO_CHAR(cdbu_resdate, 'YYYYMMDD'),' ') result_date&#xA;, NVL(cdbu_negposind1,' ') result&#xA;, NVL(cdbu_yesonly1,' ') rig&#xA;, NVL(cdbu_yesonly2,' ') vaccine &#xA;, NVL(cdbu_yesno1,' ')   rig_yesno&#xA;, NVL(cdbu_yesno3,' ')   vaccine_yesno  &#xA;, NVL(cdbu_yesonly3,' ') rig_refused&#xA;, NVL(cdbu_yesonly4,' ') vaccine_refused &#xA;, NVL(cdbu_clweight,' ') Clients_weight&#xA;, NVL(cdbu_yesno4,' ')   referred_to_another_HA &#xA;, NVL(cdbu_province2,' ') province&#xA;, NVL(cdbu_country2,' ')  country&#xA;, NVL(TO_CHAR(cdbu_exposure_dt, 'YYYYMMDD'),' ') exposure_date&#xA;, NVL(cdbu_symptoms_st,' ')  symptoms&#xA;, NVL(TO_CHAR(cdbu_symptoms_dt, 'YYYYMMDD'),' ') symptoms_onset_date&#xA;, NVL(TO_CHAR(cdbu_report_dt, 'YYYYMMDD'),' ') report_date&#xA;, NVL(cdbu_negposind2,' ')  rabies_status &#xA;, NVL(cdbu_notification,' ')  notification_number &#xA;, NVL(cdbu_ynu7,' ')  services_notified&#xA;, NVL(cdbu_ynu8,' ')  animal_services_notified&#xA;/*, NVL(TO_CHAR(cdbu_hx_id),' ')  Hx_Aud_Id */&#xA;, NVL(TO_CHAR(cdbu_animaldate, 'YYYYMMDD'),' ') animal_immunized_date&#xA;, NVL(cdbu_animtyp,' ')  CD_type_of_animal&#xA;, NVL(cdbu_antypecomm,' ')  CD_type_of_animal_comment&#xA;, NVL(TO_CHAR(cdbu_created_by),' ')  created_by&#xA;, NVL(TO_CHAR(s1.stf_code),' ') create_StaffCode&#xA;, NVL(TO_CHAR(cdbu_created_on, 'YYYYMMDD'),' ') created_on&#xA;, NVL(TO_CHAR(cdbu_amended_by),' ')  amended_by &#xA;, NVL(TO_CHAR(s2.stf_code),' ') amended_StaffCode&#xA;, NVL(TO_CHAR(cdbu_amended_on, 'YYYYMMDD'),' ') amended_on&#xA;FROM paris.assu_cdra ra&#xA;join paris.ass_assessment a&#xA;on ra.cdbu_ass_id = a.ass_id&#xA;join paris.mpi_client c on a.ass_cli_id = c.cli_id&#xA;LEFT OUTER JOIN paris.stf_staff s1&#xA;on ra.cdbu_created_by = s1.stf_per_id&#xA;LEFT OUTER JOIN paris.stf_staff s2 &#xA;on ra.cdbu_amended_by = s2.stf_per_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;AND ra.cdbu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCDRabiesStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
'assu_cdra' UDFTable
, NVL(TO_CHAR(cdbu_id),' ') SourceRecordIDStr 
, NVL(TO_CHAR(cdbu_ass_id),' ') SourceAssessmentIDStr
, NVL(cdbu_placcomm,' ') place_of_exposure_text  
, NVL(cdbu_cdbitel1,' ') bite_location 
, NVL(cdbu_bitecomm,' ') bite_comment 
, NVL(cdbu_animal1,' ')  animal_species
, NVL(cdbu_anicomm,' ')  animal_species_comment
, NVL(cdbu_rbextyp1,' ') exposure_type
, NVL(cdbu_expcomm,' ')  exposure_type_comment 
, NVL(cdbu_ynu1,' ')  bleeding_or_breaks 
, NVL(TO_CHAR(cdbu_bldate, 'YYYYMMDD'),' ') bleeding_date
, NVL(cdbu_ynu2,' ')  previously_immunized
, NVL(TO_CHAR(cdbu_immdate, 'YYYYMMDD'),' ') immunized_date
, NVL(cdbu_ynu3,' ')  animal_immunized_for_rabies
, NVL(cdbu_behcomm,' ')  animal_behave_at_exposure 
, NVL(cdbu_ynu4,' ') observation_follow_exposure  
, NVL(TO_CHAR(cdbu_fromdate, 'YYYYMMDD'),' ') observation_from
, NVL(TO_CHAR(cdbu_todate, 'YYYYMMDD'),' ') observation_to
, NVL(cdbu_plcomm,' ')  place_of_observation 
, NVL(cdbu_phnumber,' ')  observation_phone
, NVL(cdbu_vetname,' ')  vet_name
, NVL(cdbu_vetphno,' ')  vet_phone
, NVL(cdbu_ynu5,' ')  brain_sent_for_testing 
, NVL(TO_CHAR(cdbu_spdate, 'YYYYMMDD'),' ')  specimen_shipped_date
, NVL(TO_CHAR(cdbu_resdate, 'YYYYMMDD'),' ') result_date
, NVL(cdbu_negposind1,' ') result
, NVL(cdbu_yesonly1,' ') rig
, NVL(cdbu_yesonly2,' ') vaccine 
, NVL(cdbu_yesno1,' ')   rig_yesno
, NVL(cdbu_yesno3,' ')   vaccine_yesno  
, NVL(cdbu_yesonly3,' ') rig_refused
, NVL(cdbu_yesonly4,' ') vaccine_refused 
, NVL(cdbu_clweight,' ') Clients_weight
, NVL(cdbu_yesno4,' ')   referred_to_another_HA 
, NVL(cdbu_province2,' ') province
, NVL(cdbu_country2,' ')  country
, NVL(TO_CHAR(cdbu_exposure_dt, 'YYYYMMDD'),' ') exposure_date
, NVL(cdbu_symptoms_st,' ')  symptoms
, NVL(TO_CHAR(cdbu_symptoms_dt, 'YYYYMMDD'),' ') symptoms_onset_date
, NVL(TO_CHAR(cdbu_report_dt, 'YYYYMMDD'),' ') report_date
, NVL(cdbu_negposind2,' ')  rabies_status 
, NVL(cdbu_notification,' ')  notification_number 
, NVL(cdbu_ynu7,' ')  services_notified
, NVL(cdbu_ynu8,' ')  animal_services_notified
/*, NVL(TO_CHAR(cdbu_hx_id),' ')  Hx_Aud_Id */
, NVL(TO_CHAR(cdbu_animaldate, 'YYYYMMDD'),' ') animal_immunized_date
, NVL(cdbu_animtyp,' ')  CD_type_of_animal
, NVL(cdbu_antypecomm,' ')  CD_type_of_animal_comment
, NVL(TO_CHAR(cdbu_created_by),' ')  created_by
, NVL(TO_CHAR(s1.stf_code),' ') create_StaffCode
, NVL(TO_CHAR(cdbu_created_on, 'YYYYMMDD'),' ') created_on
, NVL(TO_CHAR(cdbu_amended_by),' ')  amended_by 
, NVL(TO_CHAR(s2.stf_code),' ') amended_StaffCode
, NVL(TO_CHAR(cdbu_amended_on, 'YYYYMMDD'),' ') amended_on
FROM paris.assu_cdra ra
join paris.ass_assessment a
on ra.cdbu_ass_id = a.ass_id
join paris.mpi_client c on a.ass_cli_id = c.cli_id
LEFT OUTER JOIN paris.stf_staff s1
on ra.cdbu_created_by = s1.stf_per_id
LEFT OUTER JOIN paris.stf_staff s2 
on ra.cdbu_amended_by = s2.stf_per_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
AND ra.cdbu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E483573D-2082-47F3-A1A9-9278E69BBAA1}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA;'mpiu_actad' UDFTable&#xA;, NVL(TO_CHAR(a.xr9u_id),' ') SourceRecordIDStr &#xA;, NVL(TO_CHAR(a.xr9u_ass_id),' ') SourceAssessmentIDStr&#xA;, NVL(TO_CHAR(a.xr9u_per_id),' ')  SourceSystemClientIDStr &#xA;, NVL(a.xr9u_form_type,' ')   form_type&#xA;, NVL(a.xr9u_team_name,' ') TeamCode &#xA;, NVL(TO_CHAR(a.xr9u_drec, 'YYYYMMDD'),' ') recorded_date&#xA;, NVL(a.xr9u_record_by,' ')  recorded_by_staff_code&#xA;, NVL(TO_CHAR(s3.stf_per_id ),' ') recorded_by_staffID&#xA;, NVL(TO_CHAR(a.xr9u_date_app, 'YYYYMMDD'),' ') test_date&#xA;, NVL(a.xr9u_test_diag,' ')  test_diagnostic_type &#xA;, NVL(a.xr9u_test_diag2,' ')  test_diagnostic  /* L_ACTAD2 */&#xA;, NVL(a.xr9u_lot,' ')  lot_num&#xA;, NVL(a.xr9u_orderedby,' ')  orderedby  /* L_ORDERBY  */&#xA;, NVL(a.xr9u_ref_test,' ')  refused_test&#xA;, NVL(TO_CHAR(a.xr9u_ref_date, 'YYYYMMDD'),' ')  refused_date &#xA;, NVL(TO_CHAR(a.xr9u_date_read, 'YYYYMMDD'),' ') read_date&#xA;, NVL(xr9u_read_by,' ')  Read_By&#xA;, NVL(TO_CHAR(a.xr9u_reactionsize),' ')  reaction_size /* (mm) */&#xA;, NVL(a.xr9u_result,' ')  test_result /* L_CD2TPR */&#xA;, NVL(a.xr9u_followup,' ')  follow_up /* L_CD2TPFU */&#xA;, NVL(a.xr9u_luresult,' ')  Last_Updated_Result&#xA;, NVL(a.xr9u_eie,' ')  void_flag&#xA;, NVL(TO_CHAR(a.xr9u_created_by),' ') created_by&#xA;, NVL(TO_CHAR(s1.stf_code),' ') create_StaffCode&#xA;, NVL(TO_CHAR(a.xr9u_created_on, 'YYYYMMDD'),' ') created_on&#xA;, NVL(TO_CHAR(a.xr9u_amended_by),' ') amended_by&#xA;, NVL(TO_CHAR(s2.stf_code),' ') amended_StaffCode&#xA;, NVL(TO_CHAR(a.xr9u_amended_on, 'YYYYMMDD'),' ') amended_on&#xA;from paris.mpiu_actad a&#xA;LEFT OUTER JOIN paris.stf_staff s1&#xA;on a.xr9u_created_by = s1.stf_per_id&#xA;LEFT OUTER JOIN paris.stf_staff s2 &#xA;on a.xr9u_amended_by = s2.stf_per_id&#xA;left outer join paris.stf_staff s3&#xA;on a.xr9u_record_by = s3.stf_code&#xA;WHERE NVL(a.xr9u_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;AND a.xr9u_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCDTestResultStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
'mpiu_actad' UDFTable
, NVL(TO_CHAR(a.xr9u_id),' ') SourceRecordIDStr 
, NVL(TO_CHAR(a.xr9u_ass_id),' ') SourceAssessmentIDStr
, NVL(TO_CHAR(a.xr9u_per_id),' ')  SourceSystemClientIDStr 
, NVL(a.xr9u_form_type,' ')   form_type
, NVL(a.xr9u_team_name,' ') TeamCode 
, NVL(TO_CHAR(a.xr9u_drec, 'YYYYMMDD'),' ') recorded_date
, NVL(a.xr9u_record_by,' ')  recorded_by_staff_code
, NVL(TO_CHAR(s3.stf_per_id ),' ') recorded_by_staffID
, NVL(TO_CHAR(a.xr9u_date_app, 'YYYYMMDD'),' ') test_date
, NVL(a.xr9u_test_diag,' ')  test_diagnostic_type 
, NVL(a.xr9u_test_diag2,' ')  test_diagnostic  /* L_ACTAD2 */
, NVL(a.xr9u_lot,' ')  lot_num
, NVL(a.xr9u_orderedby,' ')  orderedby  /* L_ORDERBY  */
, NVL(a.xr9u_ref_test,' ')  refused_test
, NVL(TO_CHAR(a.xr9u_ref_date, 'YYYYMMDD'),' ')  refused_date 
, NVL(TO_CHAR(a.xr9u_date_read, 'YYYYMMDD'),' ') read_date
, NVL(xr9u_read_by,' ')  Read_By
, NVL(TO_CHAR(a.xr9u_reactionsize),' ')  reaction_size /* (mm) */
, NVL(a.xr9u_result,' ')  test_result /* L_CD2TPR */
, NVL(a.xr9u_followup,' ')  follow_up /* L_CD2TPFU */
, NVL(a.xr9u_luresult,' ')  Last_Updated_Result
, NVL(a.xr9u_eie,' ')  void_flag
, NVL(TO_CHAR(a.xr9u_created_by),' ') created_by
, NVL(TO_CHAR(s1.stf_code),' ') create_StaffCode
, NVL(TO_CHAR(a.xr9u_created_on, 'YYYYMMDD'),' ') created_on
, NVL(TO_CHAR(a.xr9u_amended_by),' ') amended_by
, NVL(TO_CHAR(s2.stf_code),' ') amended_StaffCode
, NVL(TO_CHAR(a.xr9u_amended_on, 'YYYYMMDD'),' ') amended_on
from paris.mpiu_actad a
LEFT OUTER JOIN paris.stf_staff s1
on a.xr9u_created_by = s1.stf_per_id
LEFT OUTER JOIN paris.stf_staff s2 
on a.xr9u_amended_by = s2.stf_per_id
left outer join paris.stf_staff s3
on a.xr9u_record_by = s3.stf_code
WHERE NVL(a.xr9u_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
AND a.xr9u_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BE22C1B2-4584-445A-8B66-33C7CB5F71EF}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA;  NVL(TO_CHAR(tmfu_id),' ') SourceRecordIDStr&#xA;, NVL(TO_CHAR(tmfu_ass_id),' ') SourceAssessmentIDStr&#xA;,'assu_cd2tmfu' UDFTable&#xA;/* Transmission mode */&#xA;, NVL(tmfu_transmit_lk,' ') transmission_mode&#xA;, NVL(tmfu_ynu1,' ') client_seek_medical_attention &#xA;, NVL(tmfu_ynu2,' ')  compliant_with_PH_measures &#xA;, NVL(tmfu_ynu3,' ')  client_hospitalized &#xA;, NVL(TO_CHAR(tmfu_admission_dt,'YYYYMMDD'),' ') admission_dateIDStr &#xA;, NVL(TO_CHAR(tmfu_discharge_dt,'YYYYMMDD'),' ') discharge_dateIDStr &#xA;, NVL(tmfu_ynu4,' ') admitted_to_ICU &#xA;, NVL(tmfu_hospital_st,' ') name_of_hospital_text &#xA;, NVL(TO_CHAR(tmfu_yesonly1),' ') chronic &#xA;, NVL(TO_CHAR(tmfu_yesonly2),' ') died &#xA;, NVL(TO_CHAR(tmfu_death_dt,'YYYYMMDD'),' ') death_dateIDStr   &#xA;, NVL(TO_CHAR(tmfu_yesonly3),' ') died_due_to_CD  &#xA;, NVL(TO_CHAR(tmfu_yesonly4),' ') followup_completed &#xA;, NVL(TO_CHAR(tmfu_yesonly5),' ') hospitalized_due_to_CD &#xA;, NVL(TO_CHAR(tmfu_yesonly6),' ') no_followup_required &#xA;, NVL(TO_CHAR(tmfu_yesonly7),' ') non_case&#xA;, NVL(TO_CHAR(tmfu_yesonly8),' ') recovered &#xA;, NVL(tmfu_recovery_st,' ') recovered_text &#xA;, NVL(TO_CHAR(tmfu_yesonly9),' ') recovered_with_Sequelae &#xA;, NVL(TO_CHAR(tmfu_yesonly10),' ') referred_for_care&#xA;, NVL(TO_CHAR(tmfu_yesonly11),' ') remains_unwell_due_to_CD &#xA;, NVL(TO_CHAR(tmfu_yesonly12),' ') surgical_intervention &#xA;, NVL(TO_CHAR(tmfu_yesonly13),' ') other &#xA;, NVL(tmfu_disease_st,' ') disease_text  &#xA;, NVL(TO_CHAR(tmfu_yesonly14),' ') unable_to_locate &#xA;, NVL(TO_CHAR(tmfu_yesonly15),' ') unknown &#xA;, NVL(TO_CHAR(tmfu_contacts_num),' ') contacts_partners_identified  &#xA;, NVL(TO_CHAR(tmfu_known_num),' ') number_known_contact_partners  &#xA;, NVL(TO_CHAR(tmfu_referred_num),' ') partners_referred_outside_HSDA  &#xA;, NVL(TO_CHAR(tmfu_phnfu_num),' ') PHN_followed &#xA;, NVL(TO_CHAR(tmfu_hcpfu_num),' ') HCP_followed&#xA;, NVL(TO_CHAR(tmfu_index_num),' ') index_case&#xA;, NVL(tmfu_ynu5,' ') known_secondary_cases&#xA;, NVL(TO_CHAR(tmfu_seconds_num),' ') total_secondary_cases&#xA;, TO_CHAR(tmfu_created_on,'YYYYMMDD') created_on &#xA;, NVL(TO_CHAR(tmfu_created_by),' ') createBy_StaffIDStr&#xA;, TO_CHAR(tmfu_amended_on,'YYYYMMDD')  amended_on &#xA;, NVL(TO_CHAR(tmfu_amended_by),' ') amendedBy_StaffIDStr&#xA;FROM paris.assu_cd2tmfu cd&#xA;JOIN PARIS.ass_assessment a&#xA;on cd.tmfu_ass_id=a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */&#xA;AND cd.tmfu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCDTransmissionFollowupStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
  NVL(TO_CHAR(tmfu_id),' ') SourceRecordIDStr
, NVL(TO_CHAR(tmfu_ass_id),' ') SourceAssessmentIDStr
,'assu_cd2tmfu' UDFTable
/* Transmission mode */
, NVL(tmfu_transmit_lk,' ') transmission_mode
, NVL(tmfu_ynu1,' ') client_seek_medical_attention 
, NVL(tmfu_ynu2,' ')  compliant_with_PH_measures 
, NVL(tmfu_ynu3,' ')  client_hospitalized 
, NVL(TO_CHAR(tmfu_admission_dt,'YYYYMMDD'),' ') admission_dateIDStr 
, NVL(TO_CHAR(tmfu_discharge_dt,'YYYYMMDD'),' ') discharge_dateIDStr 
, NVL(tmfu_ynu4,' ') admitted_to_ICU 
, NVL(tmfu_hospital_st,' ') name_of_hospital_text 
, NVL(TO_CHAR(tmfu_yesonly1),' ') chronic 
, NVL(TO_CHAR(tmfu_yesonly2),' ') died 
, NVL(TO_CHAR(tmfu_death_dt,'YYYYMMDD'),' ') death_dateIDStr   
, NVL(TO_CHAR(tmfu_yesonly3),' ') died_due_to_CD  
, NVL(TO_CHAR(tmfu_yesonly4),' ') followup_completed 
, NVL(TO_CHAR(tmfu_yesonly5),' ') hospitalized_due_to_CD 
, NVL(TO_CHAR(tmfu_yesonly6),' ') no_followup_required 
, NVL(TO_CHAR(tmfu_yesonly7),' ') non_case
, NVL(TO_CHAR(tmfu_yesonly8),' ') recovered 
, NVL(tmfu_recovery_st,' ') recovered_text 
, NVL(TO_CHAR(tmfu_yesonly9),' ') recovered_with_Sequelae 
, NVL(TO_CHAR(tmfu_yesonly10),' ') referred_for_care
, NVL(TO_CHAR(tmfu_yesonly11),' ') remains_unwell_due_to_CD 
, NVL(TO_CHAR(tmfu_yesonly12),' ') surgical_intervention 
, NVL(TO_CHAR(tmfu_yesonly13),' ') other 
, NVL(tmfu_disease_st,' ') disease_text  
, NVL(TO_CHAR(tmfu_yesonly14),' ') unable_to_locate 
, NVL(TO_CHAR(tmfu_yesonly15),' ') unknown 
, NVL(TO_CHAR(tmfu_contacts_num),' ') contacts_partners_identified  
, NVL(TO_CHAR(tmfu_known_num),' ') number_known_contact_partners  
, NVL(TO_CHAR(tmfu_referred_num),' ') partners_referred_outside_HSDA  
, NVL(TO_CHAR(tmfu_phnfu_num),' ') PHN_followed 
, NVL(TO_CHAR(tmfu_hcpfu_num),' ') HCP_followed
, NVL(TO_CHAR(tmfu_index_num),' ') index_case
, NVL(tmfu_ynu5,' ') known_secondary_cases
, NVL(TO_CHAR(tmfu_seconds_num),' ') total_secondary_cases
, TO_CHAR(tmfu_created_on,'YYYYMMDD') created_on 
, NVL(TO_CHAR(tmfu_created_by),' ') createBy_StaffIDStr
, TO_CHAR(tmfu_amended_on,'YYYYMMDD')  amended_on 
, NVL(TO_CHAR(tmfu_amended_by),' ') amendedBy_StaffIDStr
FROM paris.assu_cd2tmfu cd
JOIN PARIS.ass_assessment a
on cd.tmfu_ass_id=a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */
AND cd.tmfu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D82E875F-4610-47DB-AEB3-C2F38B0D0C98}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT &#xA;    NVL(TO_CHAR(c.fro_id) ,' ')    res_contrib_id&#xA;    ,NVL(TO_CHAR(c.fro_per_id) ,' ') paris_id&#xA;    ,NVL(TO_CHAR(stf.stf_per_id) ,' ')       assessed_by&#xA;    ,NVL(TO_CHAR(c.fro_effective_from, 'YYYYMMDD') ,' ') effective_from_date&#xA;    ,NVL(TO_CHAR(c.fro_effective_to, 'YYYYMMDD') ,' ')   effective_to_date&#xA;    ,NVL(TO_CHAR(c.fro_ndi) ,' ')            core_hs_per_diem_rate&#xA;    ,TO_CHAR(c.fro_created_on, 'YYYYMMDD')     created_on&#xA;    ,TO_CHAR(c.fro_amended_on, 'YYYYMMDD')     amended_on&#xA;FROM paris.fin_res_contrib c&#xA;INNER JOIN paris.stf_staff stf &#xA;ON c.fro_assessed_by = stf.stf_id&#xA;WHERE NVL(c.fro_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */&#xA; AND c.fro_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLClientContributionStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT 
    NVL(TO_CHAR(c.fro_id) ,' ')    res_contrib_id
    ,NVL(TO_CHAR(c.fro_per_id) ,' ') paris_id
    ,NVL(TO_CHAR(stf.stf_per_id) ,' ')       assessed_by
    ,NVL(TO_CHAR(c.fro_effective_from, 'YYYYMMDD') ,' ') effective_from_date
    ,NVL(TO_CHAR(c.fro_effective_to, 'YYYYMMDD') ,' ')   effective_to_date
    ,NVL(TO_CHAR(c.fro_ndi) ,' ')            core_hs_per_diem_rate
    ,TO_CHAR(c.fro_created_on, 'YYYYMMDD')     created_on
    ,TO_CHAR(c.fro_amended_on, 'YYYYMMDD')     amended_on
FROM paris.fin_res_contrib c
INNER JOIN paris.stf_staff stf 
ON c.fro_assessed_by = stf.stf_id
WHERE NVL(c.fro_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */
 AND c.fro_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2E67AD88-CE75-4287-8DD6-636A20042C91}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT  &#xA;   NVL(TO_CHAR(r.rel_origin_per_id),' ') Source_System_ClientIDStr&#xA;  ,NVL(TO_CHAR(r.REL_ID),' ') Source_ClientGPRecordIDStr&#xA;  ,NVL(TO_CHAR(r.REL_FROM,'YYYYMMDD'),' ') StartDateStr&#xA;  ,NVL(TO_CHAR(r.REL_TO,'YYYYMMDD'),' ') EndDateStr&#xA;  ,NVL(TO_CHAR(gp.GPC_PER_ID),' ')  GP_paris_id &#xA;  ,NVL(gp.GPC_GP_CODE,' ') GP_CODE&#xA;  ,NVL(gp.GPC_NAT_CODE,' ') NAT_CODE&#xA;  ,TO_CHAR(LEAST(NVL(r.REL_CREATED_ON,TO_DATE('2099-12-31','yyyy-mm-dd')),NVL(gp.GPC_CREATED_ON,TO_DATE('2099-12-31','yyyy-mm-dd'))),'YYYYMMDD') CREATED_ON&#xA;  ,TO_CHAR(GREATEST(NVL(r.REL_AMENDED_ON,TO_DATE('1900-01-01','yyyy-mm-dd')),NVL(gp.GPC_AMENDED_ON,TO_DATE('1900-01-01','yyyy-mm-dd'))), 'YYYYMMDD') AMENDED_ON&#xA;FROM paris.mpi_relationship r&#xA;JOIN PARIS.MPI_GP gp&#xA;ON r.rel_target_per_id = gp.GPC_PER_ID&#xA;AND r.rel_relationship = 'GP'&#xA;WHERE NVL(gp.GPC_PER_ID,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;AND (r.REL_AMENDED_ON &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd') OR gp.GPC_AMENDED_ON &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd'))&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLClientGPStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT  
   NVL(TO_CHAR(r.rel_origin_per_id),' ') Source_System_ClientIDStr
  ,NVL(TO_CHAR(r.REL_ID),' ') Source_ClientGPRecordIDStr
  ,NVL(TO_CHAR(r.REL_FROM,'YYYYMMDD'),' ') StartDateStr
  ,NVL(TO_CHAR(r.REL_TO,'YYYYMMDD'),' ') EndDateStr
  ,NVL(TO_CHAR(gp.GPC_PER_ID),' ')  GP_paris_id 
  ,NVL(gp.GPC_GP_CODE,' ') GP_CODE
  ,NVL(gp.GPC_NAT_CODE,' ') NAT_CODE
  ,TO_CHAR(LEAST(NVL(r.REL_CREATED_ON,TO_DATE('2099-12-31','yyyy-mm-dd')),NVL(gp.GPC_CREATED_ON,TO_DATE('2099-12-31','yyyy-mm-dd'))),'YYYYMMDD') CREATED_ON
  ,TO_CHAR(GREATEST(NVL(r.REL_AMENDED_ON,TO_DATE('1900-01-01','yyyy-mm-dd')),NVL(gp.GPC_AMENDED_ON,TO_DATE('1900-01-01','yyyy-mm-dd'))), 'YYYYMMDD') AMENDED_ON
FROM paris.mpi_relationship r
JOIN PARIS.MPI_GP gp
ON r.rel_target_per_id = gp.GPC_PER_ID
AND r.rel_relationship = 'GP'
WHERE NVL(gp.GPC_PER_ID,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
AND (r.REL_AMENDED_ON &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') OR gp.GPC_AMENDED_ON &gt;= TO_DATE('2015-06-01','yyyy-mm-dd'))</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E5356628-3B3B-49B8-9BDA-A88F205375AD}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA;    NVL(TO_CHAR(g.grp_id),' ')        client_group_id&#xA;   ,NVL(TO_CHAR(g.grp_per_id),' ')    paris_id&#xA;   ,NVL(TO_CHAR(g.grp_main),' ')      main_group&#xA;   ,NVL(g.grp_group,' ')              client_group&#xA;   ,NVL(g.grp_sub_group,' ')          sub_group&#xA;   ,NVL(TO_CHAR(g.grp_from, 'YYYYMMDD') ,' ')     valid_from&#xA;   ,NVL(TO_CHAR(g.grp_to, 'YYYYMMDD'),' ')        valid_to&#xA;   ,TO_CHAR(g.grp_created_on, 'YYYYMMDD')       created_on&#xA;   ,TO_CHAR(g.grp_amended_on, 'YYYYMMDD')       amended_on&#xA;FROM paris.mpi_grouping g&#xA;WHERE  NVL(g.grp_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */&#xA;  AND g.grp_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLClientGroupStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
    NVL(TO_CHAR(g.grp_id),' ')        client_group_id
   ,NVL(TO_CHAR(g.grp_per_id),' ')    paris_id
   ,NVL(TO_CHAR(g.grp_main),' ')      main_group
   ,NVL(g.grp_group,' ')              client_group
   ,NVL(g.grp_sub_group,' ')          sub_group
   ,NVL(TO_CHAR(g.grp_from, 'YYYYMMDD') ,' ')     valid_from
   ,NVL(TO_CHAR(g.grp_to, 'YYYYMMDD'),' ')        valid_to
   ,TO_CHAR(g.grp_created_on, 'YYYYMMDD')       created_on
   ,TO_CHAR(g.grp_amended_on, 'YYYYMMDD')       amended_on
FROM paris.mpi_grouping g
WHERE  NVL(g.grp_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */
  AND g.grp_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{88D6EE6C-D3EB-4E2A-8480-D393E1366069}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT &#xA;&#x9;NVL(TO_CHAR(r.reg_id),' ')           client_register_id&#xA;&#x9;,NVL(TO_CHAR(r.reg_per_id),' ')       paris_id&#xA;&#x9;,NVL(r.reg_type,' ')         register_type&#xA;&#x9;,NVL(r.reg_category,' ')     category&#xA;&#x9;,NVL(TO_CHAR(r.reg_reg_to_trust,'YYYYMMDD'),' ')  register_date&#xA;&#x9;,NVL(TO_CHAR(r.reg_deregistered,'YYYYMMDD'),' ')  deregister_date&#xA;&#x9;,NVL(r.reg_reason_dereg,' ') deregister_reason&#xA;    ,NVL(TO_CHAR(t.tem_code),' ') team_code&#xA;    ,TO_CHAR(r.reg_created_on,'YYYYMMDD') created_on&#xA;    ,TO_CHAR(r.reg_amended_on,'YYYYMMDD') amended_on&#xA;FROM paris.reg_register r &#xA;INNER JOIN paris.stf_team t &#xA;ON t.tem_key = r.reg_owner_tem_id &#xA;/* AND t.tem_code &lt;&gt; 'BCMHA' */ &#xA;WHERE NVL(r.reg_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */&#xA;AND  r.reg_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLClientRegisterStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT 
	NVL(TO_CHAR(r.reg_id),' ')           client_register_id
	,NVL(TO_CHAR(r.reg_per_id),' ')       paris_id
	,NVL(r.reg_type,' ')         register_type
	,NVL(r.reg_category,' ')     category
	,NVL(TO_CHAR(r.reg_reg_to_trust,'YYYYMMDD'),' ')  register_date
	,NVL(TO_CHAR(r.reg_deregistered,'YYYYMMDD'),' ')  deregister_date
	,NVL(r.reg_reason_dereg,' ') deregister_reason
    ,NVL(TO_CHAR(t.tem_code),' ') team_code
    ,TO_CHAR(r.reg_created_on,'YYYYMMDD') created_on
    ,TO_CHAR(r.reg_amended_on,'YYYYMMDD') amended_on
FROM paris.reg_register r 
INNER JOIN paris.stf_team t 
ON t.tem_key = r.reg_owner_tem_id 
/* AND t.tem_code &lt;&gt; 'BCMHA' */ 
WHERE NVL(r.reg_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */
AND  r.reg_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B73FAB20-37E1-419E-A382-164FA4DE95EA}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT &#xA;DISTINCT NVL(TO_CHAR(p.per_id),' ')  paris_id&#xA;,NVL(TO_CHAR(p.per_dob, 'YYYYMMDD'),' ') dob &#xA;,NVL(TO_CHAR(p.per_dob_est),' ') dob_estimated&#xA;,NVL(p.per_gender,' ') gender&#xA;,NVL(p.per_ethnicity,' ') ethnicity&#xA;,NVL(p.per_locality,' ') education&#xA;,NVL(p.per_resp_authority,' ') client_cha&#xA;,DECODE(TRIM(n.nam_title), 'VOID', 'Y', 'VOIDC', 'Y', ' ') void_flag&#xA;,TO_CHAR(p.per_created_on, 'YYYYMMDD') created_on&#xA;,TO_CHAR(p.per_amended_on, 'YYYYMMDD') amended_on&#xA;FROM paris.mpi_person p &#xA;LEFT OUTER JOIN paris.mpi_name n &#xA;ON n.nam_per_id = p.per_id &#xA;AND TRIM(n.nam_title) NOT IN ('VOID', 'VOIDC') &#xA;AND (n.nam_to IS NULL OR n.nam_to &gt; TRUNC(SYSDATE)) &#xA;WHERE NVL(p.per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */ &#xA;  AND (TRUNC(p.per_amended_on) &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] + &#xA;&quot;','yyyy-mm-dd') OR TRUNC(n.nam_amended_on) &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd'))&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLClientStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT 
DISTINCT NVL(TO_CHAR(p.per_id),' ')  paris_id
,NVL(TO_CHAR(p.per_dob, 'YYYYMMDD'),' ') dob 
,NVL(TO_CHAR(p.per_dob_est),' ') dob_estimated
,NVL(p.per_gender,' ') gender
,NVL(p.per_ethnicity,' ') ethnicity
,NVL(p.per_locality,' ') education
,NVL(p.per_resp_authority,' ') client_cha
,DECODE(TRIM(n.nam_title), 'VOID', 'Y', 'VOIDC', 'Y', ' ') void_flag
,TO_CHAR(p.per_created_on, 'YYYYMMDD') created_on
,TO_CHAR(p.per_amended_on, 'YYYYMMDD') amended_on
FROM paris.mpi_person p 
LEFT OUTER JOIN paris.mpi_name n 
ON n.nam_per_id = p.per_id 
AND TRIM(n.nam_title) NOT IN ('VOID', 'VOIDC') 
AND (n.nam_to IS NULL OR n.nam_to &gt; TRUNC(SYSDATE)) 
WHERE NVL(p.per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */ 
  AND (TRUNC(p.per_amended_on) &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') OR TRUNC(n.nam_amended_on) &gt;= TO_DATE('2015-06-01','yyyy-mm-dd'))</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B8876DD6-8171-4609-973B-397EAE603606}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT &#xA;&#x9;NVL(TO_CHAR(s.cspu_id),' ')           clinical_services_id&#xA;&#x9;,NVL(TO_CHAR(s.cspu_cnh_id),' ')       casenote_header_id&#xA;&#x9;,NVL(TO_CHAR(s.cspu_casemgmt),' ')     case_management&#xA;&#x9;,NVL(TO_CHAR(s.cspu_cltselfass),' ')   client_self_assessment&#xA;&#x9;,NVL(TO_CHAR(s.cspu_crisisinter),' ')  crisis_intervention&#xA;&#x9;,NVL(TO_CHAR(s.cspu_education),' ')    education&#xA;&#x9;,NVL(TO_CHAR(s.cspu_familysess),' ')   family_session&#xA;&#x9;,NVL(TO_CHAR(s.cspu_medadmin),' ')     medication_administration&#xA;&#x9;,NVL(TO_CHAR(s.cspu_medreview),' ')    medication_review&#xA;&#x9;,NVL(TO_CHAR(s.cspu_metabolicass),' ') metabolic_assessment&#xA;&#x9;,NVL(TO_CHAR(s.cspu_shorttermass),' ') short_term_assessment&#xA;&#x9;,TO_CHAR(s.cspu_created_on,'YYYYMMDD') created_on&#xA;&#x9;,TO_CHAR(s.cspu_amended_on,'YYYYMMDD') amended_on&#xA;FROM paris.txtu_mhpncsp s &#xA;INNER JOIN paris.txt_cnote_head h &#xA;ON h.cnh_id = s.cspu_cnh_id &#xA;/* AND h.cnh_team &lt;&gt; 'BCMHA' */  &#xA;INNER JOIN paris.mpi_client c &#xA;ON c.cli_id = h.cnh_cli_id &#xA;AND NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */ &#xA;WHERE s.cspu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLClinicalServiceStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT 
	NVL(TO_CHAR(s.cspu_id),' ')           clinical_services_id
	,NVL(TO_CHAR(s.cspu_cnh_id),' ')       casenote_header_id
	,NVL(TO_CHAR(s.cspu_casemgmt),' ')     case_management
	,NVL(TO_CHAR(s.cspu_cltselfass),' ')   client_self_assessment
	,NVL(TO_CHAR(s.cspu_crisisinter),' ')  crisis_intervention
	,NVL(TO_CHAR(s.cspu_education),' ')    education
	,NVL(TO_CHAR(s.cspu_familysess),' ')   family_session
	,NVL(TO_CHAR(s.cspu_medadmin),' ')     medication_administration
	,NVL(TO_CHAR(s.cspu_medreview),' ')    medication_review
	,NVL(TO_CHAR(s.cspu_metabolicass),' ') metabolic_assessment
	,NVL(TO_CHAR(s.cspu_shorttermass),' ') short_term_assessment
	,TO_CHAR(s.cspu_created_on,'YYYYMMDD') created_on
	,TO_CHAR(s.cspu_amended_on,'YYYYMMDD') amended_on
FROM paris.txtu_mhpncsp s 
INNER JOIN paris.txt_cnote_head h 
ON h.cnh_id = s.cspu_cnh_id 
/* AND h.cnh_team &lt;&gt; 'BCMHA' */  
INNER JOIN paris.mpi_client c 
ON c.cli_id = h.cnh_cli_id 
AND NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */ 
WHERE s.cspu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{81C8C5D8-67B8-4AC5-8579-D6D94EEA0546}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT &#xA;NVL(TO_CHAR(l1.gpi_per_id),' ')    paris_id&#xA;,NVL(TO_CHAR(tg.grnu_cnh_id),' ')  casenote_header_id&#xA;,NVL(TO_CHAR(l1.gpi_assoc_id),' ') referral_id&#xA;,NVL(TO_CHAR(g.gpg_id),' ')        Source_Group_ID&#xA;,NVL(TO_CHAR(tg.grnu_id),' ')      Source_CN_Group_Name_ID&#xA;,NVL(TO_CHAR(tg.grnu_grp_id),' ')  Source_CN_Group_ID&#xA;,NVL(TO_CHAR(gl1.gpl_id),' ')      Source_Group_Link_ID&#xA;,NVL(TO_CHAR(l1.gpi_id),' ')       Source_Group_Member_ID&#xA;,NVL(g.gpg_name,' ')               Group_Name&#xA;,NVL(TO_CHAR(g.gpg_valid_from,'YYYYMMDD'),' ') Group_Start_Date&#xA;,NVL(TO_CHAR(g.gpg_valid_to,'YYYYMMDD'),' ')   Group_End_Date&#xA;,NVL(t.tem_code,' ')  Team_Code&#xA;,NVL(TO_CHAR(g.gpg_type),' ') Group_Type&#xA;,TO_CHAR(LEAST(NVL(tg.grnu_created_on,TO_DATE('2099-12-31','yyyy-mm-dd')),  NVL(g.gpg_created_on,TO_DATE('2099-12-31','yyyy-mm-dd'))&#xA;    ,NVL(gl1.gpl_created_on,TO_DATE('1900-01-01','yyyy-mm-dd')),NVL(l1.gpi_created_on,TO_DATE('1900-01-01','yyyy-mm-dd'))), 'YYYYMMDD') created_on&#xA;,TO_CHAR(GREATEST(NVL(tg.grnu_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd')),NVL(g.gpg_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd'))&#xA;    ,NVL(gl1.gpl_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd')),NVL(l1.gpi_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd'))), 'YYYYMMDD') amended_on&#xA;FROM paris.txtu_grname tg&#xA;INNER JOIN paris.txt_cnote_head h&#xA;ON h.cnh_id = tg.grnu_cnh_id&#xA;INNER JOIN paris.mpi_client c&#xA;ON c.cli_id = h.cnh_cli_id&#xA;INNER JOIN paris.grp_group g&#xA;ON g.gpg_id = tg.grnu_grp_id&#xA;INNER JOIN paris.grp_link gl1&#xA;ON gl1.gpl_gpg_id = g.gpg_id&#xA;AND gl1.gpl_assoc_type = 'REFERRAL'&#xA;INNER JOIN paris.grp_link_mems l1&#xA;ON l1.gpi_gpl_id = gl1.gpl_id&#xA;AND l1.gpi_per_id = c.cli_per_id&#xA;LEFT OUTER JOIN paris.stf_team t&#xA;ON g.gpg_team_key = t.tem_key&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;AND (tg.grnu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] + &quot;','yyyy-mm-dd')&quot; +&#xA; &quot; OR g.gpg_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] + &quot;','yyyy-mm-dd')&quot; +&#xA; &quot; OR gl1.gpl_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] + &quot;','yyyy-mm-dd')&quot; +&#xA; &quot; OR l1.gpi_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] + &quot;','yyyy-mm-dd'))&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCoreGroupInhouseCNStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT 
NVL(TO_CHAR(l1.gpi_per_id),' ')    paris_id
,NVL(TO_CHAR(tg.grnu_cnh_id),' ')  casenote_header_id
,NVL(TO_CHAR(l1.gpi_assoc_id),' ') referral_id
,NVL(TO_CHAR(g.gpg_id),' ')        Source_Group_ID
,NVL(TO_CHAR(tg.grnu_id),' ')      Source_CN_Group_Name_ID
,NVL(TO_CHAR(tg.grnu_grp_id),' ')  Source_CN_Group_ID
,NVL(TO_CHAR(gl1.gpl_id),' ')      Source_Group_Link_ID
,NVL(TO_CHAR(l1.gpi_id),' ')       Source_Group_Member_ID
,NVL(g.gpg_name,' ')               Group_Name
,NVL(TO_CHAR(g.gpg_valid_from,'YYYYMMDD'),' ') Group_Start_Date
,NVL(TO_CHAR(g.gpg_valid_to,'YYYYMMDD'),' ')   Group_End_Date
,NVL(t.tem_code,' ')  Team_Code
,NVL(TO_CHAR(g.gpg_type),' ') Group_Type
,TO_CHAR(LEAST(NVL(tg.grnu_created_on,TO_DATE('2099-12-31','yyyy-mm-dd')),  NVL(g.gpg_created_on,TO_DATE('2099-12-31','yyyy-mm-dd'))
    ,NVL(gl1.gpl_created_on,TO_DATE('1900-01-01','yyyy-mm-dd')),NVL(l1.gpi_created_on,TO_DATE('1900-01-01','yyyy-mm-dd'))), 'YYYYMMDD') created_on
,TO_CHAR(GREATEST(NVL(tg.grnu_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd')),NVL(g.gpg_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd'))
    ,NVL(gl1.gpl_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd')),NVL(l1.gpi_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd'))), 'YYYYMMDD') amended_on
FROM paris.txtu_grname tg
INNER JOIN paris.txt_cnote_head h
ON h.cnh_id = tg.grnu_cnh_id
INNER JOIN paris.mpi_client c
ON c.cli_id = h.cnh_cli_id
INNER JOIN paris.grp_group g
ON g.gpg_id = tg.grnu_grp_id
INNER JOIN paris.grp_link gl1
ON gl1.gpl_gpg_id = g.gpg_id
AND gl1.gpl_assoc_type = 'REFERRAL'
INNER JOIN paris.grp_link_mems l1
ON l1.gpi_gpl_id = gl1.gpl_id
AND l1.gpi_per_id = c.cli_per_id
LEFT OUTER JOIN paris.stf_team t
ON g.gpg_team_key = t.tem_key
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
AND (tg.grnu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') OR g.gpg_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') OR gl1.gpl_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') OR l1.gpi_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd'))</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F67FB433-D0AD-44DE-8C2E-9C9BB473025B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT &#xA;NVL(TO_CHAR(l1.gpi_per_id),' ')    paris_id&#xA;,NVL(TO_CHAR(h.cnh_id),' ')        casenote_header_id&#xA;,NVL(TO_CHAR(l1.gpi_assoc_id),' ') referral_id&#xA;,NVL(TO_CHAR(g.gpg_id),' ')        Source_Group_ID&#xA;,NVL(TO_CHAR(gl1.gpl_id),' ')        Source_Group_Link_ID&#xA;,NVL(TO_CHAR(l1.gpi_id),' ')        Source_Group_Member_ID&#xA;,NVL(g.gpg_name,' ')               Group_Name&#xA;,NVL(TO_CHAR(g.gpg_valid_from,'YYYYMMDD'),' ') Group_Start_Date&#xA;,NVL(TO_CHAR(g.gpg_valid_to,'YYYYMMDD'),' ')   Group_End_Date&#xA;,NVL(t.tem_code,' ')  Team_Code&#xA;,NVL(TO_CHAR(g.gpg_type),' ')  Group_Type&#xA;,TO_CHAR(LEAST( NVL(g.gpg_created_on,TO_DATE('2099-12-31','yyyy-mm-dd'))&#xA;    ,NVL(gl.gpl_created_on,TO_DATE('2099-12-31','yyyy-mm-dd')),NVL(l.gpi_created_on,TO_DATE('2099-12-31','yyyy-mm-dd'))&#xA;    ,NVL(gl1.gpl_created_on,TO_DATE('2099-12-31','yyyy-mm-dd')),NVL(l1.gpi_created_on,TO_DATE('2099-12-31','yyyy-mm-dd'))), 'YYYYMMDD') created_on&#xA;,TO_CHAR(GREATEST(NVL(g.gpg_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd'))&#xA;    ,NVL(gl.gpl_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd')),NVL(l.gpi_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd'))&#xA;    ,NVL(gl1.gpl_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd')),NVL(l1.gpi_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd'))), 'YYYYMMDD') amended_on&#xA;FROM paris.txt_cnote_head h&#xA;INNER JOIN paris.mpi_client c&#xA;ON c.cli_id = h.cnh_cli_id&#xA;INNER JOIN paris.grp_link_mems l&#xA;ON l.gpi_assoc_id = h.cnh_id&#xA;INNER JOIN paris.grp_link gl&#xA;ON gl.gpl_id = l.gpi_gpl_id&#xA;AND gl.gpl_assoc_type = 'CASENOTE'&#xA;INNER JOIN paris.grp_group g&#xA;ON g.gpg_id = gl.gpl_gpg_id&#xA;INNER JOIN paris.grp_link gl1&#xA;ON gl1.gpl_gpg_id = g.gpg_id&#xA;AND gl1.gpl_assoc_type = 'REFERRAL'&#xA;INNER JOIN paris.grp_link_mems l1&#xA;ON l1.gpi_gpl_id = gl1.gpl_id&#xA;AND l1.gpi_per_id = c.cli_per_id&#xA;LEFT OUTER JOIN paris.stf_team t&#xA;ON g.gpg_team_key = t.tem_key&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA;AND (g.gpg_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] + &quot;','yyyy-mm-dd')&quot; +&#xA; &quot; OR gl.gpl_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] + &quot;','yyyy-mm-dd')&quot; +&#xA; &quot; OR l.gpi_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] + &quot;','yyyy-mm-dd')&quot; +&#xA; &quot; OR gl1.gpl_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] + &quot;','yyyy-mm-dd') &quot; +&#xA; &quot; OR l1.gpi_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] + &quot;','yyyy-mm-dd'))&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCoreGroupStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT 
NVL(TO_CHAR(l1.gpi_per_id),' ')    paris_id
,NVL(TO_CHAR(h.cnh_id),' ')        casenote_header_id
,NVL(TO_CHAR(l1.gpi_assoc_id),' ') referral_id
,NVL(TO_CHAR(g.gpg_id),' ')        Source_Group_ID
,NVL(TO_CHAR(gl1.gpl_id),' ')        Source_Group_Link_ID
,NVL(TO_CHAR(l1.gpi_id),' ')        Source_Group_Member_ID
,NVL(g.gpg_name,' ')               Group_Name
,NVL(TO_CHAR(g.gpg_valid_from,'YYYYMMDD'),' ') Group_Start_Date
,NVL(TO_CHAR(g.gpg_valid_to,'YYYYMMDD'),' ')   Group_End_Date
,NVL(t.tem_code,' ')  Team_Code
,NVL(TO_CHAR(g.gpg_type),' ')  Group_Type
,TO_CHAR(LEAST( NVL(g.gpg_created_on,TO_DATE('2099-12-31','yyyy-mm-dd'))
    ,NVL(gl.gpl_created_on,TO_DATE('2099-12-31','yyyy-mm-dd')),NVL(l.gpi_created_on,TO_DATE('2099-12-31','yyyy-mm-dd'))
    ,NVL(gl1.gpl_created_on,TO_DATE('2099-12-31','yyyy-mm-dd')),NVL(l1.gpi_created_on,TO_DATE('2099-12-31','yyyy-mm-dd'))), 'YYYYMMDD') created_on
,TO_CHAR(GREATEST(NVL(g.gpg_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd'))
    ,NVL(gl.gpl_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd')),NVL(l.gpi_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd'))
    ,NVL(gl1.gpl_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd')),NVL(l1.gpi_amended_on,TO_DATE('1900-01-01','yyyy-mm-dd'))), 'YYYYMMDD') amended_on
FROM paris.txt_cnote_head h
INNER JOIN paris.mpi_client c
ON c.cli_id = h.cnh_cli_id
INNER JOIN paris.grp_link_mems l
ON l.gpi_assoc_id = h.cnh_id
INNER JOIN paris.grp_link gl
ON gl.gpl_id = l.gpi_gpl_id
AND gl.gpl_assoc_type = 'CASENOTE'
INNER JOIN paris.grp_group g
ON g.gpg_id = gl.gpl_gpg_id
INNER JOIN paris.grp_link gl1
ON gl1.gpl_gpg_id = g.gpg_id
AND gl1.gpl_assoc_type = 'REFERRAL'
INNER JOIN paris.grp_link_mems l1
ON l1.gpi_gpl_id = gl1.gpl_id
AND l1.gpi_per_id = c.cli_per_id
LEFT OUTER JOIN paris.stf_team t
ON g.gpg_team_key = t.tem_key
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
AND (g.gpg_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') OR gl.gpl_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') OR l.gpi_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') OR gl1.gpl_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')  OR l1.gpi_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd'))</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B724CA4B-1686-408A-9DF1-61EDED972B45}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT &#xA;&#x9;NVL(TO_CHAR(c.ncju_id),' ') criminal_justice_id&#xA;&#x9;,NVL(TO_CHAR(c.ncju_per_id),' ') paris_id&#xA;&#x9;,NVL(TO_CHAR(c.ncju_daterec,'YYYYMMDD'),' ') date_recorded&#xA;&#x9;,NVL(c.ncju_udfteam,' ') team_code&#xA;&#x9;,CASE&#xA;&#x9;   WHEN c.ncju_nocjinvol = 'Y' THEN '00' /* No criminal justice involvement */&#xA;&#x9;   WHEN c.ncju_arrestnocust = 'Y' THEN '01' /* Has been arrested, not in custody while awaiting trial */&#xA;&#x9;   WHEN c.ncju_arrestincust = 'Y' THEN '02' /* Has been arrested, in custody while awaiting trail */&#xA;&#x9;   WHEN c.ncju_convicincust = 'Y' THEN '03' /* Convicted and currently in custody (incarcerated/confined) */&#xA;&#x9;   WHEN c.ncju_convicnocust = 'Y' THEN '04' /* Convicted, not in custody and serving community order (for example, probation, parole) */&#xA;&#x9;   WHEN c.ncju_othercjs = 'Y' THEN '97' /* Other */&#xA;&#x9;   WHEN c.ncju_unknowncjs = 'Y' THEN '98' /* Unknown/not asked */&#xA;&#x9;   ELSE ' ' END criminal_justice_involvement&#xA;&#x9;,CASE&#xA;&#x9;   WHEN c.ncju_crimesperson = 'Y' THEN '01'  /* Crimes against person */&#xA;&#x9;   WHEN c.ncju_crimespropty = 'Y' THEN '02'  /* Crimes against property */&#xA;&#x9;   WHEN c.ncju_crimesperprt = 'Y' THEN '03'  /* Crimes against person and property */&#xA;&#x9;   WHEN c.ncju_othercc = 'Y' THEN '97'  /* Other */&#xA;&#x9;   WHEN c.ncju_unknowncc = 'Y' THEN '98'  /* Unknown/not asked */&#xA;&#x9;   ELSE ' ' END nature_criminal_justice&#xA;&#x9;,NVL(c.ncju_form_type,' ') form_type&#xA;&#x9;,NVL(TO_CHAR(c.ncju_form_id),' ') form_id&#xA;&#x9;,DECODE(c.ncju_eie, 1, 'Y', ' ') void_flag&#xA;    ,TO_CHAR(c.ncju_created_on,'YYYYMMDD') created_on&#xA;    ,TO_CHAR(c.ncju_amended_on,'YYYYMMDD') amended_on&#xA;FROM paris.mpiu_mhamrrncj c&#xA;WHERE NVL(c.ncju_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */&#xA; AND c.ncju_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCriminalJusticeStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT 
	NVL(TO_CHAR(c.ncju_id),' ') criminal_justice_id
	,NVL(TO_CHAR(c.ncju_per_id),' ') paris_id
	,NVL(TO_CHAR(c.ncju_daterec,'YYYYMMDD'),' ') date_recorded
	,NVL(c.ncju_udfteam,' ') team_code
	,CASE
	   WHEN c.ncju_nocjinvol = 'Y' THEN '00' /* No criminal justice involvement */
	   WHEN c.ncju_arrestnocust = 'Y' THEN '01' /* Has been arrested, not in custody while awaiting trial */
	   WHEN c.ncju_arrestincust = 'Y' THEN '02' /* Has been arrested, in custody while awaiting trail */
	   WHEN c.ncju_convicincust = 'Y' THEN '03' /* Convicted and currently in custody (incarcerated/confined) */
	   WHEN c.ncju_convicnocust = 'Y' THEN '04' /* Convicted, not in custody and serving community order (for example, probation, parole) */
	   WHEN c.ncju_othercjs = 'Y' THEN '97' /* Other */
	   WHEN c.ncju_unknowncjs = 'Y' THEN '98' /* Unknown/not asked */
	   ELSE ' ' END criminal_justice_involvement
	,CASE
	   WHEN c.ncju_crimesperson = 'Y' THEN '01'  /* Crimes against person */
	   WHEN c.ncju_crimespropty = 'Y' THEN '02'  /* Crimes against property */
	   WHEN c.ncju_crimesperprt = 'Y' THEN '03'  /* Crimes against person and property */
	   WHEN c.ncju_othercc = 'Y' THEN '97'  /* Other */
	   WHEN c.ncju_unknowncc = 'Y' THEN '98'  /* Unknown/not asked */
	   ELSE ' ' END nature_criminal_justice
	,NVL(c.ncju_form_type,' ') form_type
	,NVL(TO_CHAR(c.ncju_form_id),' ') form_id
	,DECODE(c.ncju_eie, 1, 'Y', ' ') void_flag
    ,TO_CHAR(c.ncju_created_on,'YYYYMMDD') created_on
    ,TO_CHAR(c.ncju_amended_on,'YYYYMMDD') amended_on
FROM paris.mpiu_mhamrrncj c
WHERE NVL(c.ncju_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */
 AND c.ncju_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{41A0C16D-7267-476E-8B6A-62061959CC77}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA; NVL(TO_CHAR(l.telu_id),' ')       current_location_id&#xA;&#x9;,NVL(TO_CHAR(l.telu_per_id),' ')   paris_id&#xA;&#x9;,NVL(l.telu_udfteam,' ')  team_code&#xA;&#x9;,NVL(l.telu_loctype,' ')  location_type&#xA;&#x9;,NVL(l.telu_strfield,' ') location&#xA;&#x9;,NVL(TO_CHAR(l.telu_frdate,'YYYYMMDD'),' ')   valid_from&#xA;&#x9;,NVL(TO_CHAR(l.telu_todate,'YYYYMMDD'),' ')   valid_to&#xA;&#x9;,NVL(l.telu_cha,' ')      cha&#xA;&#x9;,NVL(l.telu_org_code,' ') organization_code&#xA;&#x9;,NVL(l.telu_del_hosp,' ') hospital_code&#xA;&#x9;,NVL(l.telu_address,' ')  address&#xA;&#x9;,NVL(l.telu_province,' ') province&#xA;&#x9;,NVL(l.telu_country,' ')  country&#xA;&#x9;,NVL(l.telu_poscod,' ')   postal_code&#xA;&#x9;,NVL(l.telu_hsda,' ')     hsda&#xA;&#x9;,NVL(l.telu_yesonly,' ')  void_flag&#xA;    ,TO_CHAR(l.telu_created_on,'YYYYMMDD') created_on&#xA;    ,TO_CHAR(l.telu_amended_on,'YYYYMMDD') amended_on&#xA; FROM paris.mpiu_accurloc l&#xA;WHERE NVL(l.telu_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA; AND l.telu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLCurrentLocationStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
 NVL(TO_CHAR(l.telu_id),' ')       current_location_id
	,NVL(TO_CHAR(l.telu_per_id),' ')   paris_id
	,NVL(l.telu_udfteam,' ')  team_code
	,NVL(l.telu_loctype,' ')  location_type
	,NVL(l.telu_strfield,' ') location
	,NVL(TO_CHAR(l.telu_frdate,'YYYYMMDD'),' ')   valid_from
	,NVL(TO_CHAR(l.telu_todate,'YYYYMMDD'),' ')   valid_to
	,NVL(l.telu_cha,' ')      cha
	,NVL(l.telu_org_code,' ') organization_code
	,NVL(l.telu_del_hosp,' ') hospital_code
	,NVL(l.telu_address,' ')  address
	,NVL(l.telu_province,' ') province
	,NVL(l.telu_country,' ')  country
	,NVL(l.telu_poscod,' ')   postal_code
	,NVL(l.telu_hsda,' ')     hsda
	,NVL(l.telu_yesonly,' ')  void_flag
    ,TO_CHAR(l.telu_created_on,'YYYYMMDD') created_on
    ,TO_CHAR(l.telu_amended_on,'YYYYMMDD') amended_on
 FROM paris.mpiu_accurloc l
WHERE NVL(l.telu_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
 AND l.telu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7AF85295-6FEB-4357-994B-DACCDE0D1E58}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT &#xA;    NVL(TO_CHAR(d.dth_id),' ')            death_id&#xA;    ,NVL(TO_CHAR(d.dth_per_id),' ')        paris_id&#xA;    ,NVL(d.dth_place,' ')         death_place&#xA;    ,NVL(TO_CHAR(d.dth_date,'YYYYMMDD'),' ')          death_date&#xA;    ,NVL(TO_CHAR(d.dth_time, 'FM09.90') ,' ')         death_time&#xA;    ,NVL(TO_CHAR(d.dth_confirm) ,' ')      death_confirm&#xA;    ,NVL(TO_CHAR(d.dth_confirm_date,'YYYYMMDD'),' ')  death_confirmed_date&#xA;    ,NVL(TO_CHAR(d.dth_confirm_time, 'FM09.90'),' ')  death_confirmed_time&#xA;    ,NVL(d.dth_notify_method,' ') death_notify_method&#xA;    ,' '                void_flag&#xA;    ,TO_CHAR(d.dth_created_on, 'YYYYMMDD')     created_on&#xA;    ,TO_CHAR(d.dth_amended_on, 'YYYYMMDD')     amended_on&#xA; FROM paris.dis_death d &#xA;WHERE NVL(d.dth_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  &#xA; AND d.dth_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd') &quot; + &#xA;&quot; union all&#xA;SELECT &#xA;    NVL(TO_CHAR(d.dth_id),' ')            death_id&#xA;    ,NVL(TO_CHAR(d.dth_per_id),' ')        paris_id&#xA;    ,NVL(d.dth_place,' ')         death_place&#xA;    ,NVL(TO_CHAR(d.dth_date,'YYYYMMDD'),' ')          death_date&#xA;    ,NVL(TO_CHAR(d.dth_time, 'FM09.90') ,' ')         death_time&#xA;    ,NVL(TO_CHAR(d.dth_confirm) ,' ')      death_confirm&#xA;    ,NVL(TO_CHAR(d.dth_confirm_date,'YYYYMMDD'),' ')  death_confirmed_date&#xA;    ,NVL(TO_CHAR(d.dth_confirm_time, 'FM09.90'),' ')  death_confirmed_time&#xA;    ,NVL(d.dth_notify_method,' ') death_notify_method&#xA;    ,'Y'                void_flag&#xA;    ,TO_CHAR(d.dth_created_on, 'YYYYMMDD')     created_on&#xA;    ,TO_CHAR(d.dth_amended_on, 'YYYYMMDD')     amended_on&#xA;FROM paris.van_aud_dis_death d &#xA;WHERE NVL(d.dth_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */ &#xA; AND d.dth_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot; +&#xA;&quot;/* skip delete audit record if still exists in death table */&#xA;AND NOT EXISTS (SELECT 1 from paris.dis_death d2 WHERE d2.dth_per_id = d.dth_per_id)&quot; + &quot; AND d.dth_audit_type='D'&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLDeathStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT 
    NVL(TO_CHAR(d.dth_id),' ')            death_id
    ,NVL(TO_CHAR(d.dth_per_id),' ')        paris_id
    ,NVL(d.dth_place,' ')         death_place
    ,NVL(TO_CHAR(d.dth_date,'YYYYMMDD'),' ')          death_date
    ,NVL(TO_CHAR(d.dth_time, 'FM09.90') ,' ')         death_time
    ,NVL(TO_CHAR(d.dth_confirm) ,' ')      death_confirm
    ,NVL(TO_CHAR(d.dth_confirm_date,'YYYYMMDD'),' ')  death_confirmed_date
    ,NVL(TO_CHAR(d.dth_confirm_time, 'FM09.90'),' ')  death_confirmed_time
    ,NVL(d.dth_notify_method,' ') death_notify_method
    ,' '                void_flag
    ,TO_CHAR(d.dth_created_on, 'YYYYMMDD')     created_on
    ,TO_CHAR(d.dth_amended_on, 'YYYYMMDD')     amended_on
 FROM paris.dis_death d 
WHERE NVL(d.dth_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */  
 AND d.dth_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')  union all
SELECT 
    NVL(TO_CHAR(d.dth_id),' ')            death_id
    ,NVL(TO_CHAR(d.dth_per_id),' ')        paris_id
    ,NVL(d.dth_place,' ')         death_place
    ,NVL(TO_CHAR(d.dth_date,'YYYYMMDD'),' ')          death_date
    ,NVL(TO_CHAR(d.dth_time, 'FM09.90') ,' ')         death_time
    ,NVL(TO_CHAR(d.dth_confirm) ,' ')      death_confirm
    ,NVL(TO_CHAR(d.dth_confirm_date,'YYYYMMDD'),' ')  death_confirmed_date
    ,NVL(TO_CHAR(d.dth_confirm_time, 'FM09.90'),' ')  death_confirmed_time
    ,NVL(d.dth_notify_method,' ') death_notify_method
    ,'Y'                void_flag
    ,TO_CHAR(d.dth_created_on, 'YYYYMMDD')     created_on
    ,TO_CHAR(d.dth_amended_on, 'YYYYMMDD')     amended_on
FROM paris.van_aud_dis_death d 
WHERE NVL(d.dth_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */ 
 AND d.dth_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')/* skip delete audit record if still exists in death table */
AND NOT EXISTS (SELECT 1 from paris.dis_death d2 WHERE d2.dth_per_id = d.dth_per_id) AND d.dth_audit_type='D'</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5433C80A-F5D3-4E0F-8E34-699FA118E355}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT &#xA;    NVL(TO_CHAR(c.hlc_id),' ') diagnosis_id&#xA;    ,NVL(TO_CHAR(c.hlc_assoc_id),' ') form_id &#xA;    ,NVL(TO_CHAR(c.hlc_per_id),' ') paris_id&#xA;    ,NVL(t.tem_code,' ') tem_code&#xA;    ,NVL(TO_CHAR(c.hlc_diagnosed_on, 'YYYYMMDD'),' ') diagnosis_date&#xA;    ,NVL(c.hlc_diag_type,' ') diagnosis_type&#xA;    ,NVL(c.hlc_condition,' ') diagnosis&#xA;    ,NVL(c.hlc_state,' ') diagnosis_state&#xA;    ,NVL(TO_CHAR(c.hlc_signif),' ') coding_significance&#xA;    ,NVL(TO_CHAR(c.hlc_per_aware),' ') person_aware&#xA;    ,NVL(c.hlc_assoc_type,' ') form_type&#xA;    ,TO_CHAR(c.hlc_created_on, 'YYYYMMDD')     created_on&#xA;    ,TO_CHAR(c.hlc_amended_on, 'YYYYMMDD')     amended_on&#xA; FROM paris.hlt_condition c &#xA;INNER JOIN paris.stf_team t &#xA;ON t.tem_key = c.hlc_owner_tem_id &#xA;WHERE c.hlc_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd') &#xA; AND NVL(c.hlc_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */&#xA;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLDiagnosisStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT 
    NVL(TO_CHAR(c.hlc_id),' ') diagnosis_id
    ,NVL(TO_CHAR(c.hlc_assoc_id),' ') form_id 
    ,NVL(TO_CHAR(c.hlc_per_id),' ') paris_id
    ,NVL(t.tem_code,' ') tem_code
    ,NVL(TO_CHAR(c.hlc_diagnosed_on, 'YYYYMMDD'),' ') diagnosis_date
    ,NVL(c.hlc_diag_type,' ') diagnosis_type
    ,NVL(c.hlc_condition,' ') diagnosis
    ,NVL(c.hlc_state,' ') diagnosis_state
    ,NVL(TO_CHAR(c.hlc_signif),' ') coding_significance
    ,NVL(TO_CHAR(c.hlc_per_aware),' ') person_aware
    ,NVL(c.hlc_assoc_type,' ') form_type
    ,TO_CHAR(c.hlc_created_on, 'YYYYMMDD')     created_on
    ,TO_CHAR(c.hlc_amended_on, 'YYYYMMDD')     amended_on
 FROM paris.hlt_condition c 
INNER JOIN paris.stf_team t 
ON t.tem_key = c.hlc_owner_tem_id 
WHERE c.hlc_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd') 
 AND NVL(c.hlc_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */
</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{28C6BEE5-A26D-485E-B557-FAF29633C033}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT &#xA;NVL(TO_CHAR(dis_id),' ') discharge_id&#xA;,NVL(TO_CHAR(dis_ref_id),' ') referral_id&#xA;,NVL(TO_CHAR(d.dis_discharged_on, 'YYYYMMDD'),' ') discharge_date &#xA;,NVL(d.dis_reason,' ') discharge_reason&#xA;,NVL(d.dis_destination ,' ')discharge_destination&#xA;,NVL(d.dis_outcome,' ') discharge_outcome&#xA;,TO_CHAR(d.dis_created_on, 'YYYYMMDD') created_on&#xA;,TO_CHAR(d.dis_amended_on, 'YYYYMMDD')  amended_on&#xA;FROM paris.dis_discharge d &#xA;INNER JOIN paris.ref_referral r &#xA;ON r.ref_id = d.dis_ref_id &#xA;INNER JOIN paris.stf_team t &#xA;ON t.tem_key = r.ref_referred_to /* &#xA;AND t.tem_code &lt;&gt; 'BCMHA' */ &#xA;INNER JOIN paris.mpi_client c &#xA;ON c.cli_id = r.ref_cli_id &#xA;AND NVL(c.cli_per_id,0) NOT IN (148, 84484, 999)  &#xA;WHERE d.dis_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLDischargeStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT 
NVL(TO_CHAR(dis_id),' ') discharge_id
,NVL(TO_CHAR(dis_ref_id),' ') referral_id
,NVL(TO_CHAR(d.dis_discharged_on, 'YYYYMMDD'),' ') discharge_date 
,NVL(d.dis_reason,' ') discharge_reason
,NVL(d.dis_destination ,' ')discharge_destination
,NVL(d.dis_outcome,' ') discharge_outcome
,TO_CHAR(d.dis_created_on, 'YYYYMMDD') created_on
,TO_CHAR(d.dis_amended_on, 'YYYYMMDD')  amended_on
FROM paris.dis_discharge d 
INNER JOIN paris.ref_referral r 
ON r.ref_id = d.dis_ref_id 
INNER JOIN paris.stf_team t 
ON t.tem_key = r.ref_referred_to /* 
AND t.tem_code &lt;&gt; 'BCMHA' */ 
INNER JOIN paris.mpi_client c 
ON c.cli_id = r.ref_cli_id 
AND NVL(c.cli_per_id,0) NOT IN (148, 84484, 999)  
WHERE d.dis_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{554166C7-16C8-4AD4-815C-A6A7CE448FC6}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT &#xA;&#x9;NVL(TO_CHAR(e.emp_id),' ') employment_id&#xA;&#x9;,NVL(TO_CHAR(e.emp_per_id),' ') paris_id&#xA;&#x9;,NVL(e.emp_status,' ') employment_status&#xA;&#x9;,NVL(TO_CHAR(e.emp_from,'YYYYMMDD'),' ') date_from&#xA;&#x9;,NVL(TO_CHAR(e.emp_to,'YYYYMMDD'),' ') date_to&#xA;&#x9;,NVL(e.emp_full_part_time,' ') full_part_time&#xA;&#x9;,NVL(TO_CHAR(e.emp_hours_per_week),' ') hours_per_week&#xA;&#x9;,NVL(e.emp_leaving_reason,' ') leaving_reason&#xA;    ,TO_CHAR(e.emp_created_on,'YYYYMMDD') created_on&#xA;    ,TO_CHAR(e.emp_amended_on,'YYYYMMDD') amended_on&#xA;FROM paris.mpi_employment e&#xA;WHERE NVL(e.emp_per_id,0) NOT IN (148, 84484, 999)  /* PARIS test clients */&#xA;AND e.emp_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLEmploymentStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT 
	NVL(TO_CHAR(e.emp_id),' ') employment_id
	,NVL(TO_CHAR(e.emp_per_id),' ') paris_id
	,NVL(e.emp_status,' ') employment_status
	,NVL(TO_CHAR(e.emp_from,'YYYYMMDD'),' ') date_from
	,NVL(TO_CHAR(e.emp_to,'YYYYMMDD'),' ') date_to
	,NVL(e.emp_full_part_time,' ') full_part_time
	,NVL(TO_CHAR(e.emp_hours_per_week),' ') hours_per_week
	,NVL(e.emp_leaving_reason,' ') leaving_reason
    ,TO_CHAR(e.emp_created_on,'YYYYMMDD') created_on
    ,TO_CHAR(e.emp_amended_on,'YYYYMMDD') amended_on
FROM paris.mpi_employment e
WHERE NVL(e.emp_per_id,0) NOT IN (148, 84484, 999)  /* PARIS test clients */
AND e.emp_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B0B6EFE4-D87E-4DEF-BE23-BD20869DF552}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;SELECT&#xA;  NVL(TO_CHAR(a.ass_id),' ') SourceAssessmentIDStr  &#xA;, NVL(TO_CHAR(i.edpu_id),' ') SourceEPDSIDStr  &#xA;, NVL(i.edpu_TIME_PERIOD,' ') Time_Period&#xA;, NVL(i.edpu_edpsreas_fl,' ') Reason_For_EDPS&#xA;, NVL(i.edpu_epds1_fl,' ') Able_To_Laugh&#xA;, NVL(i.edpu_epds2_fl,' ') Look_Forward_With_Enjoyment&#xA;, NVL(i.edpu_epds3_fl,' ') Blame_Myself_Unnecessarily&#xA;, NVL(i.edpu_epds4_fl,' ') Anxious_No_Good_Reason&#xA;, NVL(i.edpu_epds5_fl,' ') Scared_No_Good_Reason &#xA;, NVL(i.edpu_epds6_fl,' ') Things_On_Top_of_Me&#xA;, NVL(i.edpu_epds7_fl,' ') Difficulty_Sleeping&#xA;, NVL(i.edpu_epds8_fl,' ') Sad_or_Miserable&#xA;, NVL(i.edpu_epds9_fl,' ') Unhappy_Been_Crying&#xA;, NVL(i.edpu_epds10_fl,' ') Thought_of_Harming_Myself&#xA;, NVL(TO_CHAR(i.edpu_epds_score),' ') epds_score&#xA;, TO_CHAR(i.edpu_created_on, 'YYYYMMDD') created_on &#xA;, NVL(TO_CHAR(i.edpu_created_by),' ')  created_By_Staff_ID&#xA;, TO_CHAR(i.edpu_amended_on, 'YYYYMMDD') amended_on &#xA;, NVL(TO_CHAR(i.edpu_amended_by),' ')  amended_By_Staff_ID&#xA;FROM PARIS.assu_icepdsV2 i &#xA;JOIN paris.ass_assessment a&#xA;ON i.edpu_ass_id = a.ass_id&#xA;JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id&#xA;WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */&#xA;AND i.edpu_amended_on &gt;= TO_DATE('&quot; + (DT_WSTR, 30) @[User::ExtractStartDateString] +&#xA;&quot;','yyyy-mm-dd')&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SQLEPDSAssessmentStr">
      <DTS:VariableValue
        DTS:DataType="8">SELECT
  NVL(TO_CHAR(a.ass_id),' ') SourceAssessmentIDStr  
, NVL(TO_CHAR(i.edpu_id),' ') SourceEPDSIDStr  
, NVL(i.edpu_TIME_PERIOD,' ') Time_Period
, NVL(i.edpu_edpsreas_fl,' ') Reason_For_EDPS
, NVL(i.edpu_epds1_fl,' ') Able_To_Laugh
, NVL(i.edpu_epds2_fl,' ') Look_Forward_With_Enjoyment
, NVL(i.edpu_epds3_fl,' ') Blame_Myself_Unnecessarily
, NVL(i.edpu_epds4_fl,' ') Anxious_No_Good_Reason
, NVL(i.edpu_epds5_fl,' ') Scared_No_Good_Reason 
, NVL(i.edpu_epds6_fl,' ') Things_On_Top_of_Me
, NVL(i.edpu_epds7_fl,' ') Difficulty_Sleeping
, NVL(i.edpu_epds8_fl,' ') Sad_or_Miserable
, NVL(i.edpu_epds9_fl,' ') Unhappy_Been_Crying
, NVL(i.edpu_epds10_fl,' ') Thought_of_Harming_Myself
, NVL(TO_CHAR(i.edpu_epds_score),' ') epds_score
, TO_CHAR(i.edpu_created_on, 'YYYYMMDD') created_on 
, NVL(TO_CHAR(i.edpu_created_by),' ')  created_By_Staff_ID
, TO_CHAR(i.edpu_amended_on, 'YYYYMMDD') amended_on 
, NVL(TO_CHAR(i.edpu_amended_by),' ')  amended_By_Staff_ID
FROM PARIS.assu_icepdsV2 i 
JOIN paris.ass_assessment a
ON i.edpu_ass_id = a.ass_id
JOIN paris.mpi_client c ON a.ass_cli_id = c.cli_id
WHERE NVL(c.cli_per_id,0) NOT IN (148, 84484, 999) /* PARIS test clients */
AND i.edpu_amended_on &gt;= TO_DATE('2015-06-01','yyyy-mm-dd')</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">3,7,OnError,22,OnVariableValueChanged,10,Diagnostic</DTS:Property>
    <DTS:Property
      DTS:EventName="Diagnostic"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnExecStatusChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostPrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePrePrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelineRowsSent"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnProgress"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnQueryCancel"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnVariableValueChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{8B9A57E8-8416-4CF8-A90D-1AD86761DE2E}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Process ACISMedication"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{58FC161A-274E-47CE-93D5-9D8027D58B9F}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="1033"
          DTS:ObjectName="Process ACISMedication">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Process ACISMedication\Get IsActive and LastExtractDate"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{0C4A443D-E68E-4C2A-808B-66C117A1086E}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get IsActive and LastExtractDate"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{420F3266-9DA0-4FA8-AAD0-901BE50B5696}"
                  SQLTask:SqlStatementSource="SELECT IsActive, LastExtractDate&#xA;FROM PARIS.ExtractControl&#xA;WHERE PARISTableName = 'ACISMedication'"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="IsActive"
                    SQLTask:DtsVariableName="User::IsActive" />
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="LastExtractDate"
                    SQLTask:DtsVariableName="User::ExtractStartDateString" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active"
              DTS:AssignExpression="@IsActive =  0"
              DTS:CreationName="STOCK:FORLOOP"
              DTS:Description="For Loop Container"
              DTS:DTSID="{5C4294E9-40F6-476D-984F-C81E2BD1AC54}"
              DTS:EvalExpression="@IsActive == 1"
              DTS:ExecutableType="STOCK:FORLOOP"
              DTS:InitExpression="@IsActive =  0"
              DTS:LocaleID="-1"
              DTS:MaxConcurrent="1"
              DTS:ObjectName="Load ACISMedication if active">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="InitExpression">"@IsActive =  " +(DT_WSTR, 15) @[User::IsActive]</DTS:PropertyExpression>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication"
                  DTS:CreationName="Microsoft.Pipeline"
                  DTS:Description="Data Flow Task"
                  DTS:DTSID="{570FFD52-BECB-42B9-B4FD-481470500A36}"
                  DTS:ExecutableType="Microsoft.Pipeline"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Get ACISMedication"
                  DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <pipeline
                      version="1">
                      <components>
                        <component
                          refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Derived Column"
                          componentClassID="Microsoft.DerivedColumn"
                          contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                          localeId="1033"
                          name="Derived Column"
                          usesDispositions="true">
                          <inputs>
                            <input
                              refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Derived Column.Inputs[Derived Column Input]"
                              description="Input to the Derived Column Transformation"
                              name="Derived Column Input">
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Derived Column.Outputs[Derived Column Output]"
                              description="Default Output of the Derived Column Transformation"
                              exclusionGroup="1"
                              name="Derived Column Output"
                              synchronousInputId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Derived Column.Inputs[Derived Column Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Derived Column.Outputs[Derived Column Output].Columns[ExtractDate]"
                                  dataType="date"
                                  errorOrTruncationOperation="Computation"
                                  errorRowDisposition="FailComponent"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Derived Column.Outputs[Derived Column Output].Columns[ExtractDate]"
                                  name="ExtractDate"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Expression"
                                      name="Expression">@[User::ExtractDate]</property>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Friendly Expression"
                                      expressionType="Notify"
                                      name="FriendlyExpression">@[User::ExtractDate]</property>
                                  </properties>
                                </outputColumn>
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Derived Column.Outputs[Derived Column Error Output]"
                              description="Error Output of the Derived Column Transformation"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="Derived Column Error Output"
                              synchronousInputId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Derived Column.Inputs[Derived Column Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination"
                          componentClassID="Microsoft.OLEDBDestination"
                          contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                          description="OLE DB Destination"
                          localeId="1033"
                          name="OLE DB Destination"
                          usesDispositions="true"
                          version="4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                              name="CommandTimeout">0</property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the database object used to open a rowset."
                              name="OpenRowset">[PARIS].[ACISMedication]</property>
                            <property
                              dataType="System.String"
                              description="Specifies the variable that contains the name of the database object used to open a rowset."
                              name="OpenRowsetVariable"></property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the column code page to use when code page information is unavailable from the data source."
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Boolean"
                              description="Forces the use of the DefaultCodePage property value when describing character data."
                              name="AlwaysUseDefaultCodePage">true</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the mode used to access the database."
                              name="AccessMode"
                              typeConverter="AccessMode">3</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                              name="FastLoadKeepIdentity">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                              name="FastLoadKeepNulls">false</property>
                            <property
                              dataType="System.String"
                              description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                              name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                              name="FastLoadMaxInsertCommitSize">2147483647</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Connections[OleDbConnection]"
                              connectionManagerID="Package.ConnectionManagers[Landing]"
                              connectionManagerRefId="Package.ConnectionManagers[Landing]"
                              description="The OLE DB runtime connection used to access the database."
                              name="OleDbConnection" />
                          </connections>
                          <inputs>
                            <input
                              refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input]"
                              errorOrTruncationOperation="Insert"
                              errorRowDisposition="FailComponent"
                              hasSideEffects="true"
                              name="OLE DB Destination Input">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ExtractDate]"
                                  cachedDataType="date"
                                  cachedName="ExtractDate"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceSystemLastUpdateDate]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Derived Column.Outputs[Derived Column Output].Columns[ExtractDate]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CREATED_ON]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="75"
                                  cachedName="CREATED_ON"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreateDateStr]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[CREATED_ON]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[AMENDED_ON]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="75"
                                  cachedName="AMENDED_ON"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AmendedDateStr]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[AMENDED_ON]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DOSE]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="DOSE"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Dose]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[DOSE]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[VOID_FLAG]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="VOID_FLAG"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[VoidFlag]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[VOID_FLAG]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[UDFTABLE]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="UDFTABLE"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UDFTable]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[UDFTABLE]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SOURCESYSTEMCLIENTIDSTR]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="40"
                                  cachedName="SOURCESYSTEMCLIENTIDSTR"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceSystemClientIDStr]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[SOURCESYSTEMCLIENTIDSTR]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TEAMCODE]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="TEAMCODE"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TeamCode]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[TEAMCODE]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SOURCERECORDIDSTR]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="40"
                                  cachedName="SOURCERECORDIDSTR"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceRecordIDStr]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[SOURCERECORDIDSTR]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FORM_TYPE]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="FORM_TYPE"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceFormType]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[FORM_TYPE]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FORMID]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="40"
                                  cachedName="FORMID"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceFormIDStr]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[FORMID]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PARENT_FORM_TYPE]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="PARENT_FORM_TYPE"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceParentFormType]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[PARENT_FORM_TYPE]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PARENT_FORMID]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="40"
                                  cachedName="PARENT_FORMID"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceParentFormIDStr]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[PARENT_FORMID]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ASSESSED_BY_STAFFCODE]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="ASSESSED_BY_STAFFCODE"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AssessedByStaffCode]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[ASSESSED_BY_STAFFCODE]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ASSESSED_BY_STAFFID]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="40"
                                  cachedName="ASSESSED_BY_STAFFID"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AssessedByStaffIDStr]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[ASSESSED_BY_STAFFID]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ASSESSMENT_DATEIDSTR]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="75"
                                  cachedName="ASSESSMENT_DATEIDSTR"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AssessedDateIDStr]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[ASSESSMENT_DATEIDSTR]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[MEDICATION_CODE]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="MEDICATION_CODE"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MedicationCode]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[MEDICATION_CODE]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DURATION]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="DURATION"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Duration]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[DURATION]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[AMENDED_BY]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="40"
                                  cachedName="AMENDED_BY"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AmendedByStaffIDStr]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[AMENDED_BY]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CREATED_BY]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="40"
                                  cachedName="CREATED_BY"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreateByStaffIDStr]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[CREATED_BY]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[START_DATESTR]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="75"
                                  cachedName="START_DATESTR"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDateIDStr]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[START_DATESTR]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[END_DATESTR]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="75"
                                  cachedName="END_DATESTR"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDateIDStr]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[END_DATESTR]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[START_DATESTR2]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="75"
                                  cachedName="START_DATESTR2"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDateID2Str]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[START_DATESTR2]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[END_DATESTR2]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="75"
                                  cachedName="END_DATESTR2"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDateID2Str]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[END_DATESTR2]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PRN]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="PRN"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PRNFlag]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[PRN]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[MADR]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="MADR"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MADRFlag]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[MADR]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[MEDICATION_IN_HOME]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="MEDICATION_IN_HOME"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MedicationInHomeFlag]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[MEDICATION_IN_HOME]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[AMENDED_STAFF_CODE]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="AMENDED_STAFF_CODE"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AmendedStaffCode]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[AMENDED_STAFF_CODE]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CREATED_STAFF_CODE]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="CREATED_STAFF_CODE"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreateStaffCode]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[CREATED_STAFF_CODE]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DRUG_ROUTE]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="DRUG_ROUTE"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RouteCode]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[DRUG_ROUTE]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FREQUENCY]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="FREQUENCY"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FrequencyCode]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[FREQUENCY]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BIRTH_CONTROL_MEDICATION]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="BIRTH_CONTROL_MEDICATION"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BirthControlMedicationCode]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[BIRTH_CONTROL_MEDICATION]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[MEDICATION_TYPE]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="MEDICATION_TYPE"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MedicationTypeCode]"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[MEDICATION_TYPE]" />
                              </inputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceSystemLastUpdateDate]"
                                  dataType="dbTimeStamp"
                                  name="SourceSystemLastUpdateDate" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreateDateStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="CreateDateStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AmendedDateStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="AmendedDateStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreateDate]"
                                  dataType="dbTimeStamp"
                                  name="CreateDate" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AmendedDate]"
                                  dataType="dbTimeStamp"
                                  name="AmendedDate" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreateByStaffIDStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="CreateByStaffIDStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceAssessmentID]"
                                  dataType="i4"
                                  name="SourceAssessmentID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreateByStaffID]"
                                  dataType="i4"
                                  name="CreateByStaffID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AmendedByStaffIDStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="AmendedByStaffIDStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AmendedByStaffID]"
                                  dataType="i4"
                                  name="AmendedByStaffID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[VoidFlag]"
                                  codePage="1252"
                                  dataType="str"
                                  length="1"
                                  name="VoidFlag" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IsVoid]"
                                  dataType="bool"
                                  name="IsVoid" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Dose]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="Dose" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDateIDStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="StartDateIDStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDateIDStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="EndDateIDStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreateStaffCode]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="CreateStaffCode" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AmendedStaffCode]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="AmendedStaffCode" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDateID]"
                                  dataType="i4"
                                  name="StartDateID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDateID]"
                                  dataType="i4"
                                  name="EndDateID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UDFTable]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="UDFTable" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceSystemClientIDStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="SourceSystemClientIDStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TeamCode]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="TeamCode" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceRecordIDStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="SourceRecordIDStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceFormType]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="SourceFormType" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceFormIDStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="SourceFormIDStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceParentFormType]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="SourceParentFormType" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceParentFormIDStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="SourceParentFormIDStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AssessedByStaffCode]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="AssessedByStaffCode" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AssessedByStaffIDStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="AssessedByStaffIDStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AssessedDateIDStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="AssessedDateIDStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MedicationCode]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="MedicationCode" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Duration]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="Duration" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDateID2Str]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="StartDateID2Str" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDateID2Str]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="EndDateID2Str" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PRNFlag]"
                                  codePage="1252"
                                  dataType="str"
                                  length="1"
                                  name="PRNFlag" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MADRFlag]"
                                  codePage="1252"
                                  dataType="str"
                                  length="1"
                                  name="MADRFlag" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MedicationInHomeFlag]"
                                  codePage="1252"
                                  dataType="str"
                                  length="1"
                                  name="MedicationInHomeFlag" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceSystemClientID]"
                                  dataType="i4"
                                  name="SourceSystemClientID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceCaseNoteID]"
                                  dataType="i4"
                                  name="SourceCaseNoteID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceRecordID]"
                                  dataType="i4"
                                  name="SourceRecordID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceFormID]"
                                  dataType="i4"
                                  name="SourceFormID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceParentFormID]"
                                  dataType="i4"
                                  name="SourceParentFormID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AssessedDateID]"
                                  dataType="i4"
                                  name="AssessedDateID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDate2ID]"
                                  dataType="i4"
                                  name="StartDate2ID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDate2ID]"
                                  dataType="i4"
                                  name="EndDate2ID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IsPRN]"
                                  dataType="bool"
                                  name="IsPRN" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IsMADR]"
                                  dataType="bool"
                                  name="IsMADR" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IsMedicationInHome]"
                                  dataType="bool"
                                  name="IsMedicationInHome" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AssessedByStaffID]"
                                  dataType="i4"
                                  name="AssessedByStaffID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MedicationTypeCode]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="MedicationTypeCode" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BirthControlMedicationCode]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="BirthControlMedicationCode" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FrequencyCode]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="FrequencyCode" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RouteCode]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="RouteCode" />
                              </externalMetadataColumns>
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="OLE DB Destination Error Output"
                              synchronousInputId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication"
                          componentClassID="Microsoft.OLEDBSource"
                          contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                          description="OLE DB Source"
                          localeId="1033"
                          name="OLE DB Source ACISMedication"
                          usesDispositions="true"
                          version="7">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                              name="CommandTimeout">0</property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the database object used to open a rowset."
                              name="OpenRowset"></property>
                            <property
                              dataType="System.String"
                              description="Specifies the variable that contains the name of the database object used to open a rowset."
                              name="OpenRowsetVariable"></property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT
 TO_CHAR(VID_ID) VID_ID 
,TO_CHAR(VID_PER_ID) VID_PER_ID
,TO_CHAR(VID_CSL_ID) VID_CSL_ID 
,TO_CHAR(VID_ATD_ID) VID_ATD_ID
,TO_CHAR(VID_LLC_ID) VID_LLC_ID 
,TO_CHAR(VID_SCH_ID) VID_SCH_ID 
,TO_CHAR(VID_LVB_ID) VID_LVB_ID 
,TO_CHAR(VID_CIP_LINK_ID) VID_CIP_LINK_ID 
,TO_CHAR(VID_LINE_ID)  VID_LINE_ID
,TO_CHAR(VID_ENTRY_ID) VID_ENTRY_ID
,TO_CHAR(VID_GIVER_PER_ID) VID_GIVER_PER_ID
, VID_GIVER_ROLE  
, VID_CAREPLAN  
, VID_ANTIGEN 
,TO_CHAR(VID_STAGE) VID_STAGE 
,TO_CHAR(VID_DATE,'YYYYMMDD') VID_DATE
--,TO_CHAR(VID_TIME) VID_TIME
,TO_CHAR(VID_EST_DATE) VID_EST_DATE 
, TO_CHAR(VID_INVALID) VID_INVALID
, VID_SCHED_STATUS 
, VID_STATUS
, VID_STATUS_REASON 
, VID_CONSENT_STATUS 
, TO_CHAR(VID_CONT_LIVE) VID_CONT_LIVE
, TO_CHAR(VID_EOS) VID_EOS
, VID_BODYSITE 
, TO_CHAR(VID_DOSAGE) VID_DOSAGE
, VID_DOSAGE_UNIT 
, VID_TRADENAME 
, TO_CHAR(VID_TAKEON) VID_TAKEON
, TO_CHAR(VID_IMPORTED_CODE) VID_IMPORTED_CODE 
, TO_CHAR(VID_USER_STAGE) VID_USER_STAGE
, TO_CHAR(VID_USER_STATUS) VID_USER_STATUS
, VID_COMMENTS 
, TO_CHAR(VID_INTERNAL_ID)  VID_INTERNAL_ID
,TO_CHAR(VID_CREATED_ON,'YYYYMMDD') VID_CREATED_ON
,TO_CHAR(VID_AMENDED_ON,'YYYYMMDD') VID_AMENDED_ON
, VID_OWNER_TEM_ID 
, TO_CHAR(VID_ORG_ID) VID_ORG_ID 
, TO_CHAR(VID_STATUS_FLAG) VID_STATUS_FLAG
from PARIS.MPI_CH_VAC_HIST</property>
                            <property
                              dataType="System.String"
                              description="The variable that contains the SQL command to be executed."
                              name="SqlCommandVariable">User::SQLACISMedicationStr</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the column code page to use when code page information is unavailable from the data source."
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Boolean"
                              description="Forces the use of the DefaultCodePage property value when describing character data."
                              name="AlwaysUseDefaultCodePage">true</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the mode used to access the database."
                              name="AccessMode"
                              typeConverter="AccessMode">3</property>
                            <property
                              dataType="System.String"
                              description="The mappings between the parameters in the SQL command and variables."
                              name="ParameterMapping"></property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Connections[OleDbConnection]"
                              connectionManagerID="Package.ConnectionManagers[PARIS]"
                              connectionManagerRefId="Package.ConnectionManagers[PARIS]"
                              description="The OLE DB runtime connection used to access the database."
                              name="OleDbConnection" />
                          </connections>
                          <outputs>
                            <output
                              refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output]"
                              name="OLE DB Source Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[CREATED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[CREATED_ON]"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[CREATED_ON]"
                                  name="CREATED_ON"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[AMENDED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[AMENDED_ON]"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[AMENDED_ON]"
                                  name="AMENDED_ON"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[VOID_FLAG]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[VOID_FLAG]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[VOID_FLAG]"
                                  name="VOID_FLAG"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[DOSE]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[DOSE]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[DOSE]"
                                  name="DOSE"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[FREQUENCY]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[FREQUENCY]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[FREQUENCY]"
                                  name="FREQUENCY"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[UDFTABLE]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[UDFTABLE]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[UDFTABLE]"
                                  name="UDFTABLE"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[SOURCESYSTEMCLIENTIDSTR]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[SOURCESYSTEMCLIENTIDSTR]"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[SOURCESYSTEMCLIENTIDSTR]"
                                  name="SOURCESYSTEMCLIENTIDSTR"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[TEAMCODE]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[TEAMCODE]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[TEAMCODE]"
                                  name="TEAMCODE"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[SOURCERECORDIDSTR]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[SOURCERECORDIDSTR]"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[SOURCERECORDIDSTR]"
                                  name="SOURCERECORDIDSTR"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[FORM_TYPE]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[FORM_TYPE]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[FORM_TYPE]"
                                  name="FORM_TYPE"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[FORMID]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[FORMID]"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[FORMID]"
                                  name="FORMID"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[PARENT_FORM_TYPE]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[PARENT_FORM_TYPE]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[PARENT_FORM_TYPE]"
                                  name="PARENT_FORM_TYPE"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[PARENT_FORMID]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[PARENT_FORMID]"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[PARENT_FORMID]"
                                  name="PARENT_FORMID"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[ASSESSED_BY_STAFFCODE]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[ASSESSED_BY_STAFFCODE]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[ASSESSED_BY_STAFFCODE]"
                                  name="ASSESSED_BY_STAFFCODE"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[ASSESSED_BY_STAFFID]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[ASSESSED_BY_STAFFID]"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[ASSESSED_BY_STAFFID]"
                                  name="ASSESSED_BY_STAFFID"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[ASSESSMENT_DATEIDSTR]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[ASSESSMENT_DATEIDSTR]"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[ASSESSMENT_DATEIDSTR]"
                                  name="ASSESSMENT_DATEIDSTR"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[MEDICATION_TYPE]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[MEDICATION_TYPE]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[MEDICATION_TYPE]"
                                  name="MEDICATION_TYPE"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[MEDICATION_CODE]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[MEDICATION_CODE]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[MEDICATION_CODE]"
                                  name="MEDICATION_CODE"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[BIRTH_CONTROL_MEDICATION]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[BIRTH_CONTROL_MEDICATION]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[BIRTH_CONTROL_MEDICATION]"
                                  name="BIRTH_CONTROL_MEDICATION"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[DURATION]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[DURATION]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[DURATION]"
                                  name="DURATION"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[DRUG_ROUTE]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[DRUG_ROUTE]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[DRUG_ROUTE]"
                                  name="DRUG_ROUTE"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[START_DATESTR]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[START_DATESTR]"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[START_DATESTR]"
                                  name="START_DATESTR"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[END_DATESTR]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[END_DATESTR]"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[END_DATESTR]"
                                  name="END_DATESTR"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[START_DATESTR2]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[START_DATESTR2]"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[START_DATESTR2]"
                                  name="START_DATESTR2"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[END_DATESTR2]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[END_DATESTR2]"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[END_DATESTR2]"
                                  name="END_DATESTR2"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[PRN]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[PRN]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[PRN]"
                                  name="PRN"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[MADR]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[MADR]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[MADR]"
                                  name="MADR"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[MEDICATION_IN_HOME]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[MEDICATION_IN_HOME]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[MEDICATION_IN_HOME]"
                                  name="MEDICATION_IN_HOME"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[CREATED_BY]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[CREATED_BY]"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[CREATED_BY]"
                                  name="CREATED_BY"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[AMENDED_BY]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[AMENDED_BY]"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[AMENDED_BY]"
                                  name="AMENDED_BY"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[CREATED_STAFF_CODE]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[CREATED_STAFF_CODE]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[CREATED_STAFF_CODE]"
                                  name="CREATED_STAFF_CODE"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[AMENDED_STAFF_CODE]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[AMENDED_STAFF_CODE]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].Columns[AMENDED_STAFF_CODE]"
                                  name="AMENDED_STAFF_CODE"
                                  truncationRowDisposition="FailComponent" />
                              </outputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[CREATED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  name="CREATED_ON" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[AMENDED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  name="AMENDED_ON" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[VOID_FLAG]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="VOID_FLAG" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[DOSE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="DOSE" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[FREQUENCY]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="FREQUENCY" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[UDFTABLE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="UDFTABLE" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[SOURCESYSTEMCLIENTIDSTR]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  name="SOURCESYSTEMCLIENTIDSTR" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[TEAMCODE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="TEAMCODE" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[SOURCERECORDIDSTR]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  name="SOURCERECORDIDSTR" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[FORM_TYPE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="FORM_TYPE" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[FORMID]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  name="FORMID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[PARENT_FORM_TYPE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="PARENT_FORM_TYPE" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[PARENT_FORMID]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  name="PARENT_FORMID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[ASSESSED_BY_STAFFCODE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="ASSESSED_BY_STAFFCODE" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[ASSESSED_BY_STAFFID]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  name="ASSESSED_BY_STAFFID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[ASSESSMENT_DATEIDSTR]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  name="ASSESSMENT_DATEIDSTR" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[MEDICATION_TYPE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="MEDICATION_TYPE" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[MEDICATION_CODE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="MEDICATION_CODE" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[BIRTH_CONTROL_MEDICATION]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="BIRTH_CONTROL_MEDICATION" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[DURATION]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="DURATION" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[DRUG_ROUTE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="DRUG_ROUTE" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[START_DATESTR]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  name="START_DATESTR" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[END_DATESTR]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  name="END_DATESTR" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[START_DATESTR2]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  name="START_DATESTR2" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[END_DATESTR2]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  name="END_DATESTR2" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[PRN]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="PRN" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[MADR]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="MADR" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[MEDICATION_IN_HOME]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="MEDICATION_IN_HOME" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[CREATED_BY]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  name="CREATED_BY" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[AMENDED_BY]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  name="AMENDED_BY" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[CREATED_STAFF_CODE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="CREATED_STAFF_CODE" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output].ExternalColumns[AMENDED_STAFF_CODE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="AMENDED_STAFF_CODE" />
                              </externalMetadataColumns>
                            </output>
                            <output
                              refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output]"
                              isErrorOut="true"
                              name="OLE DB Source Error Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[CREATED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[CREATED_ON]"
                                  name="CREATED_ON" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[AMENDED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[AMENDED_ON]"
                                  name="AMENDED_ON" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[VOID_FLAG]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[VOID_FLAG]"
                                  name="VOID_FLAG" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[DOSE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[DOSE]"
                                  name="DOSE" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[FREQUENCY]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[FREQUENCY]"
                                  name="FREQUENCY" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[UDFTABLE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[UDFTABLE]"
                                  name="UDFTABLE" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[SOURCESYSTEMCLIENTIDSTR]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[SOURCESYSTEMCLIENTIDSTR]"
                                  name="SOURCESYSTEMCLIENTIDSTR" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[TEAMCODE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[TEAMCODE]"
                                  name="TEAMCODE" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[SOURCERECORDIDSTR]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[SOURCERECORDIDSTR]"
                                  name="SOURCERECORDIDSTR" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[FORM_TYPE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[FORM_TYPE]"
                                  name="FORM_TYPE" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[FORMID]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[FORMID]"
                                  name="FORMID" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[PARENT_FORM_TYPE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[PARENT_FORM_TYPE]"
                                  name="PARENT_FORM_TYPE" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[PARENT_FORMID]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[PARENT_FORMID]"
                                  name="PARENT_FORMID" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[ASSESSED_BY_STAFFCODE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[ASSESSED_BY_STAFFCODE]"
                                  name="ASSESSED_BY_STAFFCODE" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[ASSESSED_BY_STAFFID]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[ASSESSED_BY_STAFFID]"
                                  name="ASSESSED_BY_STAFFID" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[ASSESSMENT_DATEIDSTR]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[ASSESSMENT_DATEIDSTR]"
                                  name="ASSESSMENT_DATEIDSTR" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[MEDICATION_TYPE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[MEDICATION_TYPE]"
                                  name="MEDICATION_TYPE" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[MEDICATION_CODE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[MEDICATION_CODE]"
                                  name="MEDICATION_CODE" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[BIRTH_CONTROL_MEDICATION]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[BIRTH_CONTROL_MEDICATION]"
                                  name="BIRTH_CONTROL_MEDICATION" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[DURATION]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[DURATION]"
                                  name="DURATION" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[DRUG_ROUTE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[DRUG_ROUTE]"
                                  name="DRUG_ROUTE" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[START_DATESTR]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[START_DATESTR]"
                                  name="START_DATESTR" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[END_DATESTR]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[END_DATESTR]"
                                  name="END_DATESTR" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[START_DATESTR2]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[START_DATESTR2]"
                                  name="START_DATESTR2" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[END_DATESTR2]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[END_DATESTR2]"
                                  name="END_DATESTR2" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[PRN]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[PRN]"
                                  name="PRN" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[MADR]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[MADR]"
                                  name="MADR" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[MEDICATION_IN_HOME]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[MEDICATION_IN_HOME]"
                                  name="MEDICATION_IN_HOME" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[CREATED_BY]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[CREATED_BY]"
                                  name="CREATED_BY" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[AMENDED_BY]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[AMENDED_BY]"
                                  name="AMENDED_BY" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[CREATED_STAFF_CODE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[CREATED_STAFF_CODE]"
                                  name="CREATED_STAFF_CODE" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[AMENDED_STAFF_CODE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Error Output].Columns[AMENDED_STAFF_CODE]"
                                  name="AMENDED_STAFF_CODE" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Row Count"
                          componentClassID="Microsoft.RowCount"
                          contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                          localeId="1033"
                          name="Row Count">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the variable to hold the row count."
                              name="VariableName">User::ACISMedicationCnt</property>
                          </properties>
                          <inputs>
                            <input
                              refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Row Count.Inputs[Row Count Input 1]"
                              hasSideEffects="true"
                              name="Row Count Input 1">
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Row Count.Outputs[Row Count Output 1]"
                              name="Row Count Output 1"
                              synchronousInputId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Row Count.Inputs[Row Count Input 1]">
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                      </components>
                      <paths>
                        <path
                          refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication.Paths[Derived Column Output]"
                          endId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          name="Derived Column Output"
                          startId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Derived Column.Outputs[Derived Column Output]" />
                        <path
                          refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication.Paths[OLE DB Source Output]"
                          endId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Row Count.Inputs[Row Count Input 1]"
                          name="OLE DB Source Output"
                          startId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication.Outputs[OLE DB Source Output]" />
                        <path
                          refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication.Paths[Row Count Output 1]"
                          endId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Derived Column.Inputs[Derived Column Input]"
                          name="Row Count Output 1"
                          startId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Row Count.Outputs[Row Count Output 1]" />
                      </paths>
                    </pipeline>
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Update ExtractAudit"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{F4565F5C-D655-4088-ABC9-4352C384C0B7}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Update ExtractAudit"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="0">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{420F3266-9DA0-4FA8-AAD0-901BE50B5696}"
                      SQLTask:SqlStatementSource="BEGIN&#xA;INSERT PARIS.ExtractAudit (PkgExecKey,RunDate,PARISTableName, LastExtractDate, RecordCnt)&#xA;VALUES (?,GetDate(),'ACISMedication',?,?)&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="User::BatchID"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="1"
                        SQLTask:DtsVariableName="User::ExtractStartDateString"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="2"
                        SQLTask:DtsVariableName="User::ACISMedicationCnt"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active.PrecedenceConstraints[Constraint]"
                  DTS:CreationName=""
                  DTS:DTSID="{4555D73D-40D4-4AFE-B4DB-88DAE13505E1}"
                  DTS:From="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint"
                  DTS:To="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Update ExtractAudit" />
              </DTS:PrecedenceConstraints>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Process ACISMedication.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{4F8126F5-A3A1-4659-92EA-62E7E8E4FC55}"
              DTS:From="Package\Sequence Container\Process ACISMedication\Get IsActive and LastExtractDate"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Process Address"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{DABF3856-F646-4932-9C35-58DB6DF931FE}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="1033"
          DTS:ObjectName="Process Address">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Process Address\Get IsActive and LastExtractDate"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{B6AED799-A617-4495-8155-BED5063FC09C}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get IsActive and LastExtractDate"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{420F3266-9DA0-4FA8-AAD0-901BE50B5696}"
                  SQLTask:SqlStatementSource="SELECT IsActive, LastExtractDate&#xA;FROM PARIS.ExtractControl&#xA;WHERE PARISTableName = 'Address'&#xA;"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="IsActive"
                    SQLTask:DtsVariableName="User::IsActive" />
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="LastExtractDate"
                    SQLTask:DtsVariableName="User::ExtractStartDateString" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Process Address\Load Address if active"
              DTS:AssignExpression="@IsActive =  0"
              DTS:CreationName="STOCK:FORLOOP"
              DTS:Description="For Loop Container"
              DTS:DTSID="{4A1D5071-74E9-42A8-9E98-238AFD22560A}"
              DTS:EvalExpression="@IsActive == 1"
              DTS:ExecutableType="STOCK:FORLOOP"
              DTS:InitExpression="@IsActive =  0"
              DTS:LocaleID="-1"
              DTS:MaxConcurrent="1"
              DTS:ObjectName="Load Address if active">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="InitExpression">"@IsActive =  " +(DT_WSTR, 15) @[User::IsActive]</DTS:PropertyExpression>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Sequence Container\Process Address\Load Address if active\Get Address"
                  DTS:CreationName="Microsoft.Pipeline"
                  DTS:Description="Data Flow Task"
                  DTS:DTSID="{3B093A0C-E993-4A85-9773-D4358C830187}"
                  DTS:ExecutableType="Microsoft.Pipeline"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Get Address"
                  DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <pipeline
                      version="1">
                      <components>
                        <component
                          refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Derived Column"
                          componentClassID="Microsoft.DerivedColumn"
                          contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                          localeId="1033"
                          name="Derived Column"
                          usesDispositions="true">
                          <inputs>
                            <input
                              refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Derived Column.Inputs[Derived Column Input]"
                              description="Input to the Derived Column Transformation"
                              name="Derived Column Input">
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Derived Column.Outputs[Derived Column Output]"
                              description="Default Output of the Derived Column Transformation"
                              exclusionGroup="1"
                              name="Derived Column Output"
                              synchronousInputId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Derived Column.Inputs[Derived Column Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Derived Column.Outputs[Derived Column Output].Columns[ExtractDate]"
                                  dataType="date"
                                  errorOrTruncationOperation="Computation"
                                  errorRowDisposition="FailComponent"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Derived Column.Outputs[Derived Column Output].Columns[ExtractDate]"
                                  name="ExtractDate"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Expression"
                                      name="Expression">@[User::ExtractDate]</property>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Friendly Expression"
                                      expressionType="Notify"
                                      name="FriendlyExpression">@[User::ExtractDate]</property>
                                  </properties>
                                </outputColumn>
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Derived Column.Outputs[Derived Column Error Output]"
                              description="Error Output of the Derived Column Transformation"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="Derived Column Error Output"
                              synchronousInputId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Derived Column.Inputs[Derived Column Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination"
                          componentClassID="Microsoft.OLEDBDestination"
                          contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                          description="OLE DB Destination"
                          localeId="1033"
                          name="OLE DB Destination"
                          usesDispositions="true"
                          version="4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                              name="CommandTimeout">0</property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the database object used to open a rowset."
                              name="OpenRowset">[PARIS].[Address]</property>
                            <property
                              dataType="System.String"
                              description="Specifies the variable that contains the name of the database object used to open a rowset."
                              name="OpenRowsetVariable"></property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the column code page to use when code page information is unavailable from the data source."
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Boolean"
                              description="Forces the use of the DefaultCodePage property value when describing character data."
                              name="AlwaysUseDefaultCodePage">true</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the mode used to access the database."
                              name="AccessMode"
                              typeConverter="AccessMode">3</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                              name="FastLoadKeepIdentity">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                              name="FastLoadKeepNulls">false</property>
                            <property
                              dataType="System.String"
                              description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                              name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                              name="FastLoadMaxInsertCommitSize">2147483647</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Connections[OleDbConnection]"
                              connectionManagerID="Package.ConnectionManagers[Landing]"
                              connectionManagerRefId="Package.ConnectionManagers[Landing]"
                              description="The OLE DB runtime connection used to access the database."
                              name="OleDbConnection" />
                          </connections>
                          <inputs>
                            <input
                              refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input]"
                              errorOrTruncationOperation="Insert"
                              errorRowDisposition="FailComponent"
                              hasSideEffects="true"
                              name="OLE DB Destination Input">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CREATED_ON]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="75"
                                  cachedName="CREATED_ON"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceRecordCreateDateStr]"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[CREATED_ON]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[AMENDED_ON]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="75"
                                  cachedName="AMENDED_ON"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressAmendedDateStr]"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[AMENDED_ON]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ADDRESS_CURRENT]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="40"
                                  cachedName="ADDRESS_CURRENT"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressCurrent]"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[ADDRESS_CURRENT]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ADDRESS_LINE1]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="35"
                                  cachedName="ADDRESS_LINE1"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressLine1]"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[ADDRESS_LINE1]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ADDRESS_LINE2]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="35"
                                  cachedName="ADDRESS_LINE2"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressLine2]"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[ADDRESS_LINE2]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ADDRESS_TYPE]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="ADDRESS_TYPE"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressType]"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[ADDRESS_TYPE]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ADDRESS_LINE3]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="35"
                                  cachedName="ADDRESS_LINE3"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressLine3]"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[ADDRESS_LINE3]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CITY]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="35"
                                  cachedName="CITY"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[CITY]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[COUNTRY]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="COUNTRY"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Country]"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[COUNTRY]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DATE_TO]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="75"
                                  cachedName="DATE_TO"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDateStr]"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[DATE_TO]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[HOUSE_TYPE]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="HOUSE_TYPE"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HouseTypeCode]"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[HOUSE_TYPE]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[POSTAL_CODE]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="POSTAL_CODE"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PostalCode]"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[POSTAL_CODE]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PROVINCE]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="35"
                                  cachedName="PROVINCE"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Province]"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[PROVINCE]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ADDRESS_ID]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="40"
                                  cachedName="ADDRESS_ID"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceAddressIDStr]"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[ADDRESS_ID]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PARIS_ID]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="40"
                                  cachedName="PARIS_ID"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceSystemClientIDStr]"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[PARIS_ID]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DATE_FROM]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="75"
                                  cachedName="DATE_FROM"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDateStr]"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[DATE_FROM]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ExtractDate]"
                                  cachedDataType="date"
                                  cachedName="ExtractDate"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceSystemLastUpdateDate]"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Derived Column.Outputs[Derived Column Output].Columns[ExtractDate]" />
                              </inputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceSystemLastUpdateDate]"
                                  dataType="dbTimeStamp"
                                  name="SourceSystemLastUpdateDate" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDateStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="StartDateStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDateStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="EndDateStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDateID]"
                                  dataType="i4"
                                  name="EndDateID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDateID]"
                                  dataType="i4"
                                  name="StartDateID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceRecordCreateDateStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="SourceRecordCreateDateStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceSystemClientIDStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="SourceSystemClientIDStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceAddressIDStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="SourceAddressIDStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressType]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="AddressType" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressCurrent]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="AddressCurrent" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="City" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Province]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="Province" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PostalCode]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="PostalCode" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Country]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="Country" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[HouseTypeCode]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="HouseTypeCode" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressLine1]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="AddressLine1" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressLine2]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="AddressLine2" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressLine3]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="AddressLine3" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressAmendedDateStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="AddressAmendedDateStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceSystemClientID]"
                                  dataType="i4"
                                  name="SourceSystemClientID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceAddressID]"
                                  dataType="i4"
                                  name="SourceAddressID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IsAddressCurrent]"
                                  dataType="bool"
                                  name="IsAddressCurrent" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceRecordCreateDate]"
                                  dataType="dbTimeStamp"
                                  name="SourceRecordCreateDate" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AddressAmendedDate]"
                                  dataType="dbTimeStamp"
                                  name="AddressAmendedDate" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ReLoadFlag]"
                                  dataType="bool"
                                  name="ReLoadFlag" />
                              </externalMetadataColumns>
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="OLE DB Destination Error Output"
                              synchronousInputId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address"
                          componentClassID="Microsoft.OLEDBSource"
                          contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                          description="OLE DB Source"
                          localeId="1033"
                          name="OLE DB Source Address"
                          usesDispositions="true"
                          version="7">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                              name="CommandTimeout">0</property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the database object used to open a rowset."
                              name="OpenRowset"></property>
                            <property
                              dataType="System.String"
                              description="Specifies the variable that contains the name of the database object used to open a rowset."
                              name="OpenRowsetVariable"></property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT 
	NVL(TO_CHAR(a.add_id),' ') address_id
   ,NVL(TO_CHAR(l.alk_per_id),' ') paris_id
   ,NVL(a.add_type,' ') address_type
   ,NVL(TO_CHAR(a.add_from,'YYYYMMDD'),' ') date_from
   ,NVL(TO_CHAR(a.add_to,'YYYYMMDD'),' ') date_to
   ,NVL(TO_CHAR(a.add_current),' ') address_current
   ,NVL(a.add_line4,' ') city
   ,NVL(a.add_line5,' ') province
   ,NVL(a.add_postcode,' ') postal_code
   ,NVL(a.add_country,' ') country
   ,NVL(a.add_accom,' ') house_type
   ,NVL(a.add_line1,' ') address_line1
   ,NVL(a.add_line2,' ') address_line2
   ,NVL(a.add_line3,' ') address_line3
   ,TO_CHAR(a.add_created_on,'YYYYMMDD') created_on
   ,TO_CHAR(a.add_amended_on,'YYYYMMDD') amended_on
FROM paris.mpi_address a
INNER JOIN paris.mpi_addr_link l
ON l.alk_add_id = a.add_id
/*       WHERE (pd.created_date &gt;= p_extract_date OR
    (pd.created_date &lt; p_extract_date AND TRUNC(a.add_amended_on) &gt;= p_range_start_date))*/
  	   
where rownum &lt; 1001</property>
                            <property
                              dataType="System.String"
                              description="The variable that contains the SQL command to be executed."
                              name="SqlCommandVariable">User::SQLAddressStr</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the column code page to use when code page information is unavailable from the data source."
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Boolean"
                              description="Forces the use of the DefaultCodePage property value when describing character data."
                              name="AlwaysUseDefaultCodePage">true</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the mode used to access the database."
                              name="AccessMode"
                              typeConverter="AccessMode">3</property>
                            <property
                              dataType="System.String"
                              description="The mappings between the parameters in the SQL command and variables."
                              name="ParameterMapping"></property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Connections[OleDbConnection]"
                              connectionManagerID="Package.ConnectionManagers[PARIS]"
                              connectionManagerRefId="Package.ConnectionManagers[PARIS]"
                              description="The OLE DB runtime connection used to access the database."
                              name="OleDbConnection" />
                          </connections>
                          <outputs>
                            <output
                              refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output]"
                              name="OLE DB Source Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[AMENDED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[AMENDED_ON]"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[AMENDED_ON]"
                                  name="AMENDED_ON"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[CREATED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[CREATED_ON]"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[CREATED_ON]"
                                  name="CREATED_ON"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[ADDRESS_ID]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[ADDRESS_ID]"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[ADDRESS_ID]"
                                  name="ADDRESS_ID"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[PARIS_ID]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[PARIS_ID]"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[PARIS_ID]"
                                  name="PARIS_ID"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[ADDRESS_TYPE]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[ADDRESS_TYPE]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[ADDRESS_TYPE]"
                                  name="ADDRESS_TYPE"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[DATE_FROM]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[DATE_FROM]"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[DATE_FROM]"
                                  name="DATE_FROM"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[DATE_TO]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[DATE_TO]"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[DATE_TO]"
                                  name="DATE_TO"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[ADDRESS_CURRENT]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[ADDRESS_CURRENT]"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[ADDRESS_CURRENT]"
                                  name="ADDRESS_CURRENT"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[CITY]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[CITY]"
                                  length="35"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[CITY]"
                                  name="CITY"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[PROVINCE]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[PROVINCE]"
                                  length="35"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[PROVINCE]"
                                  name="PROVINCE"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[POSTAL_CODE]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[POSTAL_CODE]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[POSTAL_CODE]"
                                  name="POSTAL_CODE"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[COUNTRY]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[COUNTRY]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[COUNTRY]"
                                  name="COUNTRY"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[HOUSE_TYPE]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[HOUSE_TYPE]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[HOUSE_TYPE]"
                                  name="HOUSE_TYPE"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[ADDRESS_LINE1]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[ADDRESS_LINE1]"
                                  length="35"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[ADDRESS_LINE1]"
                                  name="ADDRESS_LINE1"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[ADDRESS_LINE2]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[ADDRESS_LINE2]"
                                  length="35"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[ADDRESS_LINE2]"
                                  name="ADDRESS_LINE2"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[ADDRESS_LINE3]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[ADDRESS_LINE3]"
                                  length="35"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].Columns[ADDRESS_LINE3]"
                                  name="ADDRESS_LINE3"
                                  truncationRowDisposition="FailComponent" />
                              </outputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[AMENDED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  name="AMENDED_ON" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[CREATED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  name="CREATED_ON" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[ADDRESS_ID]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  name="ADDRESS_ID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[PARIS_ID]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  name="PARIS_ID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[ADDRESS_TYPE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="ADDRESS_TYPE" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[DATE_FROM]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  name="DATE_FROM" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[DATE_TO]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  name="DATE_TO" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[ADDRESS_CURRENT]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  name="ADDRESS_CURRENT" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[CITY]"
                                  codePage="1252"
                                  dataType="str"
                                  length="35"
                                  name="CITY" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[PROVINCE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="35"
                                  name="PROVINCE" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[POSTAL_CODE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="POSTAL_CODE" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[COUNTRY]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="COUNTRY" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[HOUSE_TYPE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="HOUSE_TYPE" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[ADDRESS_LINE1]"
                                  codePage="1252"
                                  dataType="str"
                                  length="35"
                                  name="ADDRESS_LINE1" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[ADDRESS_LINE2]"
                                  codePage="1252"
                                  dataType="str"
                                  length="35"
                                  name="ADDRESS_LINE2" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output].ExternalColumns[ADDRESS_LINE3]"
                                  codePage="1252"
                                  dataType="str"
                                  length="35"
                                  name="ADDRESS_LINE3" />
                              </externalMetadataColumns>
                            </output>
                            <output
                              refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output]"
                              isErrorOut="true"
                              name="OLE DB Source Error Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[AMENDED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[AMENDED_ON]"
                                  name="AMENDED_ON" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[CREATED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[CREATED_ON]"
                                  name="CREATED_ON" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[ADDRESS_ID]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[ADDRESS_ID]"
                                  name="ADDRESS_ID" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[PARIS_ID]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[PARIS_ID]"
                                  name="PARIS_ID" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[ADDRESS_TYPE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[ADDRESS_TYPE]"
                                  name="ADDRESS_TYPE" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[DATE_FROM]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[DATE_FROM]"
                                  name="DATE_FROM" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[DATE_TO]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[DATE_TO]"
                                  name="DATE_TO" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[ADDRESS_CURRENT]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[ADDRESS_CURRENT]"
                                  name="ADDRESS_CURRENT" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[CITY]"
                                  codePage="1252"
                                  dataType="str"
                                  length="35"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[CITY]"
                                  name="CITY" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[PROVINCE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="35"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[PROVINCE]"
                                  name="PROVINCE" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[POSTAL_CODE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[POSTAL_CODE]"
                                  name="POSTAL_CODE" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[COUNTRY]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[COUNTRY]"
                                  name="COUNTRY" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[HOUSE_TYPE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[HOUSE_TYPE]"
                                  name="HOUSE_TYPE" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[ADDRESS_LINE1]"
                                  codePage="1252"
                                  dataType="str"
                                  length="35"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[ADDRESS_LINE1]"
                                  name="ADDRESS_LINE1" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[ADDRESS_LINE2]"
                                  codePage="1252"
                                  dataType="str"
                                  length="35"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[ADDRESS_LINE2]"
                                  name="ADDRESS_LINE2" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[ADDRESS_LINE3]"
                                  codePage="1252"
                                  dataType="str"
                                  length="35"
                                  lineageId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Error Output].Columns[ADDRESS_LINE3]"
                                  name="ADDRESS_LINE3" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Row Count"
                          componentClassID="Microsoft.RowCount"
                          contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                          localeId="1033"
                          name="Row Count">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the variable to hold the row count."
                              name="VariableName">User::AddressCnt</property>
                          </properties>
                          <inputs>
                            <input
                              refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Row Count.Inputs[Row Count Input 1]"
                              hasSideEffects="true"
                              name="Row Count Input 1">
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Row Count.Outputs[Row Count Output 1]"
                              name="Row Count Output 1"
                              synchronousInputId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Row Count.Inputs[Row Count Input 1]">
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                      </components>
                      <paths>
                        <path
                          refId="Package\Sequence Container\Process Address\Load Address if active\Get Address.Paths[Derived Column Output]"
                          endId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          name="Derived Column Output"
                          startId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Derived Column.Outputs[Derived Column Output]" />
                        <path
                          refId="Package\Sequence Container\Process Address\Load Address if active\Get Address.Paths[OLE DB Source Output]"
                          endId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Row Count.Inputs[Row Count Input 1]"
                          name="OLE DB Source Output"
                          startId="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address.Outputs[OLE DB Source Output]" />
                        <path
                          refId="Package\Sequence Container\Process Address\Load Address if active\Get Address.Paths[Row Count Output 1]"
                          endId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Derived Column.Inputs[Derived Column Input]"
                          name="Row Count Output 1"
                          startId="Package\Sequence Container\Process Address\Load Address if active\Get Address\Row Count.Outputs[Row Count Output 1]" />
                      </paths>
                    </pipeline>
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Sequence Container\Process Address\Load Address if active\Update ExtractAudit"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{9C1ADB79-926F-4D79-9FA0-64F7936B3D10}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Update ExtractAudit"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="0">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{420F3266-9DA0-4FA8-AAD0-901BE50B5696}"
                      SQLTask:SqlStatementSource="BEGIN&#xA;INSERT PARIS.ExtractAudit (PkgExecKey,RunDate,PARISTableName, LastExtractDate, RecordCnt)&#xA;VALUES (?,GetDate(),'Address',?,?)&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="User::BatchID"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="1"
                        SQLTask:DtsVariableName="User::ExtractStartDateString"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="2"
                        SQLTask:DtsVariableName="User::AddressCnt"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Sequence Container\Process Address\Load Address if active.PrecedenceConstraints[Constraint]"
                  DTS:CreationName=""
                  DTS:DTSID="{B9493EE2-02DC-4C68-A48F-C9DBCE5E0F8D}"
                  DTS:From="Package\Sequence Container\Process Address\Load Address if active\Get Address"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint"
                  DTS:To="Package\Sequence Container\Process Address\Load Address if active\Update ExtractAudit" />
              </DTS:PrecedenceConstraints>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Process Address.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{6226AD03-7253-4616-92A9-57F73DD39F19}"
              DTS:From="Package\Sequence Container\Process Address\Get IsActive and LastExtractDate"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container\Process Address\Load Address if active" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Process AL Client Needs"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{4B168A21-3F24-4433-8E46-1D91CD03C950}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="1033"
          DTS:ObjectName="Process AL Client Needs">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Process AL Client Needs\Get IsActive and LastExtractDate"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{2A0455E7-6FB1-49E9-BD09-206D1840248A}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get IsActive and LastExtractDate"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{420F3266-9DA0-4FA8-AAD0-901BE50B5696}"
                  SQLTask:SqlStatementSource="SELECT IsActive, LastExtractDate&#xA;FROM PARIS.ExtractControl&#xA;WHERE PARISTableName = 'ALClientNeeds'"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="IsActive"
                    SQLTask:DtsVariableName="User::IsActive" />
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="LastExtractDate"
                    SQLTask:DtsVariableName="User::ExtractStartDateString" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active"
              DTS:AssignExpression="@IsActive =  0"
              DTS:CreationName="STOCK:FORLOOP"
              DTS:Description="For Loop Container"
              DTS:DTSID="{B5AAF077-1128-47E2-956A-C98B2063C3D0}"
              DTS:EvalExpression="@IsActive == 1"
              DTS:ExecutableType="STOCK:FORLOOP"
              DTS:InitExpression="@IsActive =  0"
              DTS:LocaleID="-1"
              DTS:MaxConcurrent="1"
              DTS:ObjectName="Load ALClientNeeds if active">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="InitExpression">"@IsActive =  " +(DT_WSTR, 15) @[User::IsActive]</DTS:PropertyExpression>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs"
                  DTS:CreationName="Microsoft.Pipeline"
                  DTS:Description="Data Flow Task"
                  DTS:DTSID="{9E2E4A53-5B41-4939-BF4B-C010CF135FD2}"
                  DTS:ExecutableType="Microsoft.Pipeline"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Get AL Client Needs"
                  DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <pipeline
                      version="1">
                      <components>
                        <component
                          refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Derived Column"
                          componentClassID="Microsoft.DerivedColumn"
                          contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                          localeId="1033"
                          name="Derived Column"
                          usesDispositions="true">
                          <inputs>
                            <input
                              refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Derived Column.Inputs[Derived Column Input]"
                              description="Input to the Derived Column Transformation"
                              name="Derived Column Input">
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Derived Column.Outputs[Derived Column Output]"
                              description="Default Output of the Derived Column Transformation"
                              exclusionGroup="1"
                              name="Derived Column Output"
                              synchronousInputId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Derived Column.Inputs[Derived Column Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Derived Column.Outputs[Derived Column Output].Columns[ExtractDate]"
                                  dataType="date"
                                  errorOrTruncationOperation="Computation"
                                  errorRowDisposition="FailComponent"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Derived Column.Outputs[Derived Column Output].Columns[ExtractDate]"
                                  name="ExtractDate"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Expression"
                                      name="Expression">@[User::ExtractDate]</property>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Friendly Expression"
                                      expressionType="Notify"
                                      name="FriendlyExpression">@[User::ExtractDate]</property>
                                  </properties>
                                </outputColumn>
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Derived Column.Outputs[Derived Column Error Output]"
                              description="Error Output of the Derived Column Transformation"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="Derived Column Error Output"
                              synchronousInputId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Derived Column.Inputs[Derived Column Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination"
                          componentClassID="Microsoft.OLEDBDestination"
                          contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                          description="OLE DB Destination"
                          localeId="1033"
                          name="OLE DB Destination"
                          usesDispositions="true"
                          version="4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                              name="CommandTimeout">0</property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the database object used to open a rowset."
                              name="OpenRowset">[PARIS].[ALClientNeeds]</property>
                            <property
                              dataType="System.String"
                              description="Specifies the variable that contains the name of the database object used to open a rowset."
                              name="OpenRowsetVariable"></property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the column code page to use when code page information is unavailable from the data source."
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Boolean"
                              description="Forces the use of the DefaultCodePage property value when describing character data."
                              name="AlwaysUseDefaultCodePage">false</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the mode used to access the database."
                              name="AccessMode"
                              typeConverter="AccessMode">3</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                              name="FastLoadKeepIdentity">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                              name="FastLoadKeepNulls">false</property>
                            <property
                              dataType="System.String"
                              description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                              name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                              name="FastLoadMaxInsertCommitSize">2147483647</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Connections[OleDbConnection]"
                              connectionManagerID="Package.ConnectionManagers[Landing]"
                              connectionManagerRefId="Package.ConnectionManagers[Landing]"
                              description="The OLE DB runtime connection used to access the database."
                              name="OleDbConnection" />
                          </connections>
                          <inputs>
                            <input
                              refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input]"
                              errorOrTruncationOperation="Insert"
                              errorRowDisposition="FailComponent"
                              hasSideEffects="true"
                              name="OLE DB Destination Input">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ACALCNS_ID]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="40"
                                  cachedName="ACALCNS_ID"
                                  externalMetadataColumnId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceALClientNeedsIDStr]"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].Columns[ACALCNS_ID]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ASSESSMENT_ID]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="40"
                                  cachedName="ASSESSMENT_ID"
                                  externalMetadataColumnId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceAssessmentIDStr]"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].Columns[ASSESSMENT_ID]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SUM_SERVICE_MINUTES]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="40"
                                  cachedName="SUM_SERVICE_MINUTES"
                                  externalMetadataColumnId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ServiceMinutesStr]"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].Columns[SUM_SERVICE_MINUTES]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ExtractDate]"
                                  cachedDataType="date"
                                  cachedName="ExtractDate"
                                  externalMetadataColumnId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceSystemLastUpdateDate]"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Derived Column.Outputs[Derived Column Output].Columns[ExtractDate]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CREATED_ON]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="75"
                                  cachedName="CREATED_ON"
                                  externalMetadataColumnId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ALClientNeedsCreateDateStr]"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].Columns[CREATED_ON]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[AMENDED_ON]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="75"
                                  cachedName="AMENDED_ON"
                                  externalMetadataColumnId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ALClientNeedsAmendedDateStr]"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].Columns[AMENDED_ON]" />
                              </inputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceALClientNeedsID]"
                                  dataType="i4"
                                  name="SourceALClientNeedsID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceAssessmentID]"
                                  dataType="i4"
                                  name="SourceAssessmentID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ServiceMinutes]"
                                  dataType="i2"
                                  name="ServiceMinutes" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceSystemLastUpdateDate]"
                                  dataType="dbTimeStamp"
                                  name="SourceSystemLastUpdateDate" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceALClientNeedsIDStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="SourceALClientNeedsIDStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SourceAssessmentIDStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="SourceAssessmentIDStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ServiceMinutesStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="ServiceMinutesStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ALClientNeedsCreateDateStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="ALClientNeedsCreateDateStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ALClientNeedsAmendedDateStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="ALClientNeedsAmendedDateStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ALClientNeedsCreateDate]"
                                  dataType="dbTimeStamp"
                                  name="ALClientNeedsCreateDate" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ALClientNeedsAmendedDate]"
                                  dataType="dbTimeStamp"
                                  name="ALClientNeedsAmendedDate" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ReLoadFlag]"
                                  dataType="bool"
                                  name="ReLoadFlag" />
                              </externalMetadataColumns>
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="OLE DB Destination Error Output"
                              synchronousInputId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs"
                          componentClassID="Microsoft.OLEDBSource"
                          contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                          description="OLE DB Source"
                          localeId="1033"
                          name="OLE DB Source AL Client Needs"
                          usesDispositions="true"
                          version="7">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                              name="CommandTimeout">0</property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the database object used to open a rowset."
                              name="OpenRowset"></property>
                            <property
                              dataType="System.String"
                              description="Specifies the variable that contains the name of the database object used to open a rowset."
                              name="OpenRowsetVariable"></property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT
    NVL(TO_CHAR(t.alcu_id),' ')         acalcns_id
    ,NVL(TO_CHAR(t.alcu_ass_id) ,' ')    assessment_id
    ,NVL(TO_CHAR(t.alcu_sum),' ')        sum_service_minutes
   ,TO_CHAR(t.alcu_created_on, 'YYYYMMDD')  created_on
   ,TO_CHAR(t.alcu_amended_on, 'YYYYMMDD')  amended_on
FROM paris.assu_acalcns t

where rownum&lt;=1000</property>
                            <property
                              dataType="System.String"
                              description="The variable that contains the SQL command to be executed."
                              name="SqlCommandVariable">User::SQLALClientNeedsStr</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the column code page to use when code page information is unavailable from the data source."
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Boolean"
                              description="Forces the use of the DefaultCodePage property value when describing character data."
                              name="AlwaysUseDefaultCodePage">true</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the mode used to access the database."
                              name="AccessMode"
                              typeConverter="AccessMode">3</property>
                            <property
                              dataType="System.String"
                              description="The mappings between the parameters in the SQL command and variables."
                              name="ParameterMapping"></property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Connections[OleDbConnection]"
                              connectionManagerID="Package.ConnectionManagers[PARIS]"
                              connectionManagerRefId="Package.ConnectionManagers[PARIS]"
                              description="The OLE DB runtime connection used to access the database."
                              name="OleDbConnection" />
                          </connections>
                          <outputs>
                            <output
                              refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output]"
                              name="OLE DB Source Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].Columns[ACALCNS_ID]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].ExternalColumns[ACALCNS_ID]"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].Columns[ACALCNS_ID]"
                                  name="ACALCNS_ID"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].Columns[ASSESSMENT_ID]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].ExternalColumns[ASSESSMENT_ID]"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].Columns[ASSESSMENT_ID]"
                                  name="ASSESSMENT_ID"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].Columns[SUM_SERVICE_MINUTES]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].ExternalColumns[SUM_SERVICE_MINUTES]"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].Columns[SUM_SERVICE_MINUTES]"
                                  name="SUM_SERVICE_MINUTES"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].Columns[AMENDED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].ExternalColumns[AMENDED_ON]"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].Columns[AMENDED_ON]"
                                  name="AMENDED_ON"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].Columns[CREATED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].ExternalColumns[CREATED_ON]"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].Columns[CREATED_ON]"
                                  name="CREATED_ON"
                                  truncationRowDisposition="FailComponent" />
                              </outputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].ExternalColumns[ACALCNS_ID]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  name="ACALCNS_ID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].ExternalColumns[ASSESSMENT_ID]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  name="ASSESSMENT_ID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].ExternalColumns[SUM_SERVICE_MINUTES]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  name="SUM_SERVICE_MINUTES" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].ExternalColumns[AMENDED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  name="AMENDED_ON" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output].ExternalColumns[CREATED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  name="CREATED_ON" />
                              </externalMetadataColumns>
                            </output>
                            <output
                              refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Error Output]"
                              isErrorOut="true"
                              name="OLE DB Source Error Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Error Output].Columns[ACALCNS_ID]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Error Output].Columns[ACALCNS_ID]"
                                  name="ACALCNS_ID" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Error Output].Columns[ASSESSMENT_ID]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Error Output].Columns[ASSESSMENT_ID]"
                                  name="ASSESSMENT_ID" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Error Output].Columns[SUM_SERVICE_MINUTES]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Error Output].Columns[SUM_SERVICE_MINUTES]"
                                  name="SUM_SERVICE_MINUTES" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Error Output].Columns[AMENDED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Error Output].Columns[AMENDED_ON]"
                                  name="AMENDED_ON" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Error Output].Columns[CREATED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Error Output].Columns[CREATED_ON]"
                                  name="CREATED_ON" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Row Count"
                          componentClassID="Microsoft.RowCount"
                          contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                          localeId="1033"
                          name="Row Count">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the variable to hold the row count."
                              name="VariableName">User::ALClientNeedsCnt</property>
                          </properties>
                          <inputs>
                            <input
                              refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Row Count.Inputs[Row Count Input 1]"
                              hasSideEffects="true"
                              name="Row Count Input 1">
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Row Count.Outputs[Row Count Output 1]"
                              name="Row Count Output 1"
                              synchronousInputId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Row Count.Inputs[Row Count Input 1]">
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                      </components>
                      <paths>
                        <path
                          refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs.Paths[Derived Column Output]"
                          endId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination.Inputs[OLE DB Destination Input]"
                          name="Derived Column Output"
                          startId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Derived Column.Outputs[Derived Column Output]" />
                        <path
                          refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs.Paths[OLE DB Source Output]"
                          endId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Row Count.Inputs[Row Count Input 1]"
                          name="OLE DB Source Output"
                          startId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs.Outputs[OLE DB Source Output]" />
                        <path
                          refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs.Paths[Row Count Output 1]"
                          endId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Derived Column.Inputs[Derived Column Input]"
                          name="Row Count Output 1"
                          startId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Row Count.Outputs[Row Count Output 1]" />
                      </paths>
                    </pipeline>
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Update ExtractAudit"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{4ECEB005-5B07-4E3D-9B42-777751F19DB6}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Update ExtractAudit"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="0">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{420F3266-9DA0-4FA8-AAD0-901BE50B5696}"
                      SQLTask:SqlStatementSource="BEGIN&#xA;INSERT PARIS.ExtractAudit (PkgExecKey,RunDate,PARISTableName, LastExtractDate, RecordCnt)&#xA;VALUES (?,GetDate(),'ALClientNeeds',?,?)&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="User::BatchID"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="1"
                        SQLTask:DtsVariableName="User::ExtractStartDateString"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="2"
                        SQLTask:DtsVariableName="User::ALClientNeedsCnt"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active.PrecedenceConstraints[Constraint]"
                  DTS:CreationName=""
                  DTS:DTSID="{9567CD8E-4E87-4089-97F3-8FC9641B9C96}"
                  DTS:From="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint"
                  DTS:To="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Update ExtractAudit" />
              </DTS:PrecedenceConstraints>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Process AL Client Needs.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{CAEFCA55-7F4A-4144-BCD9-83C4E2F7FE89}"
              DTS:From="Package\Sequence Container\Process AL Client Needs\Get IsActive and LastExtractDate"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Process Alert"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{3CA54A00-4640-4AA9-8545-BF7DC3C9D332}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="1033"
          DTS:ObjectName="Process Alert">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Process Alert\Get IsActive and LastExtractDate"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{8E454FA3-A178-4CB3-A2A0-0F4DE3AA3736}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get IsActive and LastExtractDate"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{420F3266-9DA0-4FA8-AAD0-901BE50B5696}"
                  SQLTask:SqlStatementSource="SELECT IsActive, LastExtractDate&#xA;FROM PARIS.ExtractControl&#xA;WHERE PARISTableName = 'Alert'"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="IsActive"
                    SQLTask:DtsVariableName="User::IsActive" />
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="LastExtractDate"
                    SQLTask:DtsVariableName="User::ExtractStartDateString" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Process Alert\Load Alert if active"
              DTS:AssignExpression="@IsActive =  0"
              DTS:CreationName="STOCK:FORLOOP"
              DTS:Description="For Loop Container"
              DTS:DTSID="{A1CFA8C6-ABD1-44E5-8A83-21365DF2F979}"
              DTS:EvalExpression="@IsActive == 1"
              DTS:ExecutableType="STOCK:FORLOOP"
              DTS:InitExpression="@IsActive =  0"
              DTS:LocaleID="-1"
              DTS:MaxConcurrent="1"
              DTS:ObjectName="Load Alert if active">
              <DTS:Variables />
              <DTS:PropertyExpression
                DTS:Name="InitExpression">"@IsActive =  " +(DT_WSTR, 15) @[User::IsActive]</DTS:PropertyExpression>
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert"
                  DTS:CreationName="Microsoft.Pipeline"
                  DTS:Description="Data Flow Task"
                  DTS:DTSID="{5AD50932-9C2D-471D-874D-EA67A637D5A4}"
                  DTS:ExecutableType="Microsoft.Pipeline"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Get Alert"
                  DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <pipeline
                      version="1">
                      <components>
                        <component
                          refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Derived Column"
                          componentClassID="Microsoft.DerivedColumn"
                          contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                          localeId="1033"
                          name="Derived Column"
                          usesDispositions="true">
                          <inputs>
                            <input
                              refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Derived Column.Inputs[Derived Column Input]"
                              description="Input to the Derived Column Transformation"
                              name="Derived Column Input">
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Derived Column.Outputs[Derived Column Output]"
                              description="Default Output of the Derived Column Transformation"
                              exclusionGroup="1"
                              name="Derived Column Output"
                              synchronousInputId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Derived Column.Inputs[Derived Column Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Derived Column.Outputs[Derived Column Output].Columns[ExtractDate]"
                                  dataType="date"
                                  errorOrTruncationOperation="Computation"
                                  errorRowDisposition="FailComponent"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Derived Column.Outputs[Derived Column Output].Columns[ExtractDate]"
                                  name="ExtractDate"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Expression"
                                      name="Expression">@[User::ExtractDate]</property>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Friendly Expression"
                                      expressionType="Notify"
                                      name="FriendlyExpression">@[User::ExtractDate]</property>
                                  </properties>
                                </outputColumn>
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Derived Column.Outputs[Derived Column Error Output]"
                              description="Error Output of the Derived Column Transformation"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="Derived Column Error Output"
                              synchronousInputId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Derived Column.Inputs[Derived Column Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name"
                          componentClassID="Microsoft.OLEDBDestination"
                          contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                          description="OLE DB Destination"
                          localeId="1033"
                          name="i changed the destination name"
                          usesDispositions="true"
                          version="4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                              name="CommandTimeout">0</property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the database object used to open a rowset."
                              name="OpenRowset">[PARIS].[Alert]</property>
                            <property
                              dataType="System.String"
                              description="Specifies the variable that contains the name of the database object used to open a rowset."
                              name="OpenRowsetVariable"></property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the column code page to use when code page information is unavailable from the data source."
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Boolean"
                              description="Forces the use of the DefaultCodePage property value when describing character data."
                              name="AlwaysUseDefaultCodePage">true</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the mode used to access the database."
                              name="AccessMode"
                              typeConverter="AccessMode">3</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                              name="FastLoadKeepIdentity">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                              name="FastLoadKeepNulls">false</property>
                            <property
                              dataType="System.String"
                              description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                              name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                              name="FastLoadMaxInsertCommitSize">2147483647</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Connections[OleDbConnection]"
                              connectionManagerID="Package.ConnectionManagers[Landing]"
                              connectionManagerRefId="Package.ConnectionManagers[Landing]"
                              description="The OLE DB runtime connection used to access the database."
                              name="OleDbConnection" />
                          </connections>
                          <inputs>
                            <input
                              refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input]"
                              errorOrTruncationOperation="Insert"
                              errorRowDisposition="FailComponent"
                              hasSideEffects="true"
                              name="OLE DB Destination Input">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].Columns[CREATED_ON]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="75"
                                  cachedName="CREATED_ON"
                                  externalMetadataColumnId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[SourceRecordCreateDateStr]"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[CREATED_ON]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].Columns[PARIS_ID]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="40"
                                  cachedName="PARIS_ID"
                                  externalMetadataColumnId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[SourceSystemClientIDStr]"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[PARIS_ID]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].Columns[ALERT_ID]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="40"
                                  cachedName="ALERT_ID"
                                  externalMetadataColumnId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[SourceAlertIDStr]"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[ALERT_ID]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].Columns[ALERT]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="32"
                                  cachedName="ALERT"
                                  externalMetadataColumnId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[AlertCode]"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[ALERT]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].Columns[ALERT_INAC_DATE]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="75"
                                  cachedName="ALERT_INAC_DATE"
                                  externalMetadataColumnId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[AlertInactiveDateStr]"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[ALERT_INAC_DATE]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].Columns[AMENDED_ON]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="75"
                                  cachedName="AMENDED_ON"
                                  externalMetadataColumnId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[AlertAmendedDateStr]"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[AMENDED_ON]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].Columns[ALERT_DATE]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="75"
                                  cachedName="ALERT_DATE"
                                  externalMetadataColumnId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[AlertDateStr]"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[ALERT_DATE]" />
                                <inputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].Columns[ExtractDate]"
                                  cachedDataType="date"
                                  cachedName="ExtractDate"
                                  externalMetadataColumnId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[SourceSystemLastUpdateDate]"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Derived Column.Outputs[Derived Column Output].Columns[ExtractDate]" />
                              </inputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[SourceSystemLastUpdateDate]"
                                  dataType="dbTimeStamp"
                                  name="SourceSystemLastUpdateDate" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[SourceRecordCreateDateStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="SourceRecordCreateDateStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[SourceSystemClientIDStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="SourceSystemClientIDStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[SourceRecordCreateDate]"
                                  dataType="dbTimeStamp"
                                  name="SourceRecordCreateDate" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[SourceAlertIDStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="SourceAlertIDStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[AlertCode]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="AlertCode" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[AlertDateStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="AlertDateStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[AlertInactiveDateStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="AlertInactiveDateStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[AlertAmendedDateStr]"
                                  codePage="1252"
                                  dataType="str"
                                  length="100"
                                  name="AlertAmendedDateStr" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[SourceAlertID]"
                                  dataType="i4"
                                  name="SourceAlertID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[AlertDateID]"
                                  dataType="i4"
                                  name="AlertDateID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[AlertInactiveDateID]"
                                  dataType="i4"
                                  name="AlertInactiveDateID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[AlertAmendedDate]"
                                  dataType="dbTimeStamp"
                                  name="AlertAmendedDate" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[ReLoadFlag]"
                                  dataType="bool"
                                  name="ReLoadFlag" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input].ExternalColumns[SourceSystemClientID]"
                                  dataType="i4"
                                  name="SourceSystemClientID" />
                              </externalMetadataColumns>
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Outputs[OLE DB Destination Error Output]"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="OLE DB Destination Error Output"
                              synchronousInputId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert"
                          componentClassID="Microsoft.OLEDBSource"
                          contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                          description="OLE DB Source"
                          localeId="1033"
                          name="OLE DB Source Alert"
                          usesDispositions="true"
                          version="7">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                              name="CommandTimeout">0</property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the database object used to open a rowset."
                              name="OpenRowset"></property>
                            <property
                              dataType="System.String"
                              description="Specifies the variable that contains the name of the database object used to open a rowset."
                              name="OpenRowsetVariable"></property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT 
  NVL(TO_CHAR(a.art_id),' ') alert_id
,NVL(TO_CHAR(a.art_per_id),' ') paris_id
,NVL(a.art_alert,' ') alert
,NVL(TO_CHAR(a.art_alerted_on,'YYYYMMDD'),' ') alert_date
,NVL(TO_CHAR(a.art_inactive_on,'YYYYMMDD'),' ') alert_inac_date
,TO_CHAR(a.art_created_on,'YYYYMMDD') created_on
,TO_CHAR(a.art_amended_on,'YYYYMMDD') amended_on
FROM paris.art_alert a
WHERE a.art_alert = 'OEL' -- Extended Leave Alerts
/* AND (pd.created_date &gt;= p_extract_date OR
(pd.created_date &lt; p_extract_date AND TRUNC(a.art_amended_on) &gt;= p_range_start_date))*/
   
and rownum &lt; 1001</property>
                            <property
                              dataType="System.String"
                              description="The variable that contains the SQL command to be executed."
                              name="SqlCommandVariable">User::SQLAlertStr</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the column code page to use when code page information is unavailable from the data source."
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Boolean"
                              description="Forces the use of the DefaultCodePage property value when describing character data."
                              name="AlwaysUseDefaultCodePage">true</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the mode used to access the database."
                              name="AccessMode"
                              typeConverter="AccessMode">3</property>
                            <property
                              dataType="System.String"
                              description="The mappings between the parameters in the SQL command and variables."
                              name="ParameterMapping"></property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Connections[OleDbConnection]"
                              connectionManagerID="Package.ConnectionManagers[PARIS]"
                              connectionManagerRefId="Package.ConnectionManagers[PARIS]"
                              description="The OLE DB runtime connection used to access the database."
                              name="OleDbConnection" />
                          </connections>
                          <outputs>
                            <output
                              refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output]"
                              name="OLE DB Source Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[AMENDED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].ExternalColumns[AMENDED_ON]"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[AMENDED_ON]"
                                  name="AMENDED_ON"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[CREATED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].ExternalColumns[CREATED_ON]"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[CREATED_ON]"
                                  name="CREATED_ON"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[PARIS_ID]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].ExternalColumns[PARIS_ID]"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[PARIS_ID]"
                                  name="PARIS_ID"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[ALERT_ID]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].ExternalColumns[ALERT_ID]"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[ALERT_ID]"
                                  name="ALERT_ID"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[ALERT]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].ExternalColumns[ALERT]"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[ALERT]"
                                  name="ALERT"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[ALERT_DATE]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].ExternalColumns[ALERT_DATE]"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[ALERT_DATE]"
                                  name="ALERT_DATE"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[ALERT_INAC_DATE]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].ExternalColumns[ALERT_INAC_DATE]"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].Columns[ALERT_INAC_DATE]"
                                  name="ALERT_INAC_DATE"
                                  truncationRowDisposition="FailComponent" />
                              </outputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].ExternalColumns[AMENDED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  name="AMENDED_ON" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].ExternalColumns[CREATED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  name="CREATED_ON" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].ExternalColumns[PARIS_ID]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  name="PARIS_ID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].ExternalColumns[ALERT_ID]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  name="ALERT_ID" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].ExternalColumns[ALERT]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  name="ALERT" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].ExternalColumns[ALERT_DATE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  name="ALERT_DATE" />
                                <externalMetadataColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output].ExternalColumns[ALERT_INAC_DATE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  name="ALERT_INAC_DATE" />
                              </externalMetadataColumns>
                            </output>
                            <output
                              refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Error Output]"
                              isErrorOut="true"
                              name="OLE DB Source Error Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Error Output].Columns[AMENDED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Error Output].Columns[AMENDED_ON]"
                                  name="AMENDED_ON" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Error Output].Columns[CREATED_ON]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Error Output].Columns[CREATED_ON]"
                                  name="CREATED_ON" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Error Output].Columns[PARIS_ID]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Error Output].Columns[PARIS_ID]"
                                  name="PARIS_ID" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Error Output].Columns[ALERT_ID]"
                                  codePage="1252"
                                  dataType="str"
                                  length="40"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Error Output].Columns[ALERT_ID]"
                                  name="ALERT_ID" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Error Output].Columns[ALERT]"
                                  codePage="1252"
                                  dataType="str"
                                  length="32"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Error Output].Columns[ALERT]"
                                  name="ALERT" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Error Output].Columns[ALERT_DATE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Error Output].Columns[ALERT_DATE]"
                                  name="ALERT_DATE" />
                                <outputColumn
                                  refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Error Output].Columns[ALERT_INAC_DATE]"
                                  codePage="1252"
                                  dataType="str"
                                  length="75"
                                  lineageId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Error Output].Columns[ALERT_INAC_DATE]"
                                  name="ALERT_INAC_DATE" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Row Count"
                          componentClassID="Microsoft.RowCount"
                          contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                          localeId="1033"
                          name="Row Count">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the variable to hold the row count."
                              name="VariableName">User::AlertCnt</property>
                          </properties>
                          <inputs>
                            <input
                              refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Row Count.Inputs[Row Count Input 1]"
                              hasSideEffects="true"
                              name="Row Count Input 1">
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Row Count.Outputs[Row Count Output 1]"
                              name="Row Count Output 1"
                              synchronousInputId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Row Count.Inputs[Row Count Input 1]">
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                      </components>
                      <paths>
                        <path
                          refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert.Paths[Derived Column Output]"
                          endId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name.Inputs[OLE DB Destination Input]"
                          name="Derived Column Output"
                          startId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Derived Column.Outputs[Derived Column Output]" />
                        <path
                          refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert.Paths[OLE DB Source Output]"
                          endId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Row Count.Inputs[Row Count Input 1]"
                          name="OLE DB Source Output"
                          startId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert.Outputs[OLE DB Source Output]" />
                        <path
                          refId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert.Paths[Row Count Output 1]"
                          endId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Derived Column.Inputs[Derived Column Input]"
                          name="Row Count Output 1"
                          startId="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Row Count.Outputs[Row Count Output 1]" />
                      </paths>
                    </pipeline>
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\Sequence Container\Process Alert\Load Alert if active\Update ExtractAudit"
                  DTS:CreationName="Microsoft.ExecuteSQLTask"
                  DTS:Description="Execute SQL Task"
                  DTS:DTSID="{FD89FB2C-E6B5-4806-917C-F596F4D797BB}"
                  DTS:ExecutableType="Microsoft.ExecuteSQLTask"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Update ExtractAudit"
                  DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
                  DTS:ThreadHint="0">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <SQLTask:SqlTaskData
                      SQLTask:Connection="{420F3266-9DA0-4FA8-AAD0-901BE50B5696}"
                      SQLTask:SqlStatementSource="BEGIN&#xA;INSERT PARIS.ExtractAudit (PkgExecKey,RunDate,PARISTableName, LastExtractDate, RecordCnt)&#xA;VALUES (?,GetDate(),'Alert',?,?)&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="0"
                        SQLTask:DtsVariableName="User::BatchID"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="1"
                        SQLTask:DtsVariableName="User::ExtractStartDateString"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="129"
                        SQLTask:ParameterSize="-1" />
                      <SQLTask:ParameterBinding
                        SQLTask:ParameterName="2"
                        SQLTask:DtsVariableName="User::AlertCnt"
                        SQLTask:ParameterDirection="Input"
                        SQLTask:DataType="3"
                        SQLTask:ParameterSize="-1" />
                    </SQLTask:SqlTaskData>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\Sequence Container\Process Alert\Load Alert if active.PrecedenceConstraints[Constraint]"
                  DTS:CreationName=""
                  DTS:DTSID="{B54D12A7-1723-42B9-B8CE-E3FCB66D03E8}"
                  DTS:From="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint"
                  DTS:To="Package\Sequence Container\Process Alert\Load Alert if active\Update ExtractAudit" />
              </DTS:PrecedenceConstraints>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Process Alert.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{9DCD90CC-6637-4923-ADEA-353371D46D4B}"
              DTS:From="Package\Sequence Container\Process Alert\Get IsActive and LastExtractDate"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container\Process Alert\Load Alert if active" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{EE3D3AA5-B05C-4664-81D0-8E9CD4D2810A}"
          DTS:From="Package\Sequence Container\Process AL Client Needs"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container\Process Alert" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{488B5C23-0F5C-46FF-A500-F9B8C365651A}"
          DTS:From="Package\Sequence Container\Process ACISMedication"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Sequence Container\Process Address" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{E4755084-92FB-42D8-9D92-731F8F1DD79A}"
          DTS:From="Package\Sequence Container\Process Address"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Sequence Container\Process AL Client Needs" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{40DA00A5-3883-4224-B1EA-7722520F458F}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{A71821E6-37C1-49AD-A577-2164C55EB186}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="234,42"
          Id="Package\Sequence Container\Process ACISMedication\Get IsActive and LastExtractDate"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="172,42"
          Id="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication"
          TopLeft="6.50000000000001,5.5" />
        <NodeLayout
          Size="174,42"
          Id="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Update ExtractAudit"
          TopLeft="5.50000000000001,107.5" />
        <EdgeLayout
          Id="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active.PrecedenceConstraints[Constraint]"
          TopLeft="92.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="206,158.666666666667"
          Size="206,202"
          Id="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active"
          TopLeft="12.8571428571428,107.5" />
        <EdgeLayout
          Id="Package\Sequence Container\Process ACISMedication.PrecedenceConstraints[Constraint]"
          TopLeft="119.178571428571,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="245.333333333334,321.333333333334"
          Size="245.333333333334,364"
          Id="Package\Sequence Container\Process ACISMedication"
          TopLeft="34.0714285714295,22.6428571428569" />
        <NodeLayout
          Size="234,42"
          Id="Package\Sequence Container\Process Address\Get IsActive and LastExtractDate"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="136,42"
          Id="Package\Sequence Container\Process Address\Load Address if active\Get Address"
          TopLeft="24.5,5.5" />
        <NodeLayout
          Size="174,42"
          Id="Package\Sequence Container\Process Address\Load Address if active\Update ExtractAudit"
          TopLeft="5.50000000000001,107.5" />
        <EdgeLayout
          Id="Package\Sequence Container\Process Address\Load Address if active.PrecedenceConstraints[Constraint]"
          TopLeft="92.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="185.333333333334,162"
          Size="185.333333333334,205.333333333334"
          Id="Package\Sequence Container\Process Address\Load Address if active"
          TopLeft="30,107.5" />
        <EdgeLayout
          Id="Package\Sequence Container\Process Address.PrecedenceConstraints[Constraint]"
          TopLeft="122.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="245.333333333334,325.333333333334"
          Size="245.333333333334,368"
          Id="Package\Sequence Container\Process Address"
          TopLeft="327.785714285716,31.3730158730145" />
        <NodeLayout
          Size="234,42"
          Id="Package\Sequence Container\Process AL Client Needs\Get IsActive and LastExtractDate"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="172,42"
          Id="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs"
          TopLeft="6.00000000000001,5.5" />
        <NodeLayout
          Size="173.333333333334,42"
          Id="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Update ExtractAudit"
          TopLeft="5.50000000000001,107.5" />
        <EdgeLayout
          Id="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active.PrecedenceConstraints[Constraint]"
          TopLeft="92,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="198,164"
          Size="198,206.666666666667"
          Id="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active"
          TopLeft="30.5,107.5" />
        <EdgeLayout
          Id="Package\Sequence Container\Process AL Client Needs.PrecedenceConstraints[Constraint]"
          TopLeft="126,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="245.333333333334,325.333333333334"
          Size="245.333333333334,368"
          Id="Package\Sequence Container\Process AL Client Needs"
          TopLeft="628,20.5000000000005" />
        <NodeLayout
          Size="234,42"
          Id="Package\Sequence Container\Process Alert\Get IsActive and LastExtractDate"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="120,42"
          Id="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert"
          TopLeft="32,5.5" />
        <NodeLayout
          Size="173.333333333334,42"
          Id="Package\Sequence Container\Process Alert\Load Alert if active\Update ExtractAudit"
          TopLeft="6.92857142857156,100.357142857143" />
        <EdgeLayout
          Id="Package\Sequence Container\Process Alert\Load Alert if active.PrecedenceConstraints[Constraint]"
          TopLeft="92.7142857142858,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52.8571428571429"
              Start="0,0"
              End="0,45.3571428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.3571428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="184,154.666666666667"
          Size="184,198"
          Id="Package\Sequence Container\Process Alert\Load Alert if active"
          TopLeft="30.5,107.5" />
        <EdgeLayout
          Id="Package\Sequence Container\Process Alert.PrecedenceConstraints[Constraint]"
          TopLeft="122.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="245.333333333334,310.666666666667"
          Size="245.333333333334,354"
          Id="Package\Sequence Container\Process Alert"
          TopLeft="924.5,27.3571428571428" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="873,204.428571428572">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="51.5,0"
              Start="0,0"
              End="44,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="44,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="279.071428571429,204.642857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="48.7142857142861,10.7301587301577"
              Start="0,0"
              End="41.2142857142861,10.7301587301577">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="20.3571428571431,0" />
                  <mssgle:CubicBezierSegment
                    Point1="20.3571428571431,0"
                    Point2="24.3571428571431,0"
                    Point3="24.3571428571431,4" />
                  <mssgle:LineSegment
                    End="24.3571428571431,6.73015873015765" />
                  <mssgle:CubicBezierSegment
                    Point1="24.3571428571431,6.73015873015765"
                    Point2="24.3571428571431,10.7301587301577"
                    Point3="28.3571428571431,10.7301587301577" />
                  <mssgle:LineSegment
                    End="41.2142857142861,10.7301587301577" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="572.785714285716,215.373015873015">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="55.2142857142844,-10.8730158730141"
              Start="0,0"
              End="47.7142857142844,-10.8730158730141">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="23.6071428571422,0" />
                  <mssgle:CubicBezierSegment
                    Point1="23.6071428571422,0"
                    Point2="27.6071428571422,0"
                    Point3="27.6071428571422,-4" />
                  <mssgle:LineSegment
                    End="27.6071428571422,-6.87301587301408" />
                  <mssgle:CubicBezierSegment
                    Point1="27.6071428571422,-6.87301587301408"
                    Point2="27.6071428571422,-10.8730158730141"
                    Point3="31.6071428571422,-10.8730158730141" />
                  <mssgle:LineSegment
                    End="47.7142857142844,-10.8730158730141" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1546,4266.66666666667"
          Size="1546,4310"
          Id="Package\Sequence Container"
          TopLeft="694.071428571429,1375.65873015873" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="170.666666666667,42"
          Id="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination"
          TopLeft="74,322" />
        <NodeLayout
          Size="226.666666666667,42"
          Id="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication"
          TopLeft="60,60" />
        <NodeLayout
          Size="154,42"
          Id="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Derived Column"
          TopLeft="85,237" />
        <NodeLayout
          Size="130,42"
          Id="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\Row Count"
          TopLeft="69,167" />
        <EdgeLayout
          Id="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication.Paths[OLE DB Source Output]"
          TopLeft="173.5,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-39.5,65"
              Start="0,0"
              End="-39.5,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.5"
                    Point2="0,32.5"
                    Point3="-4,32.5" />
                  <mssgle:LineSegment
                    End="-35.5,32.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-35.5,32.5"
                    Point2="-39.5,32.5"
                    Point3="-39.5,36.5" />
                  <mssgle:LineSegment
                    End="-39.5,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication.Paths[Derived Column Output]"
          TopLeft="160.75,279">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43"
              Start="0,0"
              End="0,35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication.Paths[Row Count Output 1]"
          TopLeft="134,209">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28,28"
              Start="0,0"
              End="28,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10"
                    Point2="0,14"
                    Point3="4,14" />
                  <mssgle:LineSegment
                    End="24,14" />
                  <mssgle:CubicBezierSegment
                    Point1="24,14"
                    Point2="28,14"
                    Point3="28,18" />
                  <mssgle:LineSegment
                    End="28,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\Process ACISMedication\Load ACISMedication if active\Get ACISMedication\OLE DB Source ACISMedication">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Sequence Container\Process Address\Load Address if active\Get Address">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="130,42"
          Id="Package\Sequence Container\Process Address\Load Address if active\Get Address\Row Count"
          TopLeft="69,167" />
        <NodeLayout
          Size="171,42"
          Id="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination"
          TopLeft="74,322" />
        <NodeLayout
          Size="154,42"
          Id="Package\Sequence Container\Process Address\Load Address if active\Get Address\Derived Column"
          TopLeft="80,242" />
        <NodeLayout
          Size="191,42"
          Id="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address"
          TopLeft="60,60" />
        <EdgeLayout
          Id="Package\Sequence Container\Process Address\Load Address if active\Get Address.Paths[Row Count Output 1]"
          TopLeft="134,209">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="23,33"
              Start="0,0"
              End="23,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.5"
                    Point2="0,16.5"
                    Point3="4,16.5" />
                  <mssgle:LineSegment
                    End="19,16.5" />
                  <mssgle:CubicBezierSegment
                    Point1="19,16.5"
                    Point2="23,16.5"
                    Point3="23,20.5" />
                  <mssgle:LineSegment
                    End="23,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Process Address\Load Address if active\Get Address.Paths[OLE DB Source Output]"
          TopLeft="155.5,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-21.5,65"
              Start="0,0"
              End="-21.5,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.5"
                    Point2="0,32.5"
                    Point3="-4,32.5" />
                  <mssgle:LineSegment
                    End="-17.5,32.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-17.5,32.5"
                    Point2="-21.5,32.5"
                    Point3="-21.5,36.5" />
                  <mssgle:LineSegment
                    End="-21.5,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Process Address\Load Address if active\Get Address.Paths[Derived Column Output]"
          TopLeft="158.25,284">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\Process Address\Load Address if active\Get Address\OLE DB Source Address">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="130,42"
          Id="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Row Count"
          TopLeft="212,210" />
        <NodeLayout
          Size="171,42"
          Id="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination"
          TopLeft="217,365" />
        <NodeLayout
          Size="154,42"
          Id="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\Derived Column"
          TopLeft="217,288" />
        <NodeLayout
          Size="227,42"
          Id="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs"
          TopLeft="203,103" />
        <EdgeLayout
          Id="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs.Paths[Row Count Output 1]"
          TopLeft="277,252">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="17,36"
              Start="0,0"
              End="17,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14"
                    Point2="0,18"
                    Point3="4,18" />
                  <mssgle:LineSegment
                    End="13,18" />
                  <mssgle:CubicBezierSegment
                    Point1="13,18"
                    Point2="17,18"
                    Point3="17,22" />
                  <mssgle:LineSegment
                    End="17,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs.Paths[OLE DB Source Output]"
          TopLeft="316.5,145">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-39.5,65"
              Start="0,0"
              End="-39.5,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.5"
                    Point2="0,32.5"
                    Point3="-4,32.5" />
                  <mssgle:LineSegment
                    End="-35.5,32.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-35.5,32.5"
                    Point2="-39.5,32.5"
                    Point3="-39.5,36.5" />
                  <mssgle:LineSegment
                    End="-39.5,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs.Paths[Derived Column Output]"
          TopLeft="294,330">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8.5,35"
              Start="0,0"
              End="8.5,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.5"
                    Point2="0,17.5"
                    Point3="4,17.5" />
                  <mssgle:LineSegment
                    End="4.5,17.5" />
                  <mssgle:CubicBezierSegment
                    Point1="4.5,17.5"
                    Point2="8.5,17.5"
                    Point3="8.5,21.5" />
                  <mssgle:LineSegment
                    End="8.5,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\Process AL Client Needs\Load ALClientNeeds if active\Get AL Client Needs\OLE DB Source AL Client Needs">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="174.666666666667,42"
          Id="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert"
          TopLeft="225,50" />
        <NodeLayout
          Size="228,42.6666666666667"
          Id="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name"
          TopLeft="239,312" />
        <NodeLayout
          Size="130,42"
          Id="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Row Count"
          TopLeft="234,157" />
        <NodeLayout
          Size="154,42"
          Id="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\Derived Column"
          TopLeft="250,235" />
        <EdgeLayout
          Id="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert.Paths[Row Count Output 1]"
          TopLeft="299,199">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28,36"
              Start="0,0"
              End="28,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14"
                    Point2="0,18"
                    Point3="4,18" />
                  <mssgle:LineSegment
                    End="24,18" />
                  <mssgle:CubicBezierSegment
                    Point1="24,18"
                    Point2="28,18"
                    Point3="28,22" />
                  <mssgle:LineSegment
                    End="28,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert.Paths[OLE DB Source Output]"
          TopLeft="312.5,92">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-13.5,65"
              Start="0,0"
              End="-13.5,57.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.5"
                    Point2="0,32.5"
                    Point3="-4,32.5" />
                  <mssgle:LineSegment
                    End="-9.5,32.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-9.5,32.5"
                    Point2="-13.5,32.5"
                    Point3="-13.5,36.5" />
                  <mssgle:LineSegment
                    End="-13.5,57.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert.Paths[Derived Column Output]"
          TopLeft="327,277">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="26,35"
              Start="0,0"
              End="26,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.5"
                    Point2="0,17.5"
                    Point3="4,17.5" />
                  <mssgle:LineSegment
                    End="22,17.5" />
                  <mssgle:CubicBezierSegment
                    Point1="22,17.5"
                    Point2="26,17.5"
                    Point3="26,21.5" />
                  <mssgle:LineSegment
                    End="26,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\OLE DB Source Alert">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\Process Alert\Load Alert if active\Get Alert\i changed the destination name">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>